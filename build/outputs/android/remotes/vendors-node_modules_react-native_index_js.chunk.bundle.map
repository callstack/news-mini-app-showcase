{"version":3,"file":"vendors-node_modules_react-native_index_js.chunk.bundle","mappings":"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ACA;AACA;;AAEA;AACA;AACA;AACA,MAAM;;;AAGN;AACA;AACA,KAAK,GAAG;;AAER,kDAAkD;AAClD;AACA;;AAEA;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;AAEA;;AAEA;;AAEA;AACA;AACA;AACA;AACA;AACA,wCAAwC;AACxC;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA,IAAI;AACJ;AACA;AACA;;;AAGA;;AAEA;AACA;AACA;;AAEA;AACA;;AAEA;AACA;AACA;AACA,IAAI;AACJ;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,gDAAgD,KAAK;AACrD;;;AAGA;AACA;AACA;AACA;AACA;AACA,GAAG;AACH;AACA,kCAAkC;AAClC;AACA;;;AAGA;AACA;AACA,oCAAoC;AACpC;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA,OAAO;AACP;AACA,GAAG;AACH;AACA;AACA;AACA;AACA;AACA;AACA;AACA,OAAO;AACP;;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,SAAS;AACT;AACA,OAAO;;;AAGP;AACA,GAAG;AACH;AACA;AACA;;AAEA;AACA;AACA;;AAEA;AACA;AACA;AACA,IAAI;AACJ;AACA;AACA;;AAEA;AACA;;AAEA,4BAA4B;AAC5B;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,GAAG;AACH;;;;;;;;;;;;AClOa;;AAEb,IAAI,KAAqC,EAAE,EAE1C,CAAC;AACF,EAAE,sMAAqF;AACvF","sources":["webpack:///./node_modules/react-native/Libraries/ActionSheetIOS/ActionSheetIOS.js","webpack:///./node_modules/react-native/Libraries/ActionSheetIOS/NativeActionSheetManager.js","webpack:///./node_modules/react-native/Libraries/Animated/useAnimatedValue.js","webpack:///./node_modules/react-native/Libraries/Components/AccessibilityInfo/AccessibilityInfo.js","webpack:///./node_modules/react-native/Libraries/Components/AccessibilityInfo/NativeAccessibilityInfo.js","webpack:///./node_modules/react-native/Libraries/Components/AccessibilityInfo/NativeAccessibilityManager.js","webpack:///./node_modules/react-native/Libraries/Components/ActivityIndicator/ActivityIndicator.js","webpack:///./node_modules/react-native/Libraries/Components/ActivityIndicator/ActivityIndicatorViewNativeComponent.js","webpack:///./node_modules/react-native/Libraries/Components/Button.js","webpack:///./node_modules/react-native/Libraries/Components/Clipboard/Clipboard.js","webpack:///./node_modules/react-native/Libraries/Components/Clipboard/NativeClipboard.js","webpack:///./node_modules/react-native/Libraries/Components/DatePicker/DatePickerIOS.android.js","webpack:///./node_modules/react-native/Libraries/Components/DrawerAndroid/AndroidDrawerLayoutNativeComponent.js","webpack:///./node_modules/react-native/Libraries/Components/DrawerAndroid/DrawerLayoutAndroid.android.js","webpack:///./node_modules/react-native/Libraries/Components/Keyboard/KeyboardAvoidingView.js","webpack:///./node_modules/react-native/Libraries/Components/Pressable/Pressable.js","webpack:///./node_modules/react-native/Libraries/Components/Pressable/useAndroidRippleForView.js","webpack:///./node_modules/react-native/Libraries/Components/ProgressBarAndroid/ProgressBarAndroid.android.js","webpack:///./node_modules/react-native/Libraries/Components/ProgressBarAndroid/ProgressBarAndroidNativeComponent.js","webpack:///./node_modules/react-native/Libraries/Components/ProgressViewIOS/ProgressViewIOS.android.js","webpack:///./node_modules/react-native/Libraries/Components/Slider/Slider.js","webpack:///./node_modules/react-native/Libraries/Components/Slider/SliderNativeComponent.js","webpack:///./node_modules/react-native/Libraries/Components/Switch/AndroidSwitchNativeComponent.js","webpack:///./node_modules/react-native/Libraries/Components/Switch/Switch.js","webpack:///./node_modules/react-native/Libraries/Components/Switch/SwitchNativeComponent.js","webpack:///./node_modules/react-native/Libraries/Components/TextInput/InputAccessoryView.js","webpack:///./node_modules/react-native/Libraries/Components/TextInput/RCTInputAccessoryViewNativeComponent.js","webpack:///./node_modules/react-native/Libraries/Components/TextInput/RCTMultilineTextInputNativeComponent.js","webpack:///./node_modules/react-native/Libraries/Components/TextInput/TextInput.js","webpack:///./node_modules/react-native/Libraries/Components/ToastAndroid/NativeToastAndroid.js","webpack:///./node_modules/react-native/Libraries/Components/ToastAndroid/ToastAndroid.android.js","webpack:///./node_modules/react-native/Libraries/Components/Touchable/BoundingDimensions.js","webpack:///./node_modules/react-native/Libraries/Components/Touchable/PooledClass.js","webpack:///./node_modules/react-native/Libraries/Components/Touchable/Position.js","webpack:///./node_modules/react-native/Libraries/Components/Touchable/Touchable.js","webpack:///./node_modules/react-native/Libraries/Components/Touchable/TouchableNativeFeedback.js","webpack:///./node_modules/react-native/Libraries/Components/Touchable/TouchableOpacity.js","webpack:///./node_modules/react-native/Libraries/Image/ImageBackground.js","webpack:///./node_modules/react-native/Libraries/Interaction/PanResponder.js","webpack:///./node_modules/react-native/Libraries/Interaction/TouchHistoryMath.js","webpack:///./node_modules/react-native/Libraries/Linking/Linking.js","webpack:///./node_modules/react-native/Libraries/Linking/NativeIntentAndroid.js","webpack:///./node_modules/react-native/Libraries/Linking/NativeLinkingManager.js","webpack:///./node_modules/react-native/Libraries/Modal/Modal.js","webpack:///./node_modules/react-native/Libraries/Modal/ModalInjection.js","webpack:///./node_modules/react-native/Libraries/Modal/NativeModalManager.js","webpack:///./node_modules/react-native/Libraries/Modal/RCTModalHostViewNativeComponent.js","webpack:///./node_modules/react-native/Libraries/PermissionsAndroid/NativePermissionsAndroid.js","webpack:///./node_modules/react-native/Libraries/PermissionsAndroid/PermissionsAndroid.js","webpack:///./node_modules/react-native/Libraries/PushNotificationIOS/NativePushNotificationManagerIOS.js","webpack:///./node_modules/react-native/Libraries/PushNotificationIOS/PushNotificationIOS.js","webpack:///./node_modules/react-native/Libraries/Settings/Settings.android.js","webpack:///./node_modules/react-native/Libraries/Share/NativeShareModule.js","webpack:///./node_modules/react-native/Libraries/Share/Share.js","webpack:///./node_modules/react-native/Libraries/StyleSheet/PlatformColorValueTypesIOS.js","webpack:///./node_modules/react-native/Libraries/Utilities/Appearance.js","webpack:///./node_modules/react-native/Libraries/Utilities/DebugEnvironment.js","webpack:///./node_modules/react-native/Libraries/Utilities/NativeAppearance.js","webpack:///./node_modules/react-native/Libraries/Utilities/useColorScheme.js","webpack:///./node_modules/react-native/Libraries/Utilities/useWindowDimensions.js","webpack:///./node_modules/react-native/Libraries/Vibration/NativeVibration.js","webpack:///./node_modules/react-native/Libraries/Vibration/Vibration.js","webpack:///./node_modules/react-native/Libraries/YellowBox/YellowBoxDeprecated.js","webpack:///./node_modules/react-native/index.js","webpack:///./node_modules/nullthrows/nullthrows.js","webpack:///./node_modules/use-sync-external-store/cjs/use-sync-external-store-shim.native.development.js","webpack:///./node_modules/use-sync-external-store/shim/index.native.js"],"sourcesContent":["/**\n * Copyright (c) Meta Platforms, Inc. and affiliates.\n *\n * This source code is licensed under the MIT license found in the\n * LICENSE file in the root directory of this source tree.\n *\n * @flow\n * @format\n */\n\nimport type {ProcessedColorValue} from '../StyleSheet/processColor';\nimport type {ColorValue} from '../StyleSheet/StyleSheet';\n\nimport RCTActionSheetManager from './NativeActionSheetManager';\n\nconst processColor = require('../StyleSheet/processColor');\nconst invariant = require('invariant');\n\n/**\n * Display action sheets and share sheets on iOS.\n *\n * See https://reactnative.dev/docs/actionsheetios\n */\nconst ActionSheetIOS = {\n  /**\n   * Display an iOS action sheet.\n   *\n   * The `options` object must contain one or more of:\n   *\n   * - `options` (array of strings) - a list of button titles (required)\n   * - `cancelButtonIndex` (int) - index of cancel button in `options`\n   * - `destructiveButtonIndex` (int or array of ints) - index or indices of destructive buttons in `options`\n   * - `title` (string) - a title to show above the action sheet\n   * - `message` (string) - a message to show below the title\n   * - `disabledButtonIndices` (array of numbers) - a list of button indices which should be disabled\n   *\n   * The 'callback' function takes one parameter, the zero-based index\n   * of the selected item.\n   *\n   * See https://reactnative.dev/docs/actionsheetios#showactionsheetwithoptions\n   */\n  showActionSheetWithOptions(\n    options: {|\n      +title?: ?string,\n      +message?: ?string,\n      +options: Array<string>,\n      +destructiveButtonIndex?: ?number | ?Array<number>,\n      +cancelButtonIndex?: ?number,\n      +anchor?: ?number,\n      +tintColor?: ColorValue | ProcessedColorValue,\n      +cancelButtonTintColor?: ColorValue | ProcessedColorValue,\n      +userInterfaceStyle?: string,\n      +disabledButtonIndices?: Array<number>,\n    |},\n    callback: (buttonIndex: number) => void,\n  ) {\n    invariant(\n      typeof options === 'object' && options !== null,\n      'Options must be a valid object',\n    );\n    invariant(typeof callback === 'function', 'Must provide a valid callback');\n    invariant(RCTActionSheetManager, \"ActionSheetManager doesn't exist\");\n\n    const {\n      tintColor,\n      cancelButtonTintColor,\n      destructiveButtonIndex,\n      ...remainingOptions\n    } = options;\n    let destructiveButtonIndices = null;\n\n    if (Array.isArray(destructiveButtonIndex)) {\n      destructiveButtonIndices = destructiveButtonIndex;\n    } else if (typeof destructiveButtonIndex === 'number') {\n      destructiveButtonIndices = [destructiveButtonIndex];\n    }\n\n    const processedTintColor = processColor(tintColor);\n    const processedCancelButtonTintColor = processColor(cancelButtonTintColor);\n    invariant(\n      processedTintColor == null || typeof processedTintColor === 'number',\n      'Unexpected color given for ActionSheetIOS.showActionSheetWithOptions tintColor',\n    );\n    invariant(\n      processedCancelButtonTintColor == null ||\n        typeof processedCancelButtonTintColor === 'number',\n      'Unexpected color given for ActionSheetIOS.showActionSheetWithOptions cancelButtonTintColor',\n    );\n    RCTActionSheetManager.showActionSheetWithOptions(\n      {\n        ...remainingOptions,\n        tintColor: processedTintColor,\n        cancelButtonTintColor: processedCancelButtonTintColor,\n        destructiveButtonIndices,\n      },\n      callback,\n    );\n  },\n\n  /**\n   * Display the iOS share sheet. The `options` object should contain\n   * one or both of `message` and `url` and can additionally have\n   * a `subject` or `excludedActivityTypes`:\n   *\n   * - `url` (string) - a URL to share\n   * - `message` (string) - a message to share\n   * - `subject` (string) - a subject for the message\n   * - `excludedActivityTypes` (array) - the activities to exclude from\n   *   the ActionSheet\n   * - `tintColor` (color) - tint color of the buttons\n   *\n   * The 'failureCallback' function takes one parameter, an error object.\n   * The only property defined on this object is an optional `stack` property\n   * of type `string`.\n   *\n   * The 'successCallback' function takes two parameters:\n   *\n   * - a boolean value signifying success or failure\n   * - a string that, in the case of success, indicates the method of sharing\n   *\n   * See https://reactnative.dev/docs/actionsheetios#showshareactionsheetwithoptions\n   */\n  showShareActionSheetWithOptions(\n    options: Object,\n    failureCallback: Function,\n    successCallback: Function,\n  ) {\n    invariant(\n      typeof options === 'object' && options !== null,\n      'Options must be a valid object',\n    );\n    invariant(\n      typeof failureCallback === 'function',\n      'Must provide a valid failureCallback',\n    );\n    invariant(\n      typeof successCallback === 'function',\n      'Must provide a valid successCallback',\n    );\n    invariant(RCTActionSheetManager, \"ActionSheetManager doesn't exist\");\n    RCTActionSheetManager.showShareActionSheetWithOptions(\n      {...options, tintColor: processColor(options.tintColor)},\n      failureCallback,\n      successCallback,\n    );\n  },\n\n  dismissActionSheet: () => {\n    invariant(RCTActionSheetManager, \"ActionSheetManager doesn't exist\");\n    if (typeof RCTActionSheetManager.dismissActionSheet === 'function') {\n      RCTActionSheetManager.dismissActionSheet();\n    }\n  },\n};\n\nmodule.exports = ActionSheetIOS;\n","/**\n * Copyright (c) Meta Platforms, Inc. and affiliates.\n *\n * This source code is licensed under the MIT license found in the\n * LICENSE file in the root directory of this source tree.\n *\n * @flow\n * @format\n */\n\nimport type {TurboModule} from '../TurboModule/RCTExport';\n\nimport * as TurboModuleRegistry from '../TurboModule/TurboModuleRegistry';\n\nexport interface Spec extends TurboModule {\n  +getConstants: () => {||};\n  +showActionSheetWithOptions: (\n    options: {|\n      +title?: ?string,\n      +message?: ?string,\n      +options: ?Array<string>,\n      +destructiveButtonIndices?: ?Array<number>,\n      +cancelButtonIndex?: ?number,\n      +anchor?: ?number,\n      +tintColor?: ?number,\n      +cancelButtonTintColor?: ?number,\n      +userInterfaceStyle?: ?string,\n      +disabledButtonIndices?: Array<number>,\n    |},\n    callback: (buttonIndex: number) => void,\n  ) => void;\n  +showShareActionSheetWithOptions: (\n    options: {|\n      +message?: ?string,\n      +url?: ?string,\n      +subject?: ?string,\n      +anchor?: ?number,\n      +tintColor?: ?number,\n      +cancelButtonTintColor?: ?number,\n      +excludedActivityTypes?: ?Array<string>,\n      +userInterfaceStyle?: ?string,\n    |},\n    failureCallback: (error: {|\n      +domain: string,\n      +code: string,\n      +userInfo?: ?Object,\n      +message: string,\n    |}) => void,\n    successCallback: (completed: boolean, activityType: ?string) => void,\n  ) => void;\n  +dismissActionSheet?: () => void;\n}\n\nexport default (TurboModuleRegistry.get<Spec>('ActionSheetManager'): ?Spec);\n","/**\n * Copyright (c) Meta Platforms, Inc. and affiliates.\n *\n * This source code is licensed under the MIT license found in the\n * LICENSE file in the root directory of this source tree.\n *\n * @flow strict-local\n * @format\n */\n\nimport type {AnimatedValueConfig} from './nodes/AnimatedValue';\n\nimport Animated from './Animated';\nimport {useRef} from 'react';\n\nexport default function useAnimatedValue(\n  initialValue: number,\n  config?: ?AnimatedValueConfig,\n): Animated.Value {\n  const ref = useRef<null | Animated.Value>(null);\n  if (ref.current == null) {\n    ref.current = new Animated.Value(initialValue, config);\n  }\n  return ref.current;\n}\n","/**\n * Copyright (c) Meta Platforms, Inc. and affiliates.\n *\n * This source code is licensed under the MIT license found in the\n * LICENSE file in the root directory of this source tree.\n *\n * @flow strict-local\n * @format\n */\n\nimport type {HostComponent} from '../../Renderer/shims/ReactNativeTypes';\nimport type {EventSubscription} from '../../vendor/emitter/EventEmitter';\nimport type {AccessibilityInfoType} from './AccessibilityInfo.flow';\nimport type {ElementRef} from 'react';\n\nimport RCTDeviceEventEmitter from '../../EventEmitter/RCTDeviceEventEmitter';\nimport {sendAccessibilityEvent} from '../../ReactNative/RendererProxy';\nimport Platform from '../../Utilities/Platform';\nimport legacySendAccessibilityEvent from './legacySendAccessibilityEvent';\nimport NativeAccessibilityInfoAndroid from './NativeAccessibilityInfo';\nimport NativeAccessibilityManagerIOS from './NativeAccessibilityManager';\n\n// Events that are only supported on Android.\ntype AccessibilityEventDefinitionsAndroid = {\n  accessibilityServiceChanged: [boolean],\n};\n\n// Events that are only supported on iOS.\ntype AccessibilityEventDefinitionsIOS = {\n  announcementFinished: [{announcement: string, success: boolean}],\n  boldTextChanged: [boolean],\n  grayscaleChanged: [boolean],\n  invertColorsChanged: [boolean],\n  reduceTransparencyChanged: [boolean],\n};\n\ntype AccessibilityEventDefinitions = {\n  ...AccessibilityEventDefinitionsAndroid,\n  ...AccessibilityEventDefinitionsIOS,\n  change: [boolean], // screenReaderChanged\n  reduceMotionChanged: [boolean],\n  screenReaderChanged: [boolean],\n};\n\ntype AccessibilityEventTypes = 'click' | 'focus';\n\n// Mapping of public event names to platform-specific event names.\nconst EventNames: Map<\n  $Keys<AccessibilityEventDefinitions>,\n  string,\n> = Platform.OS === 'android'\n  ? new Map([\n      ['change', 'touchExplorationDidChange'],\n      ['reduceMotionChanged', 'reduceMotionDidChange'],\n      ['screenReaderChanged', 'touchExplorationDidChange'],\n      ['accessibilityServiceChanged', 'accessibilityServiceDidChange'],\n    ])\n  : new Map([\n      ['announcementFinished', 'announcementFinished'],\n      ['boldTextChanged', 'boldTextChanged'],\n      ['change', 'screenReaderChanged'],\n      ['grayscaleChanged', 'grayscaleChanged'],\n      ['invertColorsChanged', 'invertColorsChanged'],\n      ['reduceMotionChanged', 'reduceMotionChanged'],\n      ['reduceTransparencyChanged', 'reduceTransparencyChanged'],\n      ['screenReaderChanged', 'screenReaderChanged'],\n    ]);\n\n/**\n * Sometimes it's useful to know whether or not the device has a screen reader\n * that is currently active. The `AccessibilityInfo` API is designed for this\n * purpose. You can use it to query the current state of the screen reader as\n * well as to register to be notified when the state of the screen reader\n * changes.\n *\n * See https://reactnative.dev/docs/accessibilityinfo\n */\nconst AccessibilityInfo: AccessibilityInfoType = {\n  /**\n   * Query whether bold text is currently enabled.\n   *\n   * Returns a promise which resolves to a boolean.\n   * The result is `true` when bold text is enabled and `false` otherwise.\n   *\n   * See https://reactnative.dev/docs/accessibilityinfo#isBoldTextEnabled\n   */\n  isBoldTextEnabled(): Promise<boolean> {\n    if (Platform.OS === 'android') {\n      return Promise.resolve(false);\n    } else {\n      return new Promise((resolve, reject) => {\n        if (NativeAccessibilityManagerIOS != null) {\n          NativeAccessibilityManagerIOS.getCurrentBoldTextState(\n            resolve,\n            reject,\n          );\n        } else {\n          reject(null);\n        }\n      });\n    }\n  },\n\n  /**\n   * Query whether grayscale is currently enabled.\n   *\n   * Returns a promise which resolves to a boolean.\n   * The result is `true` when grayscale is enabled and `false` otherwise.\n   *\n   * See https://reactnative.dev/docs/accessibilityinfo#isGrayscaleEnabled\n   */\n  isGrayscaleEnabled(): Promise<boolean> {\n    if (Platform.OS === 'android') {\n      return Promise.resolve(false);\n    } else {\n      return new Promise((resolve, reject) => {\n        if (NativeAccessibilityManagerIOS != null) {\n          NativeAccessibilityManagerIOS.getCurrentGrayscaleState(\n            resolve,\n            reject,\n          );\n        } else {\n          reject(null);\n        }\n      });\n    }\n  },\n\n  /**\n   * Query whether inverted colors are currently enabled.\n   *\n   * Returns a promise which resolves to a boolean.\n   * The result is `true` when invert color is enabled and `false` otherwise.\n   *\n   * See https://reactnative.dev/docs/accessibilityinfo#isInvertColorsEnabled\n   */\n  isInvertColorsEnabled(): Promise<boolean> {\n    if (Platform.OS === 'android') {\n      return Promise.resolve(false);\n    } else {\n      return new Promise((resolve, reject) => {\n        if (NativeAccessibilityManagerIOS != null) {\n          NativeAccessibilityManagerIOS.getCurrentInvertColorsState(\n            resolve,\n            reject,\n          );\n        } else {\n          reject(null);\n        }\n      });\n    }\n  },\n\n  /**\n   * Query whether reduced motion is currently enabled.\n   *\n   * Returns a promise which resolves to a boolean.\n   * The result is `true` when a reduce motion is enabled and `false` otherwise.\n   *\n   * See https://reactnative.dev/docs/accessibilityinfo#isReduceMotionEnabled\n   */\n  isReduceMotionEnabled(): Promise<boolean> {\n    return new Promise((resolve, reject) => {\n      if (Platform.OS === 'android') {\n        if (NativeAccessibilityInfoAndroid != null) {\n          NativeAccessibilityInfoAndroid.isReduceMotionEnabled(resolve);\n        } else {\n          reject(null);\n        }\n      } else {\n        if (NativeAccessibilityManagerIOS != null) {\n          NativeAccessibilityManagerIOS.getCurrentReduceMotionState(\n            resolve,\n            reject,\n          );\n        } else {\n          reject(null);\n        }\n      }\n    });\n  },\n\n  /**\n   * Query whether reduce motion and prefer cross-fade transitions settings are currently enabled.\n   *\n   * Returns a promise which resolves to a boolean.\n   * The result is `true` when  prefer cross-fade transitions is enabled and `false` otherwise.\n   *\n   * See https://reactnative.dev/docs/accessibilityinfo#prefersCrossFadeTransitions\n   */\n  prefersCrossFadeTransitions(): Promise<boolean> {\n    return new Promise((resolve, reject) => {\n      if (Platform.OS === 'android') {\n        return Promise.resolve(false);\n      } else {\n        if (\n          NativeAccessibilityManagerIOS?.getCurrentPrefersCrossFadeTransitionsState !=\n          null\n        ) {\n          NativeAccessibilityManagerIOS.getCurrentPrefersCrossFadeTransitionsState(\n            resolve,\n            reject,\n          );\n        } else {\n          reject(null);\n        }\n      }\n    });\n  },\n\n  /**\n   * Query whether reduced transparency is currently enabled.\n   *\n   * Returns a promise which resolves to a boolean.\n   * The result is `true` when a reduce transparency is enabled and `false` otherwise.\n   *\n   * See https://reactnative.dev/docs/accessibilityinfo#isReduceTransparencyEnabled\n   */\n  isReduceTransparencyEnabled(): Promise<boolean> {\n    if (Platform.OS === 'android') {\n      return Promise.resolve(false);\n    } else {\n      return new Promise((resolve, reject) => {\n        if (NativeAccessibilityManagerIOS != null) {\n          NativeAccessibilityManagerIOS.getCurrentReduceTransparencyState(\n            resolve,\n            reject,\n          );\n        } else {\n          reject(null);\n        }\n      });\n    }\n  },\n\n  /**\n   * Query whether a screen reader is currently enabled.\n   *\n   * Returns a promise which resolves to a boolean.\n   * The result is `true` when a screen reader is enabled and `false` otherwise.\n   *\n   * See https://reactnative.dev/docs/accessibilityinfo#isScreenReaderEnabled\n   */\n  isScreenReaderEnabled(): Promise<boolean> {\n    return new Promise((resolve, reject) => {\n      if (Platform.OS === 'android') {\n        if (NativeAccessibilityInfoAndroid != null) {\n          NativeAccessibilityInfoAndroid.isTouchExplorationEnabled(resolve);\n        } else {\n          reject(null);\n        }\n      } else {\n        if (NativeAccessibilityManagerIOS != null) {\n          NativeAccessibilityManagerIOS.getCurrentVoiceOverState(\n            resolve,\n            reject,\n          );\n        } else {\n          reject(null);\n        }\n      }\n    });\n  },\n\n  /**\n   * Query whether Accessibility Service is currently enabled.\n   *\n   * Returns a promise which resolves to a boolean.\n   * The result is `true` when any service is enabled and `false` otherwise.\n   *\n   * @platform android\n   *\n   * See https://reactnative.dev/docs/accessibilityinfo/#isaccessibilityserviceenabled-android\n   */\n  isAccessibilityServiceEnabled(): Promise<boolean> {\n    return new Promise((resolve, reject) => {\n      if (Platform.OS === 'android') {\n        if (\n          NativeAccessibilityInfoAndroid != null &&\n          NativeAccessibilityInfoAndroid.isAccessibilityServiceEnabled != null\n        ) {\n          NativeAccessibilityInfoAndroid.isAccessibilityServiceEnabled(resolve);\n        } else {\n          reject(null);\n        }\n      } else {\n        reject(null);\n      }\n    });\n  },\n\n  /**\n   * Add an event handler. Supported events:\n   *\n   * - `reduceMotionChanged`: Fires when the state of the reduce motion toggle changes.\n   *   The argument to the event handler is a boolean. The boolean is `true` when a reduce\n   *   motion is enabled (or when \"Transition Animation Scale\" in \"Developer options\" is\n   *   \"Animation off\") and `false` otherwise.\n   * - `screenReaderChanged`: Fires when the state of the screen reader changes. The argument\n   *   to the event handler is a boolean. The boolean is `true` when a screen\n   *   reader is enabled and `false` otherwise.\n   *\n   * These events are only supported on iOS:\n   *\n   * - `boldTextChanged`: iOS-only event. Fires when the state of the bold text toggle changes.\n   *   The argument to the event handler is a boolean. The boolean is `true` when a bold text\n   *   is enabled and `false` otherwise.\n   * - `grayscaleChanged`: iOS-only event. Fires when the state of the gray scale toggle changes.\n   *   The argument to the event handler is a boolean. The boolean is `true` when a gray scale\n   *   is enabled and `false` otherwise.\n   * - `invertColorsChanged`: iOS-only event. Fires when the state of the invert colors toggle\n   *   changes. The argument to the event handler is a boolean. The boolean is `true` when a invert\n   *   colors is enabled and `false` otherwise.\n   * - `reduceTransparencyChanged`: iOS-only event. Fires when the state of the reduce transparency\n   *   toggle changes.  The argument to the event handler is a boolean. The boolean is `true`\n   *   when a reduce transparency is enabled and `false` otherwise.\n   * - `announcementFinished`: iOS-only event. Fires when the screen reader has\n   *   finished making an announcement. The argument to the event handler is a\n   *   dictionary with these keys:\n   *     - `announcement`: The string announced by the screen reader.\n   *     - `success`: A boolean indicating whether the announcement was\n   *       successfully made.\n   *\n   * See https://reactnative.dev/docs/accessibilityinfo#addeventlistener\n   */\n  addEventListener<K: $Keys<AccessibilityEventDefinitions>>(\n    eventName: K,\n    // $FlowIssue[incompatible-type] - Flow bug with unions and generics (T128099423)\n    handler: (...$ElementType<AccessibilityEventDefinitions, K>) => void,\n  ): EventSubscription {\n    const deviceEventName = EventNames.get(eventName);\n    return deviceEventName == null\n      ? {remove(): void {}}\n      : // $FlowFixMe[incompatible-call]\n        RCTDeviceEventEmitter.addListener(deviceEventName, handler);\n  },\n\n  /**\n   * Set accessibility focus to a React component.\n   *\n   * See https://reactnative.dev/docs/accessibilityinfo#setaccessibilityfocus\n   */\n  setAccessibilityFocus(reactTag: number): void {\n    legacySendAccessibilityEvent(reactTag, 'focus');\n  },\n\n  /**\n   * Send a named accessibility event to a HostComponent.\n   */\n  sendAccessibilityEvent(\n    handle: ElementRef<HostComponent<mixed>>,\n    eventType: AccessibilityEventTypes,\n  ) {\n    // iOS only supports 'focus' event types\n    if (Platform.OS === 'ios' && eventType === 'click') {\n      return;\n    }\n    // route through React renderer to distinguish between Fabric and non-Fabric handles\n    sendAccessibilityEvent(handle, eventType);\n  },\n\n  /**\n   * Post a string to be announced by the screen reader.\n   *\n   * See https://reactnative.dev/docs/accessibilityinfo#announceforaccessibility\n   */\n  announceForAccessibility(announcement: string): void {\n    if (Platform.OS === 'android') {\n      NativeAccessibilityInfoAndroid?.announceForAccessibility(announcement);\n    } else {\n      NativeAccessibilityManagerIOS?.announceForAccessibility(announcement);\n    }\n  },\n\n  /**\n   * Post a string to be announced by the screen reader.\n   * - `announcement`: The string announced by the screen reader.\n   * - `options`: An object that configures the reading options.\n   *   - `queue`: The announcement will be queued behind existing announcements. iOS only.\n   */\n  announceForAccessibilityWithOptions(\n    announcement: string,\n    options: {queue?: boolean},\n  ): void {\n    if (Platform.OS === 'android') {\n      NativeAccessibilityInfoAndroid?.announceForAccessibility(announcement);\n    } else {\n      if (NativeAccessibilityManagerIOS?.announceForAccessibilityWithOptions) {\n        NativeAccessibilityManagerIOS?.announceForAccessibilityWithOptions(\n          announcement,\n          options,\n        );\n      } else {\n        NativeAccessibilityManagerIOS?.announceForAccessibility(announcement);\n      }\n    }\n  },\n\n  /**\n   * Get the recommended timeout for changes to the UI needed by this user.\n   *\n   * See https://reactnative.dev/docs/accessibilityinfo#getrecommendedtimeoutmillis\n   */\n  getRecommendedTimeoutMillis(originalTimeout: number): Promise<number> {\n    if (Platform.OS === 'android') {\n      return new Promise((resolve, reject) => {\n        if (NativeAccessibilityInfoAndroid?.getRecommendedTimeoutMillis) {\n          NativeAccessibilityInfoAndroid.getRecommendedTimeoutMillis(\n            originalTimeout,\n            resolve,\n          );\n        } else {\n          resolve(originalTimeout);\n        }\n      });\n    } else {\n      return Promise.resolve(originalTimeout);\n    }\n  },\n};\n\nexport default AccessibilityInfo;\n","/**\n * Copyright (c) Meta Platforms, Inc. and affiliates.\n *\n * This source code is licensed under the MIT license found in the\n * LICENSE file in the root directory of this source tree.\n *\n * @flow strict\n * @format\n */\n\nimport type {TurboModule} from '../../TurboModule/RCTExport';\n\nimport * as TurboModuleRegistry from '../../TurboModule/TurboModuleRegistry';\n\nexport interface Spec extends TurboModule {\n  +isReduceMotionEnabled: (\n    onSuccess: (isReduceMotionEnabled: boolean) => void,\n  ) => void;\n  +isTouchExplorationEnabled: (\n    onSuccess: (isScreenReaderEnabled: boolean) => void,\n  ) => void;\n  +isAccessibilityServiceEnabled?: ?(\n    onSuccess: (isAccessibilityServiceEnabled: boolean) => void,\n  ) => void;\n  +setAccessibilityFocus: (reactTag: number) => void;\n  +announceForAccessibility: (announcement: string) => void;\n  +getRecommendedTimeoutMillis?: (\n    mSec: number,\n    onSuccess: (recommendedTimeoutMillis: number) => void,\n  ) => void;\n}\n\nexport default (TurboModuleRegistry.get<Spec>('AccessibilityInfo'): ?Spec);\n","/**\n * Copyright (c) Meta Platforms, Inc. and affiliates.\n *\n * This source code is licensed under the MIT license found in the\n * LICENSE file in the root directory of this source tree.\n *\n * @flow\n * @format\n */\n\nimport type {TurboModule} from '../../TurboModule/RCTExport';\n\nimport * as TurboModuleRegistry from '../../TurboModule/TurboModuleRegistry';\n\nexport interface Spec extends TurboModule {\n  +getCurrentBoldTextState: (\n    onSuccess: (isBoldTextEnabled: boolean) => void,\n    onError: (error: Object) => void,\n  ) => void;\n  +getCurrentGrayscaleState: (\n    onSuccess: (isGrayscaleEnabled: boolean) => void,\n    onError: (error: Object) => void,\n  ) => void;\n  +getCurrentInvertColorsState: (\n    onSuccess: (isInvertColorsEnabled: boolean) => void,\n    onError: (error: Object) => void,\n  ) => void;\n  +getCurrentReduceMotionState: (\n    onSuccess: (isReduceMotionEnabled: boolean) => void,\n    onError: (error: Object) => void,\n  ) => void;\n  +getCurrentPrefersCrossFadeTransitionsState?: (\n    onSuccess: (prefersCrossFadeTransitions: boolean) => void,\n    onError: (error: Object) => void,\n  ) => void;\n  +getCurrentReduceTransparencyState: (\n    onSuccess: (isReduceTransparencyEnabled: boolean) => void,\n    onError: (error: Object) => void,\n  ) => void;\n  +getCurrentVoiceOverState: (\n    onSuccess: (isScreenReaderEnabled: boolean) => void,\n    onError: (error: Object) => void,\n  ) => void;\n  +setAccessibilityContentSizeMultipliers: (JSMultipliers: {|\n    +extraSmall?: ?number,\n    +small?: ?number,\n    +medium?: ?number,\n    +large?: ?number,\n    +extraLarge?: ?number,\n    +extraExtraLarge?: ?number,\n    +extraExtraExtraLarge?: ?number,\n    +accessibilityMedium?: ?number,\n    +accessibilityLarge?: ?number,\n    +accessibilityExtraLarge?: ?number,\n    +accessibilityExtraExtraLarge?: ?number,\n    +accessibilityExtraExtraExtraLarge?: ?number,\n  |}) => void;\n  +setAccessibilityFocus: (reactTag: number) => void;\n  +announceForAccessibility: (announcement: string) => void;\n  +announceForAccessibilityWithOptions?: (\n    announcement: string,\n    options: {queue?: boolean},\n  ) => void;\n}\n\nexport default (TurboModuleRegistry.get<Spec>('AccessibilityManager'): ?Spec);\n","/**\n * Copyright (c) Meta Platforms, Inc. and affiliates.\n *\n * This source code is licensed under the MIT license found in the\n * LICENSE file in the root directory of this source tree.\n *\n * @format\n * @flow\n * @generate-docs\n */\n\n'use strict';\nimport type {ViewProps} from '../View/ViewPropTypes';\nimport type {ActivityIndicator as ActivityIndicatorType} from './ActivityIndicator.flow';\n\nimport StyleSheet, {type ColorValue} from '../../StyleSheet/StyleSheet';\nimport Platform from '../../Utilities/Platform';\nimport View from '../View/View';\nimport * as React from 'react';\n\nconst PlatformActivityIndicator =\n  Platform.OS === 'android'\n    ? require('../ProgressBarAndroid/ProgressBarAndroid')\n    : require('./ActivityIndicatorViewNativeComponent').default;\n\nconst GRAY = '#999999';\n\ntype IndicatorSize = number | 'small' | 'large';\n\ntype IOSProps = $ReadOnly<{|\n  /**\n    Whether the indicator should hide when not animating.\n\n    @platform ios\n  */\n  hidesWhenStopped?: ?boolean,\n|}>;\ntype Props = $ReadOnly<{|\n  ...ViewProps,\n  ...IOSProps,\n\n  /**\n   \tWhether to show the indicator (`true`) or hide it (`false`).\n   */\n  animating?: ?boolean,\n\n  /**\n    The foreground color of the spinner.\n\n    @default {@platform android} `null` (system accent default color)\n    @default {@platform ios} '#999999'\n  */\n  color?: ?ColorValue,\n\n  /**\n    Size of the indicator.\n\n    @type enum(`'small'`, `'large'`)\n    @type {@platform android} number\n  */\n  size?: ?IndicatorSize,\n|}>;\n\nconst ActivityIndicator = (\n  {\n    animating = true,\n    color = Platform.OS === 'ios' ? GRAY : null,\n    hidesWhenStopped = true,\n    onLayout,\n    size = 'small',\n    style,\n    ...restProps\n  }: Props,\n  forwardedRef?: any,\n) => {\n  let sizeStyle;\n  let sizeProp;\n\n  switch (size) {\n    case 'small':\n      sizeStyle = styles.sizeSmall;\n      sizeProp = 'small';\n      break;\n    case 'large':\n      sizeStyle = styles.sizeLarge;\n      sizeProp = 'large';\n      break;\n    default:\n      sizeStyle = {height: size, width: size};\n      break;\n  }\n\n  const nativeProps = {\n    animating,\n    color,\n    hidesWhenStopped,\n    ...restProps,\n    ref: forwardedRef,\n    style: sizeStyle,\n    size: sizeProp,\n  };\n\n  const androidProps = {\n    styleAttr: 'Normal',\n    indeterminate: true,\n  };\n\n  return (\n    <View\n      onLayout={onLayout}\n      style={StyleSheet.compose(styles.container, style)}>\n      {Platform.OS === 'android' ? (\n        // $FlowFixMe[prop-missing] Flow doesn't know when this is the android component\n        <PlatformActivityIndicator {...nativeProps} {...androidProps} />\n      ) : (\n        /* $FlowFixMe[prop-missing] (>=0.106.0 site=react_native_android_fb) This comment\n         * suppresses an error found when Flow v0.106 was deployed. To see the\n         * error, delete this comment and run Flow. */\n        <PlatformActivityIndicator {...nativeProps} />\n      )}\n    </View>\n  );\n};\n\n/**\n  Displays a circular loading indicator.\n\n  ```SnackPlayer name=ActivityIndicator%20Function%20Component%20Example\n  import React from \"react\";\n  import { ActivityIndicator, StyleSheet, Text, View } from \"react-native\";\n\n  const App = () => (\n    <View style={[styles.container, styles.horizontal]}>\n      <ActivityIndicator />\n      <ActivityIndicator size=\"large\" />\n      <ActivityIndicator size=\"small\" color=\"#0000ff\" />\n      <ActivityIndicator size=\"large\" color=\"#00ff00\" />\n    </View>\n  );\n\n  const styles = StyleSheet.create({\n    container: {\n      flex: 1,\n      justifyContent: \"center\"\n    },\n    horizontal: {\n      flexDirection: \"row\",\n      justifyContent: \"space-around\",\n      padding: 10\n    }\n  });\n  export default App;\n  ```\n\n  ```SnackPlayer name=ActivityIndicator%20Class%20Component%20Example\n  import React, { Component } from \"react\";\n  import { ActivityIndicator, StyleSheet, Text, View } from \"react-native\";\n\n  class App extends Component {\n    render() {\n      return (\n        <View style={[styles.container, styles.horizontal]}>\n          <ActivityIndicator />\n          <ActivityIndicator size=\"large\" />\n          <ActivityIndicator size=\"small\" color=\"#0000ff\" />\n          <ActivityIndicator size=\"large\" color=\"#00ff00\" />\n        </View>\n      );\n    }\n  }\n\n  const styles = StyleSheet.create({\n    container: {\n      flex: 1,\n      justifyContent: \"center\"\n    },\n    horizontal: {\n      flexDirection: \"row\",\n      justifyContent: \"space-around\",\n      padding: 10\n    }\n  });\n  export default App;\n  ```\n*/\n\nconst ActivityIndicatorWithRef: ActivityIndicatorType =\n  React.forwardRef(ActivityIndicator);\nActivityIndicatorWithRef.displayName = 'ActivityIndicator';\n\nconst styles = StyleSheet.create({\n  container: {\n    alignItems: 'center',\n    justifyContent: 'center',\n  },\n  sizeSmall: {\n    width: 20,\n    height: 20,\n  },\n  sizeLarge: {\n    width: 36,\n    height: 36,\n  },\n});\n\nmodule.exports = ActivityIndicatorWithRef;\n","/**\n * Copyright (c) Meta Platforms, Inc. and affiliates.\n *\n * This source code is licensed under the MIT license found in the\n * LICENSE file in the root directory of this source tree.\n *\n * @format\n * @flow strict-local\n */\n\nimport type {HostComponent} from '../../Renderer/shims/ReactNativeTypes';\nimport type {ColorValue} from '../../StyleSheet/StyleSheet';\nimport type {WithDefault} from '../../Types/CodegenTypes';\nimport type {ViewProps} from '../View/ViewPropTypes';\n\nimport codegenNativeComponent from '../../Utilities/codegenNativeComponent';\n\ntype NativeProps = $ReadOnly<{|\n  ...ViewProps,\n\n  /**\n   * Whether the indicator should hide when not animating (true by default).\n   *\n   * See https://reactnative.dev/docs/activityindicator#hideswhenstopped\n   */\n  hidesWhenStopped?: WithDefault<boolean, false>,\n\n  /**\n   * Whether to show the indicator (true, the default) or hide it (false).\n   *\n   * See https://reactnative.dev/docs/activityindicator#animating\n   */\n  animating?: WithDefault<boolean, false>,\n\n  /**\n   * The foreground color of the spinner (default is gray).\n   *\n   * See https://reactnative.dev/docs/activityindicator#color\n   */\n  color?: ?ColorValue,\n\n  /**\n   * Size of the indicator (default is 'small').\n   * Passing a number to the size prop is only supported on Android.\n   *\n   * See https://reactnative.dev/docs/activityindicator#size\n   */\n  size?: WithDefault<'small' | 'large', 'small'>,\n|}>;\n\nexport default (codegenNativeComponent<NativeProps>('ActivityIndicatorView', {\n  paperComponentName: 'RCTActivityIndicatorView',\n}): HostComponent<NativeProps>);\n","/**\n * Copyright (c) Meta Platforms, Inc. and affiliates.\n *\n * This source code is licensed under the MIT license found in the\n * LICENSE file in the root directory of this source tree.\n *\n * @format\n * @flow\n * @generate-docs\n */\n\n'use strict';\n\nimport type {PressEvent} from '../Types/CoreEventTypes';\nimport type {Button as ButtonType} from './Button.flow';\nimport type {\n  AccessibilityActionEvent,\n  AccessibilityActionInfo,\n  AccessibilityState,\n} from './View/ViewAccessibility';\n\nimport StyleSheet, {type ColorValue} from '../StyleSheet/StyleSheet';\nimport Text from '../Text/Text';\nimport Platform from '../Utilities/Platform';\nimport TouchableNativeFeedback from './Touchable/TouchableNativeFeedback';\nimport TouchableOpacity from './Touchable/TouchableOpacity';\nimport View from './View/View';\nimport invariant from 'invariant';\nimport * as React from 'react';\n\ntype ButtonProps = $ReadOnly<{|\n  /**\n    Text to display inside the button. On Android the given title will be\n    converted to the uppercased form.\n   */\n  title: string,\n\n  /**\n    Handler to be called when the user taps the button. The first function\n    argument is an event in form of [PressEvent](pressevent).\n   */\n  onPress: (event?: PressEvent) => mixed,\n\n  /**\n    If `true`, doesn't play system sound on touch.\n\n    @platform android\n\n    @default false\n   */\n  touchSoundDisabled?: ?boolean,\n\n  /**\n    Color of the text (iOS), or background color of the button (Android).\n\n    @default {@platform android} '#2196F3'\n    @default {@platform ios} '#007AFF'\n   */\n  color?: ?ColorValue,\n\n  /**\n    TV preferred focus.\n\n    @platform tv\n\n    @default false\n   */\n  hasTVPreferredFocus?: ?boolean,\n\n  /**\n    Designates the next view to receive focus when the user navigates down. See\n    the [Android documentation][android:nextFocusDown].\n\n    [android:nextFocusDown]:\n    https://developer.android.com/reference/android/view/View.html#attr_android:nextFocusDown\n\n    @platform android, tv\n   */\n  nextFocusDown?: ?number,\n\n  /**\n    Designates the next view to receive focus when the user navigates forward.\n    See the [Android documentation][android:nextFocusForward].\n\n    [android:nextFocusForward]:\n    https://developer.android.com/reference/android/view/View.html#attr_android:nextFocusForward\n\n    @platform android, tv\n   */\n  nextFocusForward?: ?number,\n\n  /**\n    Designates the next view to receive focus when the user navigates left. See\n    the [Android documentation][android:nextFocusLeft].\n\n    [android:nextFocusLeft]:\n    https://developer.android.com/reference/android/view/View.html#attr_android:nextFocusLeft\n\n    @platform android, tv\n   */\n  nextFocusLeft?: ?number,\n\n  /**\n    Designates the next view to receive focus when the user navigates right. See\n    the [Android documentation][android:nextFocusRight].\n\n    [android:nextFocusRight]:\n    https://developer.android.com/reference/android/view/View.html#attr_android:nextFocusRight\n\n    @platform android, tv\n   */\n  nextFocusRight?: ?number,\n\n  /**\n    Designates the next view to receive focus when the user navigates up. See\n    the [Android documentation][android:nextFocusUp].\n\n    [android:nextFocusUp]:\n    https://developer.android.com/reference/android/view/View.html#attr_android:nextFocusUp\n\n    @platform android, tv\n   */\n  nextFocusUp?: ?number,\n\n  /**\n    Text to display for blindness accessibility features.\n   */\n  accessibilityLabel?: ?string,\n  /**\n   * Alias for accessibilityLabel  https://reactnative.dev/docs/view#accessibilitylabel\n   * https://github.com/facebook/react-native/issues/34424\n   */\n  'aria-label'?: ?string,\n  /**\n    If `true`, disable all interactions for this component.\n\n    @default false\n   */\n  disabled?: ?boolean,\n\n  /**\n    Used to locate this view in end-to-end tests.\n   */\n  testID?: ?string,\n\n  /**\n   * Accessibility props.\n   */\n  accessible?: ?boolean,\n  accessibilityActions?: ?$ReadOnlyArray<AccessibilityActionInfo>,\n  onAccessibilityAction?: ?(event: AccessibilityActionEvent) => mixed,\n  accessibilityState?: ?AccessibilityState,\n\n  /**\n   * alias for accessibilityState\n   *\n   * see https://reactnative.dev/docs/accessibility#accessibilitystate\n   */\n  'aria-busy'?: ?boolean,\n  'aria-checked'?: ?boolean | 'mixed',\n  'aria-disabled'?: ?boolean,\n  'aria-expanded'?: ?boolean,\n  'aria-selected'?: ?boolean,\n\n  /**\n   * [Android] Controlling if a view fires accessibility events and if it is reported to accessibility services.\n   */\n  importantForAccessibility?: ?('auto' | 'yes' | 'no' | 'no-hide-descendants'),\n  accessibilityHint?: ?string,\n  accessibilityLanguage?: ?Stringish,\n|}>;\n\n/**\n  A basic button component that should render nicely on any platform. Supports a\n  minimal level of customization.\n\n  If this button doesn't look right for your app, you can build your own button\n  using [TouchableOpacity](touchableopacity) or\n  [TouchableWithoutFeedback](touchablewithoutfeedback). For inspiration, look at\n  the [source code for this button component][button:source]. Or, take a look at\n  the [wide variety of button components built by the community]\n  [button:examples].\n\n  [button:source]:\n  https://github.com/facebook/react-native/blob/HEAD/Libraries/Components/Button.js\n\n  [button:examples]:\n  https://js.coach/?menu%5Bcollections%5D=React%20Native&page=1&query=button\n\n  ```jsx\n  <Button\n    onPress={onPressLearnMore}\n    title=\"Learn More\"\n    color=\"#841584\"\n    accessibilityLabel=\"Learn more about this purple button\"\n  />\n  ```\n\n  ```SnackPlayer name=Button%20Example\n  import React from 'react';\n  import { StyleSheet, Button, View, SafeAreaView, Text, Alert } from 'react-native';\n\n  const Separator = () => (\n    <View style={styles.separator} />\n  );\n\n  const App = () => (\n    <SafeAreaView style={styles.container}>\n      <View>\n        <Text style={styles.title}>\n          The title and onPress handler are required. It is recommended to set accessibilityLabel to help make your app usable by everyone.\n        </Text>\n        <Button\n          title=\"Press me\"\n          onPress={() => Alert.alert('Simple Button pressed')}\n        />\n      </View>\n      <Separator />\n      <View>\n        <Text style={styles.title}>\n          Adjust the color in a way that looks standard on each platform. On  iOS, the color prop controls the color of the text. On Android, the color adjusts the background color of the button.\n        </Text>\n        <Button\n          title=\"Press me\"\n          color=\"#f194ff\"\n          onPress={() => Alert.alert('Button with adjusted color pressed')}\n        />\n      </View>\n      <Separator />\n      <View>\n        <Text style={styles.title}>\n          All interaction for the component are disabled.\n        </Text>\n        <Button\n          title=\"Press me\"\n          disabled\n          onPress={() => Alert.alert('Cannot press this one')}\n        />\n      </View>\n      <Separator />\n      <View>\n        <Text style={styles.title}>\n          This layout strategy lets the title define the width of the button.\n        </Text>\n        <View style={styles.fixToText}>\n          <Button\n            title=\"Left button\"\n            onPress={() => Alert.alert('Left button pressed')}\n          />\n          <Button\n            title=\"Right button\"\n            onPress={() => Alert.alert('Right button pressed')}\n          />\n        </View>\n      </View>\n    </SafeAreaView>\n  );\n\n  const styles = StyleSheet.create({\n    container: {\n      flex: 1,\n      justifyContent: 'center',\n      marginHorizontal: 16,\n    },\n    title: {\n      textAlign: 'center',\n      marginVertical: 8,\n    },\n    fixToText: {\n      flexDirection: 'row',\n      justifyContent: 'space-between',\n    },\n    separator: {\n      marginVertical: 8,\n      borderBottomColor: '#737373',\n      borderBottomWidth: StyleSheet.hairlineWidth,\n    },\n  });\n\n  export default App;\n  ```\n */\n\nclass Button extends React.Component<ButtonProps> {\n  render(): React.Node {\n    const {\n      accessibilityLabel,\n      accessibilityState,\n      'aria-busy': ariaBusy,\n      'aria-checked': ariaChecked,\n      'aria-disabled': ariaDisabled,\n      'aria-expanded': ariaExpanded,\n      'aria-label': ariaLabel,\n      'aria-selected': ariaSelected,\n      importantForAccessibility,\n      color,\n      onPress,\n      touchSoundDisabled,\n      title,\n      hasTVPreferredFocus,\n      nextFocusDown,\n      nextFocusForward,\n      nextFocusLeft,\n      nextFocusRight,\n      nextFocusUp,\n      testID,\n      accessible,\n      accessibilityActions,\n      accessibilityHint,\n      accessibilityLanguage,\n      onAccessibilityAction,\n    } = this.props;\n    const buttonStyles = [styles.button];\n    const textStyles = [styles.text];\n    if (color) {\n      if (Platform.OS === 'ios') {\n        textStyles.push({color: color});\n      } else {\n        buttonStyles.push({backgroundColor: color});\n      }\n    }\n\n    let _accessibilityState = {\n      busy: ariaBusy ?? accessibilityState?.busy,\n      checked: ariaChecked ?? accessibilityState?.checked,\n      disabled: ariaDisabled ?? accessibilityState?.disabled,\n      expanded: ariaExpanded ?? accessibilityState?.expanded,\n      selected: ariaSelected ?? accessibilityState?.selected,\n    };\n\n    const disabled =\n      this.props.disabled != null\n        ? this.props.disabled\n        : _accessibilityState?.disabled;\n\n    _accessibilityState =\n      disabled !== _accessibilityState?.disabled\n        ? {..._accessibilityState, disabled}\n        : _accessibilityState;\n\n    if (disabled) {\n      buttonStyles.push(styles.buttonDisabled);\n      textStyles.push(styles.textDisabled);\n    }\n\n    invariant(\n      typeof title === 'string',\n      'The title prop of a Button must be a string',\n    );\n    const formattedTitle =\n      Platform.OS === 'android' ? title.toUpperCase() : title;\n    const Touchable =\n      Platform.OS === 'android' ? TouchableNativeFeedback : TouchableOpacity;\n\n    // If `no` is specified for `importantForAccessibility`, it will be changed to `no-hide-descendants` because the text inside should not be focused.\n    const _importantForAccessibility =\n      importantForAccessibility === 'no'\n        ? 'no-hide-descendants'\n        : importantForAccessibility;\n\n    return (\n      <Touchable\n        accessible={accessible}\n        accessibilityActions={accessibilityActions}\n        onAccessibilityAction={onAccessibilityAction}\n        accessibilityLabel={ariaLabel || accessibilityLabel}\n        accessibilityHint={accessibilityHint}\n        accessibilityLanguage={accessibilityLanguage}\n        accessibilityRole=\"button\"\n        accessibilityState={_accessibilityState}\n        importantForAccessibility={_importantForAccessibility}\n        hasTVPreferredFocus={hasTVPreferredFocus}\n        nextFocusDown={nextFocusDown}\n        nextFocusForward={nextFocusForward}\n        nextFocusLeft={nextFocusLeft}\n        nextFocusRight={nextFocusRight}\n        nextFocusUp={nextFocusUp}\n        testID={testID}\n        disabled={disabled}\n        onPress={onPress}\n        touchSoundDisabled={touchSoundDisabled}>\n        <View style={buttonStyles}>\n          <Text style={textStyles} disabled={disabled}>\n            {formattedTitle}\n          </Text>\n        </View>\n      </Touchable>\n    );\n  }\n}\n\nconst styles = StyleSheet.create({\n  button: Platform.select({\n    ios: {},\n    android: {\n      elevation: 4,\n      // Material design blue from https://material.google.com/style/color.html#color-color-palette\n      backgroundColor: '#2196F3',\n      borderRadius: 2,\n    },\n  }),\n  text: {\n    textAlign: 'center',\n    margin: 8,\n    ...Platform.select({\n      ios: {\n        // iOS blue from https://developer.apple.com/ios/human-interface-guidelines/visual-design/color/\n        color: '#007AFF',\n        fontSize: 18,\n      },\n      android: {\n        color: 'white',\n        fontWeight: '500',\n      },\n    }),\n  },\n  buttonDisabled: Platform.select({\n    ios: {},\n    android: {\n      elevation: 0,\n      backgroundColor: '#dfdfdf',\n    },\n  }),\n  textDisabled: Platform.select({\n    ios: {\n      color: '#cdcdcd',\n    },\n    android: {\n      color: '#a1a1a1',\n    },\n  }),\n});\n\nmodule.exports = (Button: ButtonType);\n","/**\n * Copyright (c) Meta Platforms, Inc. and affiliates.\n *\n * This source code is licensed under the MIT license found in the\n * LICENSE file in the root directory of this source tree.\n *\n * @format\n * @flow strict\n */\n\nimport NativeClipboard from './NativeClipboard';\n\n/**\n * `Clipboard` gives you an interface for setting and getting content from Clipboard on both iOS and Android\n */\nmodule.exports = {\n  /**\n   * Get content of string type, this method returns a `Promise`, so you can use following code to get clipboard content\n   * ```javascript\n   * async _getContent() {\n   *   var content = await Clipboard.getString();\n   * }\n   * ```\n   */\n  getString(): Promise<string> {\n    return NativeClipboard.getString();\n  },\n  /**\n   * Set content of string type. You can use following code to set clipboard content\n   * ```javascript\n   * _setContent() {\n   *   Clipboard.setString('hello world');\n   * }\n   * ```\n   * @param the content to be stored in the clipboard.\n   */\n  setString(content: string) {\n    NativeClipboard.setString(content);\n  },\n};\n","/**\n * Copyright (c) Meta Platforms, Inc. and affiliates.\n *\n * This source code is licensed under the MIT license found in the\n * LICENSE file in the root directory of this source tree.\n *\n * @flow strict\n * @format\n */\n\nimport type {TurboModule} from '../../TurboModule/RCTExport';\n\nimport * as TurboModuleRegistry from '../../TurboModule/TurboModuleRegistry';\n\nexport interface Spec extends TurboModule {\n  +getConstants: () => {||};\n  +getString: () => Promise<string>;\n  +setString: (content: string) => void;\n}\n\nexport default (TurboModuleRegistry.getEnforcing<Spec>('Clipboard'): Spec);\n","/**\n * Copyright (c) Meta Platforms, Inc. and affiliates.\n *\n * This source code is licensed under the MIT license found in the\n * LICENSE file in the root directory of this source tree.\n *\n * @format\n */\n\n'use strict';\nimport type {DatePickerIOSType} from './DatePickerIOS.flow';\n\nimport StyleSheet from '../../StyleSheet/StyleSheet';\nimport Text from '../../Text/Text';\nimport View from '../View/View';\nimport * as React from 'react';\n\nclass DummyDatePickerIOS extends React.Component {\n  render() {\n    return (\n      <View style={[styles.dummyDatePickerIOS, this.props.style]}>\n        <Text style={styles.datePickerText}>\n          DatePickerIOS is not supported on this platform!\n        </Text>\n      </View>\n    );\n  }\n}\n\nconst styles = StyleSheet.create({\n  dummyDatePickerIOS: {\n    height: 100,\n    width: 300,\n    backgroundColor: '#ffbcbc',\n    borderWidth: 1,\n    borderColor: 'red',\n    alignItems: 'center',\n    justifyContent: 'center',\n    margin: 10,\n  },\n  datePickerText: {\n    color: '#333333',\n    margin: 20,\n  },\n});\n\nmodule.exports = (DummyDatePickerIOS: DatePickerIOSType);\n","/**\n * Copyright (c) Meta Platforms, Inc. and affiliates.\n *\n * This source code is licensed under the MIT license found in the\n * LICENSE file in the root directory of this source tree.\n *\n * @format\n * @flow strict-local\n */\n\nimport type {HostComponent} from '../../Renderer/shims/ReactNativeTypes';\nimport type {ColorValue} from '../../StyleSheet/StyleSheet';\nimport type {\n  DirectEventHandler,\n  Float,\n  Int32,\n  WithDefault,\n} from '../../Types/CodegenTypes';\nimport type {ViewProps} from '../View/ViewPropTypes';\n\nimport codegenNativeCommands from '../../Utilities/codegenNativeCommands';\nimport codegenNativeComponent from '../../Utilities/codegenNativeComponent';\nimport * as React from 'react';\n\ntype DrawerStateEvent = $ReadOnly<{|\n  drawerState: Int32,\n|}>;\n\ntype DrawerSlideEvent = $ReadOnly<{|\n  offset: Float,\n|}>;\n\ntype NativeProps = $ReadOnly<{|\n  ...ViewProps,\n  /**\n   * Determines whether the keyboard gets dismissed in response to a drag.\n   *   - 'none' (the default), drags do not dismiss the keyboard.\n   *   - 'on-drag', the keyboard is dismissed when a drag begins.\n   */\n  keyboardDismissMode?: WithDefault<'none' | 'on-drag', 'none'>,\n\n  /**\n   * Specifies the background color of the drawer. The default value is white.\n   * If you want to set the opacity of the drawer, use rgba. Example:\n   *\n   * ```\n   * return (\n   *   <DrawerLayoutAndroid drawerBackgroundColor=\"rgba(0,0,0,0.5)\">\n   *   </DrawerLayoutAndroid>\n   * );\n   * ```\n   */\n  drawerBackgroundColor: ColorValue,\n\n  /**\n   * Specifies the side of the screen from which the drawer will slide in.\n   */\n  drawerPosition?: WithDefault<'left' | 'right', 'left'>,\n\n  /**\n   * Specifies the width of the drawer, more precisely the width of the view that be pulled in\n   * from the edge of the window.\n   */\n\n  drawerWidth?: WithDefault<Float, null>,\n\n  /**\n   * Specifies the lock mode of the drawer. The drawer can be locked in 3 states:\n   * - unlocked (default), meaning that the drawer will respond (open/close) to touch gestures.\n   * - locked-closed, meaning that the drawer will stay closed and not respond to gestures.\n   * - locked-open, meaning that the drawer will stay opened and not respond to gestures.\n   * The drawer may still be opened and closed programmatically (`openDrawer`/`closeDrawer`).\n   */\n  drawerLockMode?: WithDefault<\n    'unlocked' | 'locked-closed' | 'locked-open',\n    'unlocked',\n  >,\n\n  /**\n   * Function called whenever there is an interaction with the navigation view.\n   */\n  onDrawerSlide?: ?DirectEventHandler<DrawerSlideEvent>,\n\n  /**\n   * Function called when the drawer state has changed. The drawer can be in 3 states:\n   * - Idle, meaning there is no interaction with the navigation view happening at the time\n   * - Dragging, meaning there is currently an interaction with the navigation view\n   * - Settling, meaning that there was an interaction with the navigation view, and the\n   * navigation view is now finishing its closing or opening animation\n   */\n  onDrawerStateChanged?: ?DirectEventHandler<DrawerStateEvent>,\n\n  /**\n   * Function called whenever the navigation view has been opened.\n   */\n  onDrawerOpen?: ?DirectEventHandler<null>,\n\n  /**\n   * Function called whenever the navigation view has been closed.\n   */\n  onDrawerClose?: ?DirectEventHandler<null>,\n\n  /**\n   * Make the drawer take the entire screen and draw the background of the\n   * status bar to allow it to open over the status bar. It will only have an\n   * effect on API 21+.\n   */\n  statusBarBackgroundColor?: ?ColorValue,\n|}>;\n\ntype NativeType = HostComponent<NativeProps>;\n\ninterface NativeCommands {\n  +openDrawer: (viewRef: React.ElementRef<NativeType>) => void;\n  +closeDrawer: (viewRef: React.ElementRef<NativeType>) => void;\n}\n\nexport const Commands: NativeCommands = codegenNativeCommands<NativeCommands>({\n  supportedCommands: ['openDrawer', 'closeDrawer'],\n});\n\nexport default (codegenNativeComponent<NativeProps>(\n  'AndroidDrawerLayout',\n): NativeType);\n","/**\n * Copyright (c) Meta Platforms, Inc. and affiliates.\n *\n * This source code is licensed under the MIT license found in the\n * LICENSE file in the root directory of this source tree.\n *\n * @flow\n * @format\n */\n\nimport type {\n  MeasureInWindowOnSuccessCallback,\n  MeasureLayoutOnSuccessCallback,\n  MeasureOnSuccessCallback,\n} from '../../Renderer/shims/ReactNativeTypes';\nimport type {ColorValue, ViewStyleProp} from '../../StyleSheet/StyleSheet';\nimport type {DirectEventHandler} from '../../Types/CodegenTypes';\n\nimport StyleSheet from '../../StyleSheet/StyleSheet';\nimport dismissKeyboard from '../../Utilities/dismissKeyboard';\nimport Platform from '../../Utilities/Platform';\nimport StatusBar from '../StatusBar/StatusBar';\nimport View from '../View/View';\nimport AndroidDrawerLayoutNativeComponent, {\n  Commands,\n} from './AndroidDrawerLayoutNativeComponent';\nimport nullthrows from 'nullthrows';\nimport * as React from 'react';\n\nconst DRAWER_STATES = ['Idle', 'Dragging', 'Settling'];\n\ntype DrawerStates = 'Idle' | 'Dragging' | 'Settling';\n\ntype DrawerSlideEvent = $ReadOnly<{|\n  offset: number,\n|}>;\n\ntype Props = $ReadOnly<{|\n  /**\n   * Determines whether the keyboard gets dismissed in response to a drag.\n   *   - 'none' (the default), drags do not dismiss the keyboard.\n   *   - 'on-drag', the keyboard is dismissed when a drag begins.\n   */\n  keyboardDismissMode?: ?('none' | 'on-drag'),\n\n  /**\n   * Specifies the background color of the drawer. The default value is white.\n   * If you want to set the opacity of the drawer, use rgba. Example:\n   *\n   * ```\n   * return (\n   *   <DrawerLayoutAndroid drawerBackgroundColor=\"rgba(0,0,0,0.5)\">\n   *   </DrawerLayoutAndroid>\n   * );\n   * ```\n   */\n  drawerBackgroundColor?: ?ColorValue,\n\n  /**\n   * Specifies the side of the screen from which the drawer will slide in.\n   */\n  drawerPosition: ?('left' | 'right'),\n\n  /**\n   * Specifies the width of the drawer, more precisely the width of the view that be pulled in\n   * from the edge of the window.\n   */\n  drawerWidth?: ?number,\n\n  /**\n   * Specifies the lock mode of the drawer. The drawer can be locked in 3 states:\n   * - unlocked (default), meaning that the drawer will respond (open/close) to touch gestures.\n   * - locked-closed, meaning that the drawer will stay closed and not respond to gestures.\n   * - locked-open, meaning that the drawer will stay opened and not respond to gestures.\n   * The drawer may still be opened and closed programmatically (`openDrawer`/`closeDrawer`).\n   */\n  drawerLockMode?: ?('unlocked' | 'locked-closed' | 'locked-open'),\n\n  /**\n   * Function called whenever there is an interaction with the navigation view.\n   */\n  onDrawerSlide?: ?DirectEventHandler<DrawerSlideEvent>,\n\n  /**\n   * Function called when the drawer state has changed. The drawer can be in 3 states:\n   * - Idle, meaning there is no interaction with the navigation view happening at the time\n   * - Dragging, meaning there is currently an interaction with the navigation view\n   * - Settling, meaning that there was an interaction with the navigation view, and the\n   * navigation view is now finishing its closing or opening animation\n   */\n  onDrawerStateChanged?: ?(state: DrawerStates) => mixed,\n\n  /**\n   * Function called whenever the navigation view has been opened.\n   */\n  onDrawerOpen?: ?() => mixed,\n\n  /**\n   * Function called whenever the navigation view has been closed.\n   */\n  onDrawerClose?: ?() => mixed,\n\n  /**\n   * The navigation view that will be rendered to the side of the screen and can be pulled in.\n   */\n  renderNavigationView: () => React.Element<any>,\n\n  /**\n   * Make the drawer take the entire screen and draw the background of the\n   * status bar to allow it to open over the status bar. It will only have an\n   * effect on API 21+.\n   */\n  statusBarBackgroundColor?: ?ColorValue,\n\n  children?: React.Node,\n  style?: ?ViewStyleProp,\n|}>;\n\ntype State = {|\n  statusBarBackgroundColor: ColorValue,\n|};\n\n/**\n * React component that wraps the platform `DrawerLayout` (Android only). The\n * Drawer (typically used for navigation) is rendered with `renderNavigationView`\n * and direct children are the main view (where your content goes). The navigation\n * view is initially not visible on the screen, but can be pulled in from the\n * side of the window specified by the `drawerPosition` prop and its width can\n * be set by the `drawerWidth` prop.\n *\n * Example:\n *\n * ```\n * render: function() {\n *   var navigationView = (\n *     <View style={{flex: 1, backgroundColor: '#fff'}}>\n *       <Text style={{margin: 10, fontSize: 15, textAlign: 'left'}}>I'm in the Drawer!</Text>\n *     </View>\n *   );\n *   return (\n *     <DrawerLayoutAndroid\n *       drawerWidth={300}\n *       drawerPosition=\"left\"\n *       renderNavigationView={() => navigationView}>\n *       <View style={{flex: 1, alignItems: 'center'}}>\n *         <Text style={{margin: 10, fontSize: 15, textAlign: 'right'}}>Hello</Text>\n *         <Text style={{margin: 10, fontSize: 15, textAlign: 'right'}}>World!</Text>\n *       </View>\n *     </DrawerLayoutAndroid>\n *   );\n * },\n * ```\n */\nclass DrawerLayoutAndroid extends React.Component<Props, State> {\n  static get positions(): mixed {\n    console.warn(\n      'Setting DrawerLayoutAndroid drawerPosition using `DrawerLayoutAndroid.positions` is deprecated. Instead pass the string value \"left\" or \"right\"',\n    );\n\n    return {Left: 'left', Right: 'right'};\n  }\n\n  // $FlowFixMe[missing-local-annot]\n  _nativeRef =\n    React.createRef<\n      React.ElementRef<typeof AndroidDrawerLayoutNativeComponent>,\n    >();\n\n  state: State = {statusBarBackgroundColor: null};\n\n  render(): React.Node {\n    const {\n      drawerBackgroundColor = 'white',\n      onDrawerStateChanged,\n      renderNavigationView,\n      onDrawerOpen,\n      onDrawerClose,\n      ...props\n    } = this.props;\n    const drawStatusBar =\n      Platform.Version >= 21 && this.props.statusBarBackgroundColor != null;\n    const drawerViewWrapper = (\n      <View\n        style={[\n          styles.drawerSubview,\n          {\n            width: this.props.drawerWidth,\n            backgroundColor: drawerBackgroundColor,\n          },\n        ]}\n        collapsable={false}>\n        {renderNavigationView()}\n        {drawStatusBar && <View style={styles.drawerStatusBar} />}\n      </View>\n    );\n    const childrenWrapper = (\n      <View style={styles.mainSubview} collapsable={false}>\n        {drawStatusBar && (\n          <StatusBar\n            translucent\n            backgroundColor={this.props.statusBarBackgroundColor}\n          />\n        )}\n        {drawStatusBar && (\n          <View\n            style={[\n              styles.statusBar,\n              {backgroundColor: this.props.statusBarBackgroundColor},\n            ]}\n          />\n        )}\n        {this.props.children}\n      </View>\n    );\n    return (\n      <AndroidDrawerLayoutNativeComponent\n        {...props}\n        ref={this._nativeRef}\n        drawerBackgroundColor={drawerBackgroundColor}\n        drawerWidth={this.props.drawerWidth}\n        drawerPosition={this.props.drawerPosition}\n        drawerLockMode={this.props.drawerLockMode}\n        style={[styles.base, this.props.style]}\n        onDrawerSlide={this._onDrawerSlide}\n        onDrawerOpen={this._onDrawerOpen}\n        onDrawerClose={this._onDrawerClose}\n        onDrawerStateChanged={this._onDrawerStateChanged}>\n        {childrenWrapper}\n        {drawerViewWrapper}\n      </AndroidDrawerLayoutNativeComponent>\n    );\n  }\n\n  /* $FlowFixMe[missing-local-annot] The type annotation(s) required by Flow's\n   * LTI update could not be added via codemod */\n  _onDrawerSlide = event => {\n    if (this.props.onDrawerSlide) {\n      this.props.onDrawerSlide(event);\n    }\n    if (this.props.keyboardDismissMode === 'on-drag') {\n      dismissKeyboard();\n    }\n  };\n\n  _onDrawerOpen = () => {\n    if (this.props.onDrawerOpen) {\n      this.props.onDrawerOpen();\n    }\n  };\n\n  _onDrawerClose = () => {\n    if (this.props.onDrawerClose) {\n      this.props.onDrawerClose();\n    }\n  };\n\n  /* $FlowFixMe[missing-local-annot] The type annotation(s) required by Flow's\n   * LTI update could not be added via codemod */\n  _onDrawerStateChanged = event => {\n    if (this.props.onDrawerStateChanged) {\n      this.props.onDrawerStateChanged(\n        DRAWER_STATES[event.nativeEvent.drawerState],\n      );\n    }\n  };\n\n  /**\n   * Opens the drawer.\n   */\n  openDrawer() {\n    Commands.openDrawer(nullthrows(this._nativeRef.current));\n  }\n\n  /**\n   * Closes the drawer.\n   */\n  closeDrawer() {\n    Commands.closeDrawer(nullthrows(this._nativeRef.current));\n  }\n\n  /**\n   * Closing and opening example\n   * Note: To access the drawer you have to give it a ref\n   *\n   * Class component:\n   *\n   * render () {\n   *   this.openDrawer = () => {\n   *     this.refs.DRAWER.openDrawer()\n   *   }\n   *   this.closeDrawer = () => {\n   *     this.refs.DRAWER.closeDrawer()\n   *   }\n   *   return (\n   *     <DrawerLayoutAndroid ref={'DRAWER'}>\n   *      {children}\n   *     </DrawerLayoutAndroid>\n   *   )\n   * }\n   *\n   * Function component:\n   *\n   * const drawerRef = useRef()\n   * const openDrawer = () => {\n   *   drawerRef.current.openDrawer()\n   * }\n   * const closeDrawer = () => {\n   *   drawerRef.current.closeDrawer()\n   * }\n   * return (\n   *   <DrawerLayoutAndroid ref={drawerRef}>\n   *     {children}\n   *   </DrawerLayoutAndroid>\n   * )\n   */\n\n  /**\n   * Native methods\n   */\n  blur() {\n    nullthrows(this._nativeRef.current).blur();\n  }\n\n  focus() {\n    nullthrows(this._nativeRef.current).focus();\n  }\n\n  measure(callback: MeasureOnSuccessCallback) {\n    nullthrows(this._nativeRef.current).measure(callback);\n  }\n\n  measureInWindow(callback: MeasureInWindowOnSuccessCallback) {\n    nullthrows(this._nativeRef.current).measureInWindow(callback);\n  }\n\n  measureLayout(\n    relativeToNativeNode: number,\n    onSuccess: MeasureLayoutOnSuccessCallback,\n    onFail?: () => void,\n  ) {\n    nullthrows(this._nativeRef.current).measureLayout(\n      relativeToNativeNode,\n      onSuccess,\n      onFail,\n    );\n  }\n\n  setNativeProps(nativeProps: Object) {\n    nullthrows(this._nativeRef.current).setNativeProps(nativeProps);\n  }\n}\n\nconst styles = StyleSheet.create({\n  base: {\n    flex: 1,\n    elevation: 16,\n  },\n  mainSubview: {\n    position: 'absolute',\n    top: 0,\n    left: 0,\n    right: 0,\n    bottom: 0,\n  },\n  drawerSubview: {\n    position: 'absolute',\n    top: 0,\n    bottom: 0,\n  },\n  statusBar: {\n    height: StatusBar.currentHeight,\n  },\n  drawerStatusBar: {\n    position: 'absolute',\n    top: 0,\n    left: 0,\n    right: 0,\n    height: StatusBar.currentHeight,\n    backgroundColor: 'rgba(0, 0, 0, 0.251)',\n  },\n});\n\nmodule.exports = DrawerLayoutAndroid;\n","/**\n * Copyright (c) Meta Platforms, Inc. and affiliates.\n *\n * This source code is licensed under the MIT license found in the\n * LICENSE file in the root directory of this source tree.\n *\n * @format\n * @flow strict-local\n */\n\nimport type {ViewStyleProp} from '../../StyleSheet/StyleSheet';\nimport type {\n  ViewLayout,\n  ViewLayoutEvent,\n  ViewProps,\n} from '../View/ViewPropTypes';\nimport type {KeyboardEvent, KeyboardMetrics} from './Keyboard';\n\nimport LayoutAnimation from '../../LayoutAnimation/LayoutAnimation';\nimport StyleSheet from '../../StyleSheet/StyleSheet';\nimport Platform from '../../Utilities/Platform';\nimport {type EventSubscription} from '../../vendor/emitter/EventEmitter';\nimport AccessibilityInfo from '../AccessibilityInfo/AccessibilityInfo';\nimport View from '../View/View';\nimport Keyboard from './Keyboard';\nimport * as React from 'react';\n\ntype Props = $ReadOnly<{|\n  ...ViewProps,\n\n  /**\n   * Specify how to react to the presence of the keyboard.\n   */\n  behavior?: ?('height' | 'position' | 'padding'),\n\n  /**\n   * Style of the content container when `behavior` is 'position'.\n   */\n  contentContainerStyle?: ?ViewStyleProp,\n\n  /**\n   * Controls whether this `KeyboardAvoidingView` instance should take effect.\n   * This is useful when more than one is on the screen. Defaults to true.\n   */\n  enabled?: ?boolean,\n\n  /**\n   * Distance between the top of the user screen and the React Native view. This\n   * may be non-zero in some cases. Defaults to 0.\n   */\n  keyboardVerticalOffset?: number,\n|}>;\n\ntype State = {|\n  bottom: number,\n|};\n\n/**\n * View that moves out of the way when the keyboard appears by automatically\n * adjusting its height, position, or bottom padding.\n */\nclass KeyboardAvoidingView extends React.Component<Props, State> {\n  _frame: ?ViewLayout = null;\n  _keyboardEvent: ?KeyboardEvent = null;\n  _subscriptions: Array<EventSubscription> = [];\n  viewRef: {current: React.ElementRef<typeof View> | null, ...};\n  _initialFrameHeight: number = 0;\n\n  constructor(props: Props) {\n    super(props);\n    this.state = {bottom: 0};\n    this.viewRef = React.createRef();\n  }\n\n  async _relativeKeyboardHeight(\n    keyboardFrame: KeyboardMetrics,\n  ): Promise<number> {\n    const frame = this._frame;\n    if (!frame || !keyboardFrame) {\n      return 0;\n    }\n\n    // On iOS when Prefer Cross-Fade Transitions is enabled, the keyboard position\n    // & height is reported differently (0 instead of Y position value matching height of frame)\n    if (\n      Platform.OS === 'ios' &&\n      keyboardFrame.screenY === 0 &&\n      (await AccessibilityInfo.prefersCrossFadeTransitions())\n    ) {\n      return 0;\n    }\n\n    const keyboardY =\n      keyboardFrame.screenY - (this.props.keyboardVerticalOffset ?? 0);\n\n    if (this.props.behavior === 'height') {\n      return Math.max(\n        this.state.bottom + frame.y + frame.height - keyboardY,\n        0,\n      );\n    }\n\n    // Calculate the displacement needed for the view such that it\n    // no longer overlaps with the keyboard\n    return Math.max(frame.y + frame.height - keyboardY, 0);\n  }\n\n  _onKeyboardChange = (event: ?KeyboardEvent) => {\n    this._keyboardEvent = event;\n    this._updateBottomIfNecessary();\n  };\n\n  _onLayout = async (event: ViewLayoutEvent) => {\n    const wasFrameNull = this._frame == null;\n    this._frame = event.nativeEvent.layout;\n    if (!this._initialFrameHeight) {\n      // save the initial frame height, before the keyboard is visible\n      this._initialFrameHeight = this._frame.height;\n    }\n\n    if (wasFrameNull) {\n      await this._updateBottomIfNecessary();\n    }\n\n    if (this.props.onLayout) {\n      this.props.onLayout(event);\n    }\n  };\n\n  _updateBottomIfNecessary = async () => {\n    if (this._keyboardEvent == null) {\n      this.setState({bottom: 0});\n      return;\n    }\n\n    const {duration, easing, endCoordinates} = this._keyboardEvent;\n    const height = await this._relativeKeyboardHeight(endCoordinates);\n\n    if (this.state.bottom === height) {\n      return;\n    }\n\n    if (duration && easing) {\n      LayoutAnimation.configureNext({\n        // We have to pass the duration equal to minimal accepted duration defined here: RCTLayoutAnimation.m\n        duration: duration > 10 ? duration : 10,\n        update: {\n          duration: duration > 10 ? duration : 10,\n          type: LayoutAnimation.Types[easing] || 'keyboard',\n        },\n      });\n    }\n    this.setState({bottom: height});\n  };\n\n  componentDidMount(): void {\n    if (Platform.OS === 'ios') {\n      this._subscriptions = [\n        Keyboard.addListener('keyboardWillChangeFrame', this._onKeyboardChange),\n      ];\n    } else {\n      this._subscriptions = [\n        Keyboard.addListener('keyboardDidHide', this._onKeyboardChange),\n        Keyboard.addListener('keyboardDidShow', this._onKeyboardChange),\n      ];\n    }\n  }\n\n  componentWillUnmount(): void {\n    this._subscriptions.forEach(subscription => {\n      subscription.remove();\n    });\n  }\n\n  render(): React.Node {\n    const {\n      behavior,\n      children,\n      contentContainerStyle,\n      enabled = true,\n      // eslint-disable-next-line no-unused-vars\n      keyboardVerticalOffset = 0,\n      style,\n      onLayout,\n      ...props\n    } = this.props;\n    const bottomHeight = enabled === true ? this.state.bottom : 0;\n    switch (behavior) {\n      case 'height':\n        let heightStyle;\n        if (this._frame != null && this.state.bottom > 0) {\n          // Note that we only apply a height change when there is keyboard present,\n          // i.e. this.state.bottom is greater than 0. If we remove that condition,\n          // this.frame.height will never go back to its original value.\n          // When height changes, we need to disable flex.\n          heightStyle = {\n            height: this._initialFrameHeight - bottomHeight,\n            flex: 0,\n          };\n        }\n        return (\n          <View\n            ref={this.viewRef}\n            style={StyleSheet.compose(style, heightStyle)}\n            onLayout={this._onLayout}\n            {...props}>\n            {children}\n          </View>\n        );\n\n      case 'position':\n        return (\n          <View\n            ref={this.viewRef}\n            style={style}\n            onLayout={this._onLayout}\n            {...props}>\n            <View\n              style={StyleSheet.compose(contentContainerStyle, {\n                bottom: bottomHeight,\n              })}>\n              {children}\n            </View>\n          </View>\n        );\n\n      case 'padding':\n        return (\n          <View\n            ref={this.viewRef}\n            style={StyleSheet.compose(style, {paddingBottom: bottomHeight})}\n            onLayout={this._onLayout}\n            {...props}>\n            {children}\n          </View>\n        );\n\n      default:\n        return (\n          <View\n            ref={this.viewRef}\n            onLayout={this._onLayout}\n            style={style}\n            {...props}>\n            {children}\n          </View>\n        );\n    }\n  }\n}\n\nexport default KeyboardAvoidingView;\n","/**\n * Copyright (c) Meta Platforms, Inc. and affiliates.\n *\n * This source code is licensed under the MIT license found in the\n * LICENSE file in the root directory of this source tree.\n *\n * @flow strict-local\n * @format\n */\n\nimport type {\n  LayoutEvent,\n  MouseEvent,\n  PressEvent,\n} from '../../Types/CoreEventTypes';\nimport type {\n  AccessibilityActionEvent,\n  AccessibilityActionInfo,\n  AccessibilityRole,\n  AccessibilityState,\n  AccessibilityValue,\n} from '../View/ViewAccessibility';\n\nimport {PressabilityDebugView} from '../../Pressability/PressabilityDebug';\nimport usePressability from '../../Pressability/usePressability';\nimport {type RectOrSize} from '../../StyleSheet/Rect';\nimport View from '../View/View';\nimport useAndroidRippleForView, {\n  type RippleConfig,\n} from './useAndroidRippleForView';\nimport * as React from 'react';\nimport {useImperativeHandle, useMemo, useRef, useState} from 'react';\n\ntype ViewStyleProp = $ElementType<React.ElementConfig<typeof View>, 'style'>;\n\nexport type StateCallbackType = $ReadOnly<{|\n  pressed: boolean,\n|}>;\n\ntype Props = $ReadOnly<{|\n  /**\n   * Accessibility.\n   */\n  accessibilityActions?: ?$ReadOnlyArray<AccessibilityActionInfo>,\n  accessibilityElementsHidden?: ?boolean,\n  accessibilityHint?: ?Stringish,\n  accessibilityLanguage?: ?Stringish,\n  accessibilityIgnoresInvertColors?: ?boolean,\n  accessibilityLabel?: ?Stringish,\n  accessibilityLiveRegion?: ?('none' | 'polite' | 'assertive'),\n  accessibilityRole?: ?AccessibilityRole,\n  accessibilityState?: ?AccessibilityState,\n  accessibilityValue?: ?AccessibilityValue,\n  'aria-valuemax'?: AccessibilityValue['max'],\n  'aria-valuemin'?: AccessibilityValue['min'],\n  'aria-valuenow'?: AccessibilityValue['now'],\n  'aria-valuetext'?: AccessibilityValue['text'],\n  accessibilityViewIsModal?: ?boolean,\n  'aria-modal'?: ?boolean,\n  accessible?: ?boolean,\n\n  /**\n   * alias for accessibilityState\n   *\n   * see https://reactnative.dev/docs/accessibility#accessibilitystate\n   */\n  'aria-busy'?: ?boolean,\n  'aria-checked'?: ?boolean | 'mixed',\n  'aria-disabled'?: ?boolean,\n  'aria-expanded'?: ?boolean,\n  'aria-selected'?: ?boolean,\n  /**\n   * A value indicating whether the accessibility elements contained within\n   * this accessibility element are hidden.\n   */\n  'aria-hidden'?: ?boolean,\n  'aria-live'?: ?('polite' | 'assertive' | 'off'),\n  focusable?: ?boolean,\n  importantForAccessibility?: ?('auto' | 'yes' | 'no' | 'no-hide-descendants'),\n  onAccessibilityAction?: ?(event: AccessibilityActionEvent) => mixed,\n\n  /**\n   * Whether a press gesture can be interrupted by a parent gesture such as a\n   * scroll event. Defaults to true.\n   */\n  cancelable?: ?boolean,\n\n  /**\n   * Either children or a render prop that receives a boolean reflecting whether\n   * the component is currently pressed.\n   */\n  children: React.Node | ((state: StateCallbackType) => React.Node),\n\n  /**\n   * Duration to wait after hover in before calling `onHoverIn`.\n   */\n  delayHoverIn?: ?number,\n\n  /**\n   * Duration to wait after hover out before calling `onHoverOut`.\n   */\n  delayHoverOut?: ?number,\n\n  /**\n   * Duration (in milliseconds) from `onPressIn` before `onLongPress` is called.\n   */\n  delayLongPress?: ?number,\n\n  /**\n   * Whether the press behavior is disabled.\n   */\n  disabled?: ?boolean,\n\n  /**\n   * Additional distance outside of this view in which a press is detected.\n   */\n  hitSlop?: ?RectOrSize,\n\n  /**\n   * Additional distance outside of this view in which a touch is considered a\n   * press before `onPressOut` is triggered.\n   */\n  pressRetentionOffset?: ?RectOrSize,\n\n  /**\n   * Called when this view's layout changes.\n   */\n  onLayout?: ?(event: LayoutEvent) => mixed,\n\n  /**\n   * Called when the hover is activated to provide visual feedback.\n   */\n  onHoverIn?: ?(event: MouseEvent) => mixed,\n\n  /**\n   * Called when the hover is deactivated to undo visual feedback.\n   */\n  onHoverOut?: ?(event: MouseEvent) => mixed,\n\n  /**\n   * Called when a long-tap gesture is detected.\n   */\n  onLongPress?: ?(event: PressEvent) => mixed,\n\n  /**\n   * Called when a single tap gesture is detected.\n   */\n  onPress?: ?(event: PressEvent) => mixed,\n\n  /**\n   * Called when a touch is engaged before `onPress`.\n   */\n  onPressIn?: ?(event: PressEvent) => mixed,\n\n  /**\n   * Called when a touch is released before `onPress`.\n   */\n  onPressOut?: ?(event: PressEvent) => mixed,\n\n  /**\n   * Either view styles or a function that receives a boolean reflecting whether\n   * the component is currently pressed and returns view styles.\n   */\n  style?: ViewStyleProp | ((state: StateCallbackType) => ViewStyleProp),\n\n  /**\n   * Identifier used to find this view in tests.\n   */\n  testID?: ?string,\n\n  /**\n   * If true, doesn't play system sound on touch.\n   */\n  android_disableSound?: ?boolean,\n\n  /**\n   * Enables the Android ripple effect and configures its color.\n   */\n  android_ripple?: ?RippleConfig,\n\n  /**\n   * Used only for documentation or testing (e.g. snapshot testing).\n   */\n  testOnly_pressed?: ?boolean,\n\n  /**\n   * Duration to wait after press down before calling `onPressIn`.\n   */\n  unstable_pressDelay?: ?number,\n  /**\n   * Web to Native Accessibilty props\n   * https://github.com/facebook/react-native/issues/34424\n   */\n  'aria-label'?: ?string,\n|}>;\n\n/**\n * Component used to build display components that should respond to whether the\n * component is currently pressed or not.\n */\n/* $FlowFixMe[missing-local-annot] The type annotation(s) required by Flow's\n * LTI update could not be added via codemod */\nfunction Pressable(props: Props, forwardedRef): React.Node {\n  const {\n    accessible,\n    accessibilityState,\n    'aria-live': ariaLive,\n    android_disableSound,\n    android_ripple,\n    'aria-busy': ariaBusy,\n    'aria-checked': ariaChecked,\n    'aria-disabled': ariaDisabled,\n    'aria-expanded': ariaExpanded,\n    'aria-label': ariaLabel,\n    'aria-selected': ariaSelected,\n    cancelable,\n    children,\n    delayHoverIn,\n    delayHoverOut,\n    delayLongPress,\n    disabled,\n    focusable,\n    hitSlop,\n    onHoverIn,\n    onHoverOut,\n    onLongPress,\n    onPress,\n    onPressIn,\n    onPressOut,\n    pressRetentionOffset,\n    style,\n    testOnly_pressed,\n    unstable_pressDelay,\n    ...restProps\n  } = props;\n\n  const viewRef = useRef<React.ElementRef<typeof View> | null>(null);\n  useImperativeHandle(forwardedRef, () => viewRef.current);\n\n  const android_rippleConfig = useAndroidRippleForView(android_ripple, viewRef);\n\n  const [pressed, setPressed] = usePressState(testOnly_pressed === true);\n\n  let _accessibilityState = {\n    busy: ariaBusy ?? accessibilityState?.busy,\n    checked: ariaChecked ?? accessibilityState?.checked,\n    disabled: ariaDisabled ?? accessibilityState?.disabled,\n    expanded: ariaExpanded ?? accessibilityState?.expanded,\n    selected: ariaSelected ?? accessibilityState?.selected,\n  };\n\n  _accessibilityState =\n    disabled != null ? {..._accessibilityState, disabled} : _accessibilityState;\n\n  const accessibilityValue = {\n    max: props['aria-valuemax'] ?? props.accessibilityValue?.max,\n    min: props['aria-valuemin'] ?? props.accessibilityValue?.min,\n    now: props['aria-valuenow'] ?? props.accessibilityValue?.now,\n    text: props['aria-valuetext'] ?? props.accessibilityValue?.text,\n  };\n\n  const accessibilityLiveRegion =\n    ariaLive === 'off' ? 'none' : ariaLive ?? props.accessibilityLiveRegion;\n\n  const accessibilityLabel = ariaLabel ?? props.accessibilityLabel;\n  const restPropsWithDefaults: React.ElementConfig<typeof View> = {\n    ...restProps,\n    ...android_rippleConfig?.viewProps,\n    accessible: accessible !== false,\n    accessibilityViewIsModal:\n      restProps['aria-modal'] ?? restProps.accessibilityViewIsModal,\n    accessibilityLiveRegion,\n    accessibilityLabel,\n    accessibilityState: _accessibilityState,\n    focusable: focusable !== false,\n    accessibilityValue,\n    hitSlop,\n  };\n\n  const config = useMemo(\n    () => ({\n      cancelable,\n      disabled,\n      hitSlop,\n      pressRectOffset: pressRetentionOffset,\n      android_disableSound,\n      delayHoverIn,\n      delayHoverOut,\n      delayLongPress,\n      delayPressIn: unstable_pressDelay,\n      onHoverIn,\n      onHoverOut,\n      onLongPress,\n      onPress,\n      onPressIn(event: PressEvent): void {\n        if (android_rippleConfig != null) {\n          android_rippleConfig.onPressIn(event);\n        }\n        setPressed(true);\n        if (onPressIn != null) {\n          onPressIn(event);\n        }\n      },\n      onPressMove: android_rippleConfig?.onPressMove,\n      onPressOut(event: PressEvent): void {\n        if (android_rippleConfig != null) {\n          android_rippleConfig.onPressOut(event);\n        }\n        setPressed(false);\n        if (onPressOut != null) {\n          onPressOut(event);\n        }\n      },\n    }),\n    [\n      android_disableSound,\n      android_rippleConfig,\n      cancelable,\n      delayHoverIn,\n      delayHoverOut,\n      delayLongPress,\n      disabled,\n      hitSlop,\n      onHoverIn,\n      onHoverOut,\n      onLongPress,\n      onPress,\n      onPressIn,\n      onPressOut,\n      pressRetentionOffset,\n      setPressed,\n      unstable_pressDelay,\n    ],\n  );\n  const eventHandlers = usePressability(config);\n\n  return (\n    <View\n      {...restPropsWithDefaults}\n      {...eventHandlers}\n      ref={viewRef}\n      style={typeof style === 'function' ? style({pressed}) : style}\n      collapsable={false}>\n      {typeof children === 'function' ? children({pressed}) : children}\n      {__DEV__ ? <PressabilityDebugView color=\"red\" hitSlop={hitSlop} /> : null}\n    </View>\n  );\n}\n\nfunction usePressState(forcePressed: boolean): [boolean, (boolean) => void] {\n  const [pressed, setPressed] = useState(false);\n  return [pressed || forcePressed, setPressed];\n}\n\nconst MemoedPressable = React.memo(React.forwardRef(Pressable));\nMemoedPressable.displayName = 'Pressable';\n\nexport default (MemoedPressable: React.AbstractComponent<\n  Props,\n  React.ElementRef<typeof View>,\n>);\n","/**\n * Copyright (c) Meta Platforms, Inc. and affiliates.\n *\n * This source code is licensed under the MIT license found in the\n * LICENSE file in the root directory of this source tree.\n *\n * @flow strict-local\n * @format\n */\n\nimport type {ColorValue} from '../../StyleSheet/StyleSheet';\nimport type {PressEvent} from '../../Types/CoreEventTypes';\n\nimport processColor from '../../StyleSheet/processColor';\nimport Platform from '../../Utilities/Platform';\nimport View from '../View/View';\nimport {Commands} from '../View/ViewNativeComponent';\nimport invariant from 'invariant';\nimport * as React from 'react';\nimport {useMemo} from 'react';\n\ntype NativeBackgroundProp = $ReadOnly<{|\n  type: 'RippleAndroid',\n  color: ?number,\n  borderless: boolean,\n  rippleRadius: ?number,\n|}>;\n\nexport type RippleConfig = {|\n  color?: ColorValue,\n  borderless?: boolean,\n  radius?: number,\n  foreground?: boolean,\n|};\n\n/**\n * Provides the event handlers and props for configuring the ripple effect on\n * supported versions of Android.\n */\nexport default function useAndroidRippleForView(\n  rippleConfig: ?RippleConfig,\n  viewRef: {|current: null | React.ElementRef<typeof View>|},\n): ?$ReadOnly<{|\n  onPressIn: (event: PressEvent) => void,\n  onPressMove: (event: PressEvent) => void,\n  onPressOut: (event: PressEvent) => void,\n  viewProps:\n    | $ReadOnly<{|nativeBackgroundAndroid: NativeBackgroundProp|}>\n    | $ReadOnly<{|nativeForegroundAndroid: NativeBackgroundProp|}>,\n|}> {\n  const {color, borderless, radius, foreground} = rippleConfig ?? {};\n\n  return useMemo(() => {\n    if (\n      Platform.OS === 'android' &&\n      Platform.Version >= 21 &&\n      (color != null || borderless != null || radius != null)\n    ) {\n      const processedColor = processColor(color);\n      invariant(\n        processedColor == null || typeof processedColor === 'number',\n        'Unexpected color given for Ripple color',\n      );\n\n      const nativeRippleValue = {\n        type: 'RippleAndroid',\n        color: processedColor,\n        borderless: borderless === true,\n        rippleRadius: radius,\n      };\n\n      return {\n        viewProps:\n          foreground === true\n            ? {nativeForegroundAndroid: nativeRippleValue}\n            : {nativeBackgroundAndroid: nativeRippleValue},\n        onPressIn(event: PressEvent): void {\n          const view = viewRef.current;\n          if (view != null) {\n            Commands.hotspotUpdate(\n              view,\n              event.nativeEvent.locationX ?? 0,\n              event.nativeEvent.locationY ?? 0,\n            );\n            Commands.setPressed(view, true);\n          }\n        },\n        onPressMove(event: PressEvent): void {\n          const view = viewRef.current;\n          if (view != null) {\n            Commands.hotspotUpdate(\n              view,\n              event.nativeEvent.locationX ?? 0,\n              event.nativeEvent.locationY ?? 0,\n            );\n          }\n        },\n        onPressOut(event: PressEvent): void {\n          const view = viewRef.current;\n          if (view != null) {\n            Commands.setPressed(view, false);\n          }\n        },\n      };\n    }\n    return null;\n  }, [borderless, color, foreground, radius, viewRef]);\n}\n","/**\n * Copyright (c) Meta Platforms, Inc. and affiliates.\n *\n * This source code is licensed under the MIT license found in the\n * LICENSE file in the root directory of this source tree.\n *\n * @flow strict-local\n * @format\n */\n\nimport type {ColorValue} from '../../StyleSheet/StyleSheet';\nimport type {ViewProps} from '../View/ViewPropTypes';\n\nimport ProgressBarAndroidNativeComponent from './ProgressBarAndroidNativeComponent';\n\nconst React = require('react');\n\nexport type ProgressBarAndroidProps = $ReadOnly<{|\n  ...ViewProps,\n\n  /**\n   * Style of the ProgressBar and whether it shows indeterminate progress (e.g. spinner).\n   *\n   * `indeterminate` can only be false if `styleAttr` is Horizontal, and requires a\n   * `progress` value.\n   */\n  ...\n    | {|\n        styleAttr: 'Horizontal',\n        indeterminate: false,\n        progress: number,\n      |}\n    | {|\n        typeAttr:\n          | 'Horizontal'\n          | 'Normal'\n          | 'Small'\n          | 'Large'\n          | 'Inverse'\n          | 'SmallInverse'\n          | 'LargeInverse',\n        indeterminate: true,\n      |},\n  /**\n   * Whether to show the ProgressBar (true, the default) or hide it (false).\n   */\n  animating?: ?boolean,\n  /**\n   * Color of the progress bar.\n   */\n  color?: ?ColorValue,\n  /**\n   * Used to locate this view in end-to-end tests.\n   */\n  testID?: ?string,\n|}>;\n\n/**\n * React component that wraps the Android-only `ProgressBar`. This component is\n * used to indicate that the app is loading or there is activity in the app.\n *\n * Example:\n *\n * ```\n * render: function() {\n *   var progressBar =\n *     <View style={styles.container}>\n *       <ProgressBar styleAttr=\"Inverse\" />\n *     </View>;\n\n *   return (\n *     <MyLoadingComponent\n *       componentView={componentView}\n *       loadingView={progressBar}\n *       style={styles.loadingComponent}\n *     />\n *   );\n * },\n * ```\n */\nconst ProgressBarAndroid = (\n  {\n    styleAttr = 'Normal',\n    indeterminate = true,\n    animating = true,\n    ...restProps\n  }: ProgressBarAndroidProps,\n  forwardedRef: ?React.Ref<typeof ProgressBarAndroidNativeComponent>,\n) => {\n  return (\n    <ProgressBarAndroidNativeComponent\n      styleAttr={styleAttr}\n      indeterminate={indeterminate}\n      animating={animating}\n      {...restProps}\n      ref={forwardedRef}\n    />\n  );\n};\n\nconst ProgressBarAndroidToExport = React.forwardRef(ProgressBarAndroid);\n\nmodule.exports =\n  /* $FlowFixMe(>=0.89.0 site=react_native_android_fb) This comment suppresses an\n   * error found when Flow v0.89 was deployed. To see the error, delete this\n   * comment and run Flow. */\n  (ProgressBarAndroidToExport: typeof ProgressBarAndroidNativeComponent);\n","/**\n * Copyright (c) Meta Platforms, Inc. and affiliates.\n *\n * This source code is licensed under the MIT license found in the\n * LICENSE file in the root directory of this source tree.\n *\n * @flow strict-local\n * @format\n */\n\nimport type {HostComponent} from '../../Renderer/shims/ReactNativeTypes';\nimport type {ColorValue} from '../../StyleSheet/StyleSheet';\nimport type {Double, WithDefault} from '../../Types/CodegenTypes';\nimport type {ViewProps} from '../View/ViewPropTypes';\n\nimport codegenNativeComponent from '../../Utilities/codegenNativeComponent';\n\ntype NativeProps = $ReadOnly<{|\n  ...ViewProps,\n\n  //Props\n  styleAttr?: string,\n  typeAttr?: string,\n  indeterminate: boolean,\n  progress?: WithDefault<Double, 0>,\n  animating?: WithDefault<boolean, true>,\n  color?: ?ColorValue,\n  testID?: WithDefault<string, ''>,\n|}>;\n\nexport default (codegenNativeComponent<NativeProps>('AndroidProgressBar', {\n  interfaceOnly: true,\n}): HostComponent<NativeProps>);\n","/**\n * Copyright (c) Meta Platforms, Inc. and affiliates.\n *\n * This source code is licensed under the MIT license found in the\n * LICENSE file in the root directory of this source tree.\n *\n * @format\n */\n\n'use strict';\nimport StyleSheet from '../../StyleSheet/StyleSheet';\nimport Text from '../../Text/Text';\nimport View from '../View/View';\nimport * as React from 'react';\n\nclass DummyProgressViewIOS extends React.Component {\n  render() {\n    return (\n      <View style={[styles.dummy, this.props.style]}>\n        <Text style={styles.text}>\n          ProgressViewIOS is not supported on this platform!\n        </Text>\n      </View>\n    );\n  }\n}\n\nconst styles = StyleSheet.create({\n  dummy: {\n    width: 120,\n    height: 20,\n    backgroundColor: '#ffbcbc',\n    borderWidth: 1,\n    borderColor: 'red',\n    alignItems: 'center',\n    justifyContent: 'center',\n  },\n  text: {\n    color: '#333333',\n    margin: 5,\n    fontSize: 10,\n  },\n});\n\nmodule.exports = DummyProgressViewIOS;\n","/**\n * Copyright (c) Meta Platforms, Inc. and affiliates.\n *\n * This source code is licensed under the MIT license found in the\n * LICENSE file in the root directory of this source tree.\n *\n * @format\n * @flow strict-local\n */\n\nimport type {ImageSource} from '../../Image/ImageSource';\nimport type {SyntheticEvent} from '../../Types/CoreEventTypes';\nimport type {AccessibilityState} from '../View/ViewAccessibility';\nimport type {ViewProps} from '../View/ViewPropTypes';\n\nimport StyleSheet, {\n  type ColorValue,\n  type ViewStyleProp,\n} from '../../StyleSheet/StyleSheet';\nimport Platform from '../../Utilities/Platform';\nimport SliderNativeComponent from './SliderNativeComponent';\nimport * as React from 'react';\n\ntype Event = SyntheticEvent<\n  $ReadOnly<{|\n    value: number,\n    /**\n     * Android Only.\n     */\n    fromUser?: boolean,\n  |}>,\n>;\n\ntype IOSProps = $ReadOnly<{|\n  /**\n   * Assigns a single image for the track. Only static images are supported.\n   * The center pixel of the image will be stretched to fill the track.\n   */\n  trackImage?: ?ImageSource,\n\n  /**\n   * Assigns a minimum track image. Only static images are supported. The\n   * rightmost pixel of the image will be stretched to fill the track.\n   */\n  minimumTrackImage?: ?ImageSource,\n\n  /**\n   * Assigns a maximum track image. Only static images are supported. The\n   * leftmost pixel of the image will be stretched to fill the track.\n   */\n  maximumTrackImage?: ?ImageSource,\n\n  /**\n   * Sets an image for the thumb. Only static images are supported.\n   */\n  thumbImage?: ?ImageSource,\n|}>;\n\ntype Props = $ReadOnly<{|\n  ...ViewProps,\n  ...IOSProps,\n\n  /**\n   * Used to style and layout the `Slider`.  See `StyleSheet.js` and\n   * `DeprecatedViewStylePropTypes.js` for more info.\n   */\n  style?: ?ViewStyleProp,\n\n  /**\n   * Initial value of the slider. The value should be between minimumValue\n   * and maximumValue, which default to 0 and 1 respectively.\n   * Default value is 0.\n   *\n   * *This is not a controlled component*, you don't need to update the\n   * value during dragging.\n   */\n  value?: ?number,\n\n  /**\n   * Step value of the slider. The value should be\n   * between 0 and (maximumValue - minimumValue).\n   * Default value is 0.\n   */\n  step?: ?number,\n\n  /**\n   * Initial minimum value of the slider. Default value is 0.\n   */\n  minimumValue?: ?number,\n\n  /**\n   * Initial maximum value of the slider. Default value is 1.\n   */\n  maximumValue?: ?number,\n\n  /**\n   * The color used for the track to the left of the button.\n   * Overrides the default blue gradient image on iOS.\n   */\n  minimumTrackTintColor?: ?ColorValue,\n\n  /**\n   * The color used for the track to the right of the button.\n   * Overrides the default blue gradient image on iOS.\n   */\n  maximumTrackTintColor?: ?ColorValue,\n  /**\n   * The color used to tint the default thumb images on iOS, or the\n   * color of the foreground switch grip on Android.\n   */\n  thumbTintColor?: ?ColorValue,\n\n  /**\n   * If true the user won't be able to move the slider.\n   * Default value is false.\n   */\n  disabled?: ?boolean,\n\n  /**\n   * Callback continuously called while the user is dragging the slider.\n   */\n  onValueChange?: ?(value: number) => void,\n\n  /**\n   * Callback that is called when the user releases the slider,\n   * regardless if the value has changed. The current value is passed\n   * as an argument to the callback handler.\n   */\n  onSlidingComplete?: ?(value: number) => void,\n\n  /**\n   * Used to locate this view in UI automation tests.\n   */\n  testID?: ?string,\n\n  /**\n    Indicates to accessibility services that UI Component is in a specific State.\n   */\n  accessibilityState?: ?AccessibilityState,\n|}>;\n\n/**\n * A component used to select a single value from a range of values.\n *\n * ### Usage\n *\n * The example below shows how to use `Slider` to change\n * a value used by `Text`. The value is stored using\n * the state of the root component (`App`). The same component\n * subscribes to the `onValueChange`  of `Slider` and changes\n * the value using `setState`.\n *\n *```\n * import React from 'react';\n * import { StyleSheet, Text, View, Slider } from 'react-native';\n *\n * export default class App extends React.Component {\n *   constructor(props) {\n *     super(props);\n *     this.state = {\n *       value: 50\n *     }\n *   }\n *\n *   change(value) {\n *     this.setState(() => {\n *       return {\n *         value: parseFloat(value)\n *       };\n *     });\n *   }\n *\n *   render() {\n *     const {value} = this.state;\n *     return (\n *       <View style={styles.container}>\n *         <Text style={styles.text}>{String(value)}</Text>\n *         <Slider\n *           step={1}\n *           maximumValue={100}\n *           onValueChange={this.change.bind(this)}\n *           value={value} />\n *       </View>\n *     );\n *   }\n * }\n *\n * const styles = StyleSheet.create({\n *   container: {\n *     flex: 1,\n *     flexDirection: 'column',\n *     justifyContent: 'center'\n *   },\n *   text: {\n *     fontSize: 50,\n *     textAlign: 'center'\n *   }\n * });\n *```\n *\n */\nconst Slider = (\n  props: Props,\n  forwardedRef?: ?React.Ref<typeof SliderNativeComponent>,\n) => {\n  const style = StyleSheet.compose(styles.slider, props.style);\n\n  const {\n    value = 0.5,\n    minimumValue = 0,\n    maximumValue = 1,\n    step = 0,\n    onValueChange,\n    onSlidingComplete,\n    ...localProps\n  } = props;\n\n  const onValueChangeEvent = onValueChange\n    ? (event: Event) => {\n        let userEvent = true;\n        if (Platform.OS === 'android') {\n          // On Android there's a special flag telling us the user is\n          // dragging the slider.\n          userEvent =\n            event.nativeEvent.fromUser != null && event.nativeEvent.fromUser;\n        }\n        userEvent && onValueChange(event.nativeEvent.value);\n      }\n    : null;\n\n  const onSlidingCompleteEvent = onSlidingComplete\n    ? (event: Event) => {\n        onSlidingComplete(event.nativeEvent.value);\n      }\n    : null;\n\n  const disabled =\n    props.disabled === true || props.accessibilityState?.disabled === true;\n  const accessibilityState = disabled\n    ? {...props.accessibilityState, disabled: true}\n    : props.accessibilityState;\n\n  return (\n    <SliderNativeComponent\n      {...localProps}\n      accessibilityState={accessibilityState}\n      // TODO: Reconcile these across the two platforms.\n      enabled={!disabled}\n      disabled={disabled}\n      maximumValue={maximumValue}\n      minimumValue={minimumValue}\n      onResponderTerminationRequest={() => false}\n      onSlidingComplete={onSlidingCompleteEvent}\n      onStartShouldSetResponder={() => true}\n      onValueChange={onValueChangeEvent}\n      ref={forwardedRef}\n      step={step}\n      style={style}\n      value={value}\n    />\n  );\n};\n\nconst SliderWithRef: React.AbstractComponent<\n  Props,\n  React.ElementRef<typeof SliderNativeComponent>,\n> = React.forwardRef(Slider);\n\nlet styles;\nif (Platform.OS === 'ios') {\n  styles = StyleSheet.create({\n    slider: {\n      height: 40,\n    },\n  });\n} else {\n  styles = StyleSheet.create({\n    slider: {},\n  });\n}\n\nmodule.exports = SliderWithRef;\n","/**\n * Copyright (c) Meta Platforms, Inc. and affiliates.\n *\n * This source code is licensed under the MIT license found in the\n * LICENSE file in the root directory of this source tree.\n *\n * @format\n * @flow strict-local\n */\n\nimport type {ImageSource} from '../../Image/ImageSource';\nimport type {HostComponent} from '../../Renderer/shims/ReactNativeTypes';\nimport type {ColorValue} from '../../StyleSheet/StyleSheet';\nimport type {\n  BubblingEventHandler,\n  DirectEventHandler,\n  Double,\n  WithDefault,\n} from '../../Types/CodegenTypes';\nimport type {ViewProps} from '../View/ViewPropTypes';\n\nimport codegenNativeComponent from '../../Utilities/codegenNativeComponent';\n\ntype Event = $ReadOnly<{|\n  value: Double,\n  fromUser?: boolean,\n|}>;\n\ntype NativeProps = $ReadOnly<{|\n  ...ViewProps,\n\n  // Props\n  disabled?: WithDefault<boolean, false>,\n  enabled?: WithDefault<boolean, true>,\n  maximumTrackImage?: ?ImageSource,\n  maximumTrackTintColor?: ?ColorValue,\n  maximumValue?: WithDefault<Double, 1>,\n  minimumTrackImage?: ?ImageSource,\n  minimumTrackTintColor?: ?ColorValue,\n  minimumValue?: WithDefault<Double, 0>,\n  step?: WithDefault<Double, 0>,\n  testID?: WithDefault<string, ''>,\n  thumbImage?: ?ImageSource,\n  thumbTintColor?: ?ColorValue,\n  trackImage?: ?ImageSource,\n  value?: WithDefault<Double, 0>,\n\n  // Events\n  onValueChange?: ?BubblingEventHandler<Event>,\n  onSlidingComplete?: ?DirectEventHandler<Event>,\n|}>;\n\nexport default (codegenNativeComponent<NativeProps>('Slider', {\n  interfaceOnly: true,\n  paperComponentName: 'RCTSlider',\n}): HostComponent<NativeProps>);\n","/**\n * Copyright (c) Meta Platforms, Inc. and affiliates.\n *\n * This source code is licensed under the MIT license found in the\n * LICENSE file in the root directory of this source tree.\n *\n * @flow strict-local\n * @format\n */\n\nimport type {HostComponent} from '../../Renderer/shims/ReactNativeTypes';\nimport type {ColorValue} from '../../StyleSheet/StyleSheet';\nimport type {\n  BubblingEventHandler,\n  Int32,\n  WithDefault,\n} from '../../Types/CodegenTypes';\nimport type {ViewProps} from '../View/ViewPropTypes';\n\nimport codegenNativeCommands from '../../Utilities/codegenNativeCommands';\nimport codegenNativeComponent from '../../Utilities/codegenNativeComponent';\nimport * as React from 'react';\n\ntype SwitchChangeEvent = $ReadOnly<{|\n  value: boolean,\n  target: Int32,\n|}>;\n\ntype NativeProps = $ReadOnly<{|\n  ...ViewProps,\n\n  // Props\n  disabled?: WithDefault<boolean, false>,\n  enabled?: WithDefault<boolean, true>,\n  thumbColor?: ?ColorValue,\n  trackColorForFalse?: ?ColorValue,\n  trackColorForTrue?: ?ColorValue,\n  value?: WithDefault<boolean, false>,\n  on?: WithDefault<boolean, false>,\n  thumbTintColor?: ?ColorValue,\n  trackTintColor?: ?ColorValue,\n\n  // Events\n  onChange?: BubblingEventHandler<SwitchChangeEvent>,\n|}>;\n\ntype NativeType = HostComponent<NativeProps>;\n\ninterface NativeCommands {\n  +setNativeValue: (\n    viewRef: React.ElementRef<NativeType>,\n    value: boolean,\n  ) => void;\n}\n\nexport const Commands: NativeCommands = codegenNativeCommands<NativeCommands>({\n  supportedCommands: ['setNativeValue'],\n});\n\nexport default (codegenNativeComponent<NativeProps>('AndroidSwitch', {\n  interfaceOnly: true,\n}): NativeType);\n","/**\n * Copyright (c) Meta Platforms, Inc. and affiliates.\n *\n * This source code is licensed under the MIT license found in the\n * LICENSE file in the root directory of this source tree.\n *\n * @flow strict-local\n * @format\n * @generate-docs\n */\n\nimport type {ColorValue} from '../../StyleSheet/StyleSheet';\nimport type {SyntheticEvent} from '../../Types/CoreEventTypes';\nimport type {ViewProps} from '../View/ViewPropTypes';\n\nimport StyleSheet from '../../StyleSheet/StyleSheet';\nimport Platform from '../../Utilities/Platform';\nimport useMergeRefs from '../../Utilities/useMergeRefs';\nimport AndroidSwitchNativeComponent, {\n  Commands as AndroidSwitchCommands,\n} from './AndroidSwitchNativeComponent';\nimport SwitchNativeComponent, {\n  Commands as SwitchCommands,\n} from './SwitchNativeComponent';\nimport * as React from 'react';\n\ntype SwitchChangeEvent = SyntheticEvent<\n  $ReadOnly<{|\n    value: boolean,\n    target: number,\n  |}>,\n>;\n\nexport type Props = $ReadOnly<{|\n  ...ViewProps,\n\n  /**\n    If true the user won't be able to toggle the switch.\n\n    @default false\n   */\n  disabled?: ?boolean,\n\n  /**\n    The value of the switch. If true the switch will be turned on.\n\n    @default false\n   */\n  value?: ?boolean,\n\n  /**\n    Color of the foreground switch grip. If this is set on iOS, the switch grip will lose its drop shadow.\n   */\n  thumbColor?: ?ColorValue,\n\n  /**\n    Custom colors for the switch track.\n\n    _iOS_: When the switch value is false, the track shrinks into the border. If you want to change the\n    color of the background exposed by the shrunken track, use\n     [`ios_backgroundColor`](https://reactnative.dev/docs/switch#ios_backgroundColor).\n   */\n  trackColor?: ?$ReadOnly<{|\n    false?: ?ColorValue,\n    true?: ?ColorValue,\n  |}>,\n\n  /**\n    On iOS, custom color for the background. This background color can be\n    seen either when the switch value is false or when the switch is\n    disabled (and the switch is translucent).\n   */\n  ios_backgroundColor?: ?ColorValue,\n\n  /**\n    Invoked when the user tries to change the value of the switch. Receives\n    the change event as an argument. If you want to only receive the new\n    value, use `onValueChange` instead.\n   */\n  onChange?: ?(event: SwitchChangeEvent) => Promise<void> | void,\n\n  /**\n    Invoked when the user tries to change the value of the switch. Receives\n    the new value as an argument. If you want to instead receive an event,\n    use `onChange`.\n   */\n  onValueChange?: ?(value: boolean) => Promise<void> | void,\n|}>;\nconst returnsFalse = () => false;\nconst returnsTrue = () => true;\n\n/**\n  Renders a boolean input.\n\n  This is a controlled component that requires an `onValueChange`\n  callback that updates the `value` prop in order for the component to\n  reflect user actions. If the `value` prop is not updated, the\n  component will continue to render the supplied `value` prop instead of\n  the expected result of any user actions.\n\n  ```SnackPlayer name=Switch\n  import React, { useState } from \"react\";\n  import { View, Switch, StyleSheet } from \"react-native\";\n\n  const App = () => {\n    const [isEnabled, setIsEnabled] = useState(false);\n    const toggleSwitch = () => setIsEnabled(previousState => !previousState);\n\n    return (\n      <View style={styles.container}>\n        <Switch\n          trackColor={{ false: \"#767577\", true: \"#81b0ff\" }}\n          thumbColor={isEnabled ? \"#f5dd4b\" : \"#f4f3f4\"}\n          ios_backgroundColor=\"#3e3e3e\"\n          onValueChange={toggleSwitch}\n          value={isEnabled}\n        />\n      </View>\n    );\n  }\n\n  const styles = StyleSheet.create({\n    container: {\n      flex: 1,\n      alignItems: \"center\",\n      justifyContent: \"center\"\n    }\n  });\n\n  export default App;\n  ```\n */\n\nconst SwitchWithForwardedRef: React.AbstractComponent<\n  Props,\n  React.ElementRef<\n    typeof SwitchNativeComponent | typeof AndroidSwitchNativeComponent,\n  >,\n> = React.forwardRef(function Switch(props, forwardedRef): React.Node {\n  const {\n    disabled,\n    ios_backgroundColor,\n    onChange,\n    onValueChange,\n    style,\n    thumbColor,\n    trackColor,\n    value,\n    ...restProps\n  } = props;\n  const trackColorForFalse = trackColor?.false;\n  const trackColorForTrue = trackColor?.true;\n\n  const nativeSwitchRef = React.useRef<React.ElementRef<\n    typeof SwitchNativeComponent | typeof AndroidSwitchNativeComponent,\n  > | null>(null);\n\n  const ref = useMergeRefs(nativeSwitchRef, forwardedRef);\n\n  const [native, setNative] = React.useState({value: null});\n\n  const handleChange = (event: SwitchChangeEvent) => {\n    onChange?.(event);\n    onValueChange?.(event.nativeEvent.value);\n    setNative({value: event.nativeEvent.value});\n  };\n\n  React.useLayoutEffect(() => {\n    // This is necessary in case native updates the switch and JS decides\n    // that the update should be ignored and we should stick with the value\n    // that we have in JS.\n    const jsValue = value === true;\n    const shouldUpdateNativeSwitch =\n      native.value != null && native.value !== jsValue;\n    if (\n      shouldUpdateNativeSwitch &&\n      nativeSwitchRef.current?.setNativeProps != null\n    ) {\n      if (Platform.OS === 'android') {\n        AndroidSwitchCommands.setNativeValue(nativeSwitchRef.current, jsValue);\n      } else {\n        SwitchCommands.setValue(nativeSwitchRef.current, jsValue);\n      }\n    }\n  }, [value, native]);\n\n  if (Platform.OS === 'android') {\n    const {accessibilityState} = restProps;\n    const _disabled =\n      disabled != null ? disabled : accessibilityState?.disabled;\n\n    const _accessibilityState =\n      _disabled !== accessibilityState?.disabled\n        ? {...accessibilityState, disabled: _disabled}\n        : accessibilityState;\n\n    const platformProps = {\n      accessibilityState: _accessibilityState,\n      enabled: _disabled !== true,\n      on: value === true,\n      style,\n      thumbTintColor: thumbColor,\n      trackColorForFalse: trackColorForFalse,\n      trackColorForTrue: trackColorForTrue,\n      trackTintColor: value === true ? trackColorForTrue : trackColorForFalse,\n    };\n\n    return (\n      <AndroidSwitchNativeComponent\n        {...restProps}\n        {...platformProps}\n        accessibilityRole={props.accessibilityRole ?? 'switch'}\n        onChange={handleChange}\n        onResponderTerminationRequest={returnsFalse}\n        onStartShouldSetResponder={returnsTrue}\n        ref={ref}\n      />\n    );\n  } else {\n    const platformProps = {\n      disabled,\n      onTintColor: trackColorForTrue,\n      style: StyleSheet.compose(\n        {height: 31, width: 51},\n        StyleSheet.compose(\n          style,\n          ios_backgroundColor == null\n            ? null\n            : {\n                backgroundColor: ios_backgroundColor,\n                borderRadius: 16,\n              },\n        ),\n      ),\n      thumbTintColor: thumbColor,\n      tintColor: trackColorForFalse,\n      value: value === true,\n    };\n\n    return (\n      <SwitchNativeComponent\n        {...restProps}\n        {...platformProps}\n        accessibilityRole={props.accessibilityRole ?? 'switch'}\n        onChange={handleChange}\n        onResponderTerminationRequest={returnsFalse}\n        onStartShouldSetResponder={returnsTrue}\n        ref={ref}\n      />\n    );\n  }\n});\n\nexport default SwitchWithForwardedRef;\n","/**\n * Copyright (c) Meta Platforms, Inc. and affiliates.\n *\n * This source code is licensed under the MIT license found in the\n * LICENSE file in the root directory of this source tree.\n *\n * @flow strict-local\n * @format\n */\n\nimport type {HostComponent} from '../../Renderer/shims/ReactNativeTypes';\nimport type {ColorValue} from '../../StyleSheet/StyleSheet';\nimport type {\n  BubblingEventHandler,\n  Int32,\n  WithDefault,\n} from '../../Types/CodegenTypes';\nimport type {ViewProps} from '../View/ViewPropTypes';\n\nimport codegenNativeCommands from '../../Utilities/codegenNativeCommands';\nimport codegenNativeComponent from '../../Utilities/codegenNativeComponent';\nimport * as React from 'react';\n\ntype SwitchChangeEvent = $ReadOnly<{|\n  value: boolean,\n  target: Int32,\n|}>;\n\ntype NativeProps = $ReadOnly<{|\n  ...ViewProps,\n\n  // Props\n  disabled?: WithDefault<boolean, false>,\n  value?: WithDefault<boolean, false>,\n  tintColor?: ?ColorValue,\n  onTintColor?: ?ColorValue,\n  thumbTintColor?: ?ColorValue,\n\n  // Deprecated props\n  thumbColor?: ?ColorValue,\n  trackColorForFalse?: ?ColorValue,\n  trackColorForTrue?: ?ColorValue,\n\n  // Events\n  onChange?: ?BubblingEventHandler<SwitchChangeEvent>,\n|}>;\n\ntype ComponentType = HostComponent<NativeProps>;\n\ninterface NativeCommands {\n  +setValue: (viewRef: React.ElementRef<ComponentType>, value: boolean) => void;\n}\n\nexport const Commands: NativeCommands = codegenNativeCommands<NativeCommands>({\n  supportedCommands: ['setValue'],\n});\n\nexport default (codegenNativeComponent<NativeProps>('Switch', {\n  paperComponentName: 'RCTSwitch',\n  excludedPlatforms: ['android'],\n}): ComponentType);\n","/**\n * Copyright (c) Meta Platforms, Inc. and affiliates.\n *\n * This source code is licensed under the MIT license found in the\n * LICENSE file in the root directory of this source tree.\n *\n * @flow\n * @format\n */\n\nimport StyleSheet, {\n  type ColorValue,\n  type ViewStyleProp,\n} from '../../StyleSheet/StyleSheet';\nimport Platform from '../../Utilities/Platform';\nimport RCTInputAccessoryViewNativeComponent from './RCTInputAccessoryViewNativeComponent';\nimport * as React from 'react';\n\n/**\n * Note: iOS only\n *\n * A component which enables customization of the keyboard input accessory view.\n * The input accessory view is displayed above the keyboard whenever a TextInput\n * has focus. This component can be used to create custom toolbars.\n *\n * To use this component wrap your custom toolbar with the\n * InputAccessoryView component, and set a nativeID. Then, pass that nativeID\n * as the inputAccessoryViewID of whatever TextInput you desire. A simple\n * example:\n *\n * ```ReactNativeWebPlayer\n * import React, { Component } from 'react';\n * import { AppRegistry, TextInput, InputAccessoryView, Button } from 'react-native';\n *\n * export default class UselessTextInput extends Component {\n *   constructor(props) {\n *     super(props);\n *     this.state = {text: 'Placeholder Text'};\n *   }\n *\n *   render() {\n *     const inputAccessoryViewID = \"uniqueID\";\n *     return (\n *       <View>\n *         <ScrollView keyboardDismissMode=\"interactive\">\n *           <TextInput\n *             style={{\n *               padding: 10,\n *               paddingTop: 50,\n *             }}\n *             inputAccessoryViewID=inputAccessoryViewID\n *             onChangeText={text => this.setState({text})}\n *             value={this.state.text}\n *           />\n *         </ScrollView>\n *         <InputAccessoryView nativeID=inputAccessoryViewID>\n *           <Button\n *             onPress={() => this.setState({text: 'Placeholder Text'})}\n *             title=\"Reset Text\"\n *           />\n *         </InputAccessoryView>\n *       </View>\n *     );\n *   }\n * }\n *\n * // skip this line if using Create React Native App\n * AppRegistry.registerComponent('AwesomeProject', () => UselessTextInput);\n * ```\n *\n * This component can also be used to create sticky text inputs (text inputs\n * which are anchored to the top of the keyboard). To do this, wrap a\n * TextInput with the InputAccessoryView component, and don't set a nativeID.\n * For an example, look at InputAccessoryViewExample.js in RNTester.\n */\n\ntype Props = $ReadOnly<{|\n  +children: React.Node,\n  /**\n   * An ID which is used to associate this `InputAccessoryView` to\n   * specified TextInput(s).\n   */\n  nativeID?: ?string,\n  style?: ?ViewStyleProp,\n  backgroundColor?: ?ColorValue,\n|}>;\n\nclass InputAccessoryView extends React.Component<Props> {\n  render(): React.Node {\n    if (Platform.OS === 'ios') {\n      if (React.Children.count(this.props.children) === 0) {\n        return null;\n      }\n\n      return (\n        <RCTInputAccessoryViewNativeComponent\n          style={[this.props.style, styles.container]}\n          nativeID={this.props.nativeID}\n          backgroundColor={this.props.backgroundColor}>\n          {this.props.children}\n        </RCTInputAccessoryViewNativeComponent>\n      );\n    } else {\n      console.warn('<InputAccessoryView> is only supported on iOS.');\n      return null;\n    }\n  }\n}\n\nconst styles = StyleSheet.create({\n  container: {\n    position: 'absolute',\n  },\n});\n\nmodule.exports = InputAccessoryView;\n","/**\n * Copyright (c) Meta Platforms, Inc. and affiliates.\n *\n * This source code is licensed under the MIT license found in the\n * LICENSE file in the root directory of this source tree.\n *\n * @flow strict-local\n * @format\n */\n\nimport type {HostComponent} from '../../Renderer/shims/ReactNativeTypes';\nimport type {ColorValue} from '../../StyleSheet/StyleSheet';\nimport type {ViewProps} from '../View/ViewPropTypes';\n\nimport codegenNativeComponent from '../../Utilities/codegenNativeComponent';\n\ntype NativeProps = $ReadOnly<{|\n  ...ViewProps,\n  backgroundColor?: ?ColorValue,\n|}>;\n\nexport default (codegenNativeComponent<NativeProps>('InputAccessory', {\n  interfaceOnly: true,\n  paperComponentName: 'RCTInputAccessoryView',\n  excludedPlatforms: ['android'],\n}): HostComponent<NativeProps>);\n","/**\n * Copyright (c) Meta Platforms, Inc. and affiliates.\n *\n * This source code is licensed under the MIT license found in the\n * LICENSE file in the root directory of this source tree.\n *\n * @flow strict-local\n * @format\n */\n\nimport type {\n  HostComponent,\n  PartialViewConfig,\n} from '../../Renderer/shims/ReactNativeTypes';\nimport type {TextInputNativeCommands} from './TextInputNativeCommands';\n\nimport * as NativeComponentRegistry from '../../NativeComponent/NativeComponentRegistry';\nimport codegenNativeCommands from '../../Utilities/codegenNativeCommands';\nimport RCTTextInputViewConfig from './RCTTextInputViewConfig';\n\ntype NativeType = HostComponent<mixed>;\n\ntype NativeCommands = TextInputNativeCommands<NativeType>;\n\nexport const Commands: NativeCommands = codegenNativeCommands<NativeCommands>({\n  supportedCommands: ['focus', 'blur', 'setTextAndSelection'],\n});\n\nexport const __INTERNAL_VIEW_CONFIG: PartialViewConfig = {\n  uiViewClassName: 'RCTMultilineTextInputView',\n  ...RCTTextInputViewConfig,\n  validAttributes: {\n    ...RCTTextInputViewConfig.validAttributes,\n    dataDetectorTypes: true,\n  },\n};\n\nconst MultilineTextInputNativeComponent: HostComponent<mixed> =\n  NativeComponentRegistry.get<mixed>(\n    'RCTMultilineTextInputView',\n    () => __INTERNAL_VIEW_CONFIG,\n  );\n\n// flowlint-next-line unclear-type:off\nexport default ((MultilineTextInputNativeComponent: any): HostComponent<mixed>);\n","/**\n * Copyright (c) Meta Platforms, Inc. and affiliates.\n *\n * This source code is licensed under the MIT license found in the\n * LICENSE file in the root directory of this source tree.\n *\n * @flow strict-local\n * @format\n */\n\nimport type {HostComponent} from '../../Renderer/shims/ReactNativeTypes';\nimport type {\n  PressEvent,\n  ScrollEvent,\n  SyntheticEvent,\n} from '../../Types/CoreEventTypes';\nimport type {ViewProps} from '../View/ViewPropTypes';\nimport type {TextInputType} from './TextInput.flow';\n\nimport usePressability from '../../Pressability/usePressability';\nimport flattenStyle from '../../StyleSheet/flattenStyle';\nimport StyleSheet, {\n  type ColorValue,\n  type TextStyleProp,\n  type ViewStyleProp,\n} from '../../StyleSheet/StyleSheet';\nimport Text from '../../Text/Text';\nimport TextAncestor from '../../Text/TextAncestor';\nimport Platform from '../../Utilities/Platform';\nimport setAndForwardRef from '../../Utilities/setAndForwardRef';\nimport TextInputState from './TextInputState';\nimport invariant from 'invariant';\nimport nullthrows from 'nullthrows';\nimport * as React from 'react';\n\nconst {useLayoutEffect, useRef, useState} = React;\n\ntype ReactRefSetter<T> = {current: null | T, ...} | ((ref: null | T) => mixed);\n\nlet AndroidTextInput;\nlet AndroidTextInputCommands;\nlet RCTSinglelineTextInputView;\nlet RCTSinglelineTextInputNativeCommands;\nlet RCTMultilineTextInputView;\nlet RCTMultilineTextInputNativeCommands;\n\nif (Platform.OS === 'android') {\n  AndroidTextInput = require('./AndroidTextInputNativeComponent').default;\n  AndroidTextInputCommands =\n    require('./AndroidTextInputNativeComponent').Commands;\n} else if (Platform.OS === 'ios') {\n  RCTSinglelineTextInputView =\n    require('./RCTSingelineTextInputNativeComponent').default;\n  RCTSinglelineTextInputNativeCommands =\n    require('./RCTSingelineTextInputNativeComponent').Commands;\n  RCTMultilineTextInputView =\n    require('./RCTMultilineTextInputNativeComponent').default;\n  RCTMultilineTextInputNativeCommands =\n    require('./RCTMultilineTextInputNativeComponent').Commands;\n}\n\nexport type ChangeEvent = SyntheticEvent<\n  $ReadOnly<{|\n    eventCount: number,\n    target: number,\n    text: string,\n  |}>,\n>;\n\nexport type TextInputEvent = SyntheticEvent<\n  $ReadOnly<{|\n    eventCount: number,\n    previousText: string,\n    range: $ReadOnly<{|\n      start: number,\n      end: number,\n    |}>,\n    target: number,\n    text: string,\n  |}>,\n>;\n\nexport type ContentSizeChangeEvent = SyntheticEvent<\n  $ReadOnly<{|\n    target: number,\n    contentSize: $ReadOnly<{|\n      width: number,\n      height: number,\n    |}>,\n  |}>,\n>;\n\ntype TargetEvent = SyntheticEvent<\n  $ReadOnly<{|\n    target: number,\n  |}>,\n>;\n\nexport type BlurEvent = TargetEvent;\nexport type FocusEvent = TargetEvent;\n\ntype Selection = $ReadOnly<{|\n  start: number,\n  end: number,\n|}>;\n\nexport type SelectionChangeEvent = SyntheticEvent<\n  $ReadOnly<{|\n    selection: Selection,\n    target: number,\n  |}>,\n>;\n\nexport type KeyPressEvent = SyntheticEvent<\n  $ReadOnly<{|\n    key: string,\n    target?: ?number,\n    eventCount?: ?number,\n  |}>,\n>;\n\nexport type EditingEvent = SyntheticEvent<\n  $ReadOnly<{|\n    eventCount: number,\n    text: string,\n    target: number,\n  |}>,\n>;\n\ntype DataDetectorTypesType =\n  | 'phoneNumber'\n  | 'link'\n  | 'address'\n  | 'calendarEvent'\n  | 'none'\n  | 'all';\n\nexport type KeyboardType =\n  // Cross Platform\n  | 'default'\n  | 'email-address'\n  | 'numeric'\n  | 'phone-pad'\n  | 'number-pad'\n  | 'decimal-pad'\n  | 'url'\n  // iOS-only\n  | 'ascii-capable'\n  | 'numbers-and-punctuation'\n  | 'name-phone-pad'\n  | 'twitter'\n  | 'web-search'\n  // iOS 10+ only\n  | 'ascii-capable-number-pad'\n  // Android-only\n  | 'visible-password';\n\nexport type InputMode =\n  | 'none'\n  | 'text'\n  | 'decimal'\n  | 'numeric'\n  | 'tel'\n  | 'search'\n  | 'email'\n  | 'url';\n\nexport type ReturnKeyType =\n  // Cross Platform\n  | 'done'\n  | 'go'\n  | 'next'\n  | 'search'\n  | 'send'\n  // Android-only\n  | 'none'\n  | 'previous'\n  // iOS-only\n  | 'default'\n  | 'emergency-call'\n  | 'google'\n  | 'join'\n  | 'route'\n  | 'yahoo';\n\nexport type SubmitBehavior = 'submit' | 'blurAndSubmit' | 'newline';\n\nexport type AutoCapitalize = 'none' | 'sentences' | 'words' | 'characters';\n\nexport type TextContentType =\n  | 'none'\n  | 'URL'\n  | 'addressCity'\n  | 'addressCityAndState'\n  | 'addressState'\n  | 'countryName'\n  | 'creditCardNumber'\n  | 'emailAddress'\n  | 'familyName'\n  | 'fullStreetAddress'\n  | 'givenName'\n  | 'jobTitle'\n  | 'location'\n  | 'middleName'\n  | 'name'\n  | 'namePrefix'\n  | 'nameSuffix'\n  | 'nickname'\n  | 'organizationName'\n  | 'postalCode'\n  | 'streetAddressLine1'\n  | 'streetAddressLine2'\n  | 'sublocality'\n  | 'telephoneNumber'\n  | 'username'\n  | 'password'\n  | 'newPassword'\n  | 'oneTimeCode';\n\nexport type enterKeyHintType =\n  | 'enter'\n  | 'done'\n  | 'go'\n  | 'next'\n  | 'previous'\n  | 'search'\n  | 'send';\n\ntype PasswordRules = string;\n\ntype IOSProps = $ReadOnly<{|\n  /**\n   * Give the keyboard and the system information about the\n   * expected semantic meaning for the content that users enter.\n   * @platform ios\n   */\n  autoComplete?: ?(\n    | 'address-line1'\n    | 'address-line2'\n    | 'cc-number'\n    | 'current-password'\n    | 'country'\n    | 'email'\n    | 'name'\n    | 'additional-name'\n    | 'family-name'\n    | 'given-name'\n    | 'nickname'\n    | 'honorific-prefix'\n    | 'honorific-suffix'\n    | 'new-password'\n    | 'off'\n    | 'one-time-code'\n    | 'organization'\n    | 'organization-title'\n    | 'postal-code'\n    | 'street-address'\n    | 'tel'\n    | 'url'\n    | 'username'\n  ),\n  /**\n   * When the clear button should appear on the right side of the text view.\n   * This property is supported only for single-line TextInput component.\n   * @platform ios\n   */\n  clearButtonMode?: ?('never' | 'while-editing' | 'unless-editing' | 'always'),\n\n  /**\n   * If `true`, clears the text field automatically when editing begins.\n   * @platform ios\n   */\n  clearTextOnFocus?: ?boolean,\n\n  /**\n   * Determines the types of data converted to clickable URLs in the text input.\n   * Only valid if `multiline={true}` and `editable={false}`.\n   * By default no data types are detected.\n   *\n   * You can provide one type or an array of many types.\n   *\n   * Possible values for `dataDetectorTypes` are:\n   *\n   * - `'phoneNumber'`\n   * - `'link'`\n   * - `'address'`\n   * - `'calendarEvent'`\n   * - `'none'`\n   * - `'all'`\n   *\n   * @platform ios\n   */\n  dataDetectorTypes?:\n    | ?DataDetectorTypesType\n    | $ReadOnlyArray<DataDetectorTypesType>,\n\n  /**\n   * If `true`, the keyboard disables the return key when there is no text and\n   * automatically enables it when there is text. The default value is `false`.\n   * @platform ios\n   */\n  enablesReturnKeyAutomatically?: ?boolean,\n\n  /**\n   * An optional identifier which links a custom InputAccessoryView to\n   * this text input. The InputAccessoryView is rendered above the\n   * keyboard when this text input is focused.\n   * @platform ios\n   */\n  inputAccessoryViewID?: ?string,\n\n  /**\n   * Determines the color of the keyboard.\n   * @platform ios\n   */\n  keyboardAppearance?: ?('default' | 'light' | 'dark'),\n\n  /**\n   * Provide rules for your password.\n   * For example, say you want to require a password with at least eight characters consisting of a mix of uppercase and lowercase letters, at least one number, and at most two consecutive characters.\n   * \"required: upper; required: lower; required: digit; max-consecutive: 2; minlength: 8;\"\n   * @platform ios\n   */\n  passwordRules?: ?PasswordRules,\n\n  /*\n   * If `true`, allows TextInput to pass touch events to the parent component.\n   * This allows components to be swipeable from the TextInput on iOS,\n   * as is the case on Android by default.\n   * If `false`, TextInput always asks to handle the input (except when disabled).\n   * @platform ios\n   */\n  rejectResponderTermination?: ?boolean,\n\n  /**\n   * If `false`, scrolling of the text view will be disabled.\n   * The default value is `true`. Does only work with 'multiline={true}'.\n   * @platform ios\n   */\n  scrollEnabled?: ?boolean,\n\n  /**\n   * If `false`, disables spell-check style (i.e. red underlines).\n   * The default value is inherited from `autoCorrect`.\n   * @platform ios\n   */\n  spellCheck?: ?boolean,\n\n  /**\n   * Give the keyboard and the system information about the\n   * expected semantic meaning for the content that users enter.\n   * `autoComplete` property accomplishes same behavior and is recommended as its supported by both platforms.\n   * Avoid using both `autoComplete` and `textContentType`, you can use `Platform.select` for differing platform behaviors.\n   * For backwards compatibility, when both set, `textContentType` takes precedence on iOS.\n   * @platform ios\n   */\n  textContentType?: ?TextContentType,\n\n  /**\n   * Set line break strategy on iOS.\n   * @platform ios\n   */\n  lineBreakStrategyIOS?: ?('none' | 'standard' | 'hangul-word' | 'push-out'),\n|}>;\n\ntype AndroidProps = $ReadOnly<{|\n  /**\n   * Specifies autocomplete hints for the system, so it can provide autofill. On Android, the system will always attempt to offer autofill by using heuristics to identify the type of content.\n   * To disable autocomplete, set `autoComplete` to `off`.\n   *\n   * *Android Only*\n   *\n   * Possible values for `autoComplete` are:\n   *\n   * - `birthdate-day`\n   * - `birthdate-full`\n   * - `birthdate-month`\n   * - `birthdate-year`\n   * - `cc-csc`\n   * - `cc-exp`\n   * - `cc-exp-day`\n   * - `cc-exp-month`\n   * - `cc-exp-year`\n   * - `cc-number`\n   * - `email`\n   * - `gender`\n   * - `name`\n   * - `name-family`\n   * - `name-given`\n   * - `name-middle`\n   * - `name-middle-initial`\n   * - `name-prefix`\n   * - `name-suffix`\n   * - `password`\n   * - `password-new`\n   * - `postal-address`\n   * - `postal-address-country`\n   * - `postal-address-extended`\n   * - `postal-address-extended-postal-code`\n   * - `postal-address-locality`\n   * - `postal-address-region`\n   * - `postal-code`\n   * - `street-address`\n   * - `sms-otp`\n   * - `tel`\n   * - `tel-country-code`\n   * - `tel-national`\n   * - `tel-device`\n   * - `username`\n   * - `username-new`\n   * - `off`\n   *\n   * @platform android\n   */\n  autoComplete?: ?(\n    | 'birthdate-day'\n    | 'birthdate-full'\n    | 'birthdate-month'\n    | 'birthdate-year'\n    | 'cc-csc'\n    | 'cc-exp'\n    | 'cc-exp-day'\n    | 'cc-exp-month'\n    | 'cc-exp-year'\n    | 'cc-number'\n    | 'email'\n    | 'gender'\n    | 'name'\n    | 'name-family'\n    | 'name-given'\n    | 'name-middle'\n    | 'name-middle-initial'\n    | 'name-prefix'\n    | 'name-suffix'\n    | 'password'\n    | 'password-new'\n    | 'postal-address'\n    | 'postal-address-country'\n    | 'postal-address-extended'\n    | 'postal-address-extended-postal-code'\n    | 'postal-address-locality'\n    | 'postal-address-region'\n    | 'postal-code'\n    | 'street-address'\n    | 'sms-otp'\n    | 'tel'\n    | 'tel-country-code'\n    | 'tel-national'\n    | 'tel-device'\n    | 'username'\n    | 'username-new'\n    | 'off'\n    // additional HTML autocomplete values\n    | 'address-line1'\n    | 'address-line2'\n    | 'bday'\n    | 'bday-day'\n    | 'bday-month'\n    | 'bday-year'\n    | 'country'\n    | 'current-password'\n    | 'honorific-prefix'\n    | 'honorific-suffix'\n    | 'additional-name'\n    | 'family-name'\n    | 'given-name'\n    | 'new-password'\n    | 'one-time-code'\n    | 'sex'\n  ),\n\n  /**\n   * When provided it will set the color of the cursor (or \"caret\") in the component.\n   * Unlike the behavior of `selectionColor` the cursor color will be set independently\n   * from the color of the text selection box.\n   * @platform android\n   */\n  cursorColor?: ?ColorValue,\n\n  /**\n   * When `false`, if there is a small amount of space available around a text input\n   * (e.g. landscape orientation on a phone), the OS may choose to have the user edit\n   * the text inside of a full screen text input mode. When `true`, this feature is\n   * disabled and users will always edit the text directly inside of the text input.\n   * Defaults to `false`.\n   * @platform android\n   */\n  disableFullscreenUI?: ?boolean,\n\n  importantForAutofill?: ?(\n    | 'auto'\n    | 'no'\n    | 'noExcludeDescendants'\n    | 'yes'\n    | 'yesExcludeDescendants'\n  ),\n\n  /**\n   * If defined, the provided image resource will be rendered on the left.\n   * The image resource must be inside `/android/app/src/main/res/drawable` and referenced\n   * like\n   * ```\n   * <TextInput\n   *  inlineImageLeft='search_icon'\n   * />\n   * ```\n   * @platform android\n   */\n  inlineImageLeft?: ?string,\n\n  /**\n   * Padding between the inline image, if any, and the text input itself.\n   * @platform android\n   */\n  inlineImagePadding?: ?number,\n\n  /**\n   * Sets the number of lines for a `TextInput`. Use it with multiline set to\n   * `true` to be able to fill the lines.\n   * @platform android\n   */\n  numberOfLines?: ?number,\n\n  /**\n   * Sets the return key to the label. Use it instead of `returnKeyType`.\n   * @platform android\n   */\n  returnKeyLabel?: ?string,\n\n  /**\n   * Sets the number of rows for a `TextInput`. Use it with multiline set to\n   * `true` to be able to fill the lines.\n   * @platform android\n   */\n  rows?: ?number,\n\n  /**\n   * When `false`, it will prevent the soft keyboard from showing when the field is focused.\n   * Defaults to `true`.\n   */\n  showSoftInputOnFocus?: ?boolean,\n\n  /**\n   * Set text break strategy on Android API Level 23+, possible values are `simple`, `highQuality`, `balanced`\n   * The default value is `simple`.\n   * @platform android\n   */\n  textBreakStrategy?: ?('simple' | 'highQuality' | 'balanced'),\n\n  /**\n   * The color of the `TextInput` underline.\n   * @platform android\n   */\n  underlineColorAndroid?: ?ColorValue,\n|}>;\n\nexport type Props = $ReadOnly<{|\n  ...$Diff<ViewProps, $ReadOnly<{|style: ?ViewStyleProp|}>>,\n  ...IOSProps,\n  ...AndroidProps,\n\n  /**\n   * Can tell `TextInput` to automatically capitalize certain characters.\n   *\n   * - `characters`: all characters.\n   * - `words`: first letter of each word.\n   * - `sentences`: first letter of each sentence (*default*).\n   * - `none`: don't auto capitalize anything.\n   */\n  autoCapitalize?: ?AutoCapitalize,\n\n  /**\n   * If `false`, disables auto-correct. The default value is `true`.\n   */\n  autoCorrect?: ?boolean,\n\n  /**\n   * If `true`, focuses the input on `componentDidMount`.\n   * The default value is `false`.\n   */\n  autoFocus?: ?boolean,\n\n  /**\n   * Specifies whether fonts should scale to respect Text Size accessibility settings. The\n   * default is `true`.\n   */\n  allowFontScaling?: ?boolean,\n\n  /**\n   * If `true`, caret is hidden. The default value is `false`.\n   *\n   * On Android devices manufactured by Xiaomi with Android Q,\n   * when keyboardType equals 'email-address'this will be set\n   * in native to 'true' to prevent a system related crash. This\n   * will cause cursor to be diabled as a side-effect.\n   *\n   */\n  caretHidden?: ?boolean,\n\n  /*\n   * If `true`, contextMenuHidden is hidden. The default value is `false`.\n   */\n  contextMenuHidden?: ?boolean,\n\n  /**\n   * Provides an initial value that will change when the user starts typing.\n   * Useful for simple use-cases where you do not want to deal with listening\n   * to events and updating the value prop to keep the controlled state in sync.\n   */\n  defaultValue?: ?Stringish,\n\n  /**\n   * If `false`, text is not editable. The default value is `true`.\n   */\n  editable?: ?boolean,\n\n  forwardedRef?: ?ReactRefSetter<\n    React.ElementRef<HostComponent<mixed>> & ImperativeMethods,\n  >,\n\n  /**\n   * `enterKeyHint` defines what action label (or icon) to present for the enter key on virtual keyboards.\n   *\n   * The following values is supported:\n   *\n   * - `enter`\n   * - `done`\n   * - `go`\n   * - `next`\n   * - `previous`\n   * - `search`\n   * - `send`\n   */\n  enterKeyHint?: ?enterKeyHintType,\n\n  /**\n   * `inputMode` works like the `inputmode` attribute in HTML, it determines which\n   * keyboard to open, e.g.`numeric` and has precedence over keyboardType\n   *\n   * Support the following values:\n   *\n   * - `none`\n   * - `text`\n   * - `decimal`\n   * - `numeric`\n   * - `tel`\n   * - `search`\n   * - `email`\n   * - `url`\n   */\n  inputMode?: ?InputMode,\n\n  /**\n   * Determines which keyboard to open, e.g.`numeric`.\n   *\n   * The following values work across platforms:\n   *\n   * - `default`\n   * - `numeric`\n   * - `number-pad`\n   * - `decimal-pad`\n   * - `email-address`\n   * - `phone-pad`\n   * - `url`\n   *\n   * *iOS Only*\n   *\n   * The following values work on iOS only:\n   *\n   * - `ascii-capable`\n   * - `numbers-and-punctuation`\n   * - `name-phone-pad`\n   * - `twitter`\n   * - `web-search`\n   *\n   * *Android Only*\n   *\n   * The following values work on Android only:\n   *\n   * - `visible-password`\n   *\n   */\n  keyboardType?: ?KeyboardType,\n\n  /**\n   * Specifies largest possible scale a font can reach when `allowFontScaling` is enabled.\n   * Possible values:\n   * `null/undefined` (default): inherit from the parent node or the global default (0)\n   * `0`: no max, ignore parent/global default\n   * `>= 1`: sets the maxFontSizeMultiplier of this node to this value\n   */\n  maxFontSizeMultiplier?: ?number,\n\n  /**\n   * Limits the maximum number of characters that can be entered. Use this\n   * instead of implementing the logic in JS to avoid flicker.\n   */\n  maxLength?: ?number,\n\n  /**\n   * If `true`, the text input can be multiple lines.\n   * The default value is `false`.\n   */\n  multiline?: ?boolean,\n\n  /**\n   * Callback that is called when the text input is blurred.\n   */\n  onBlur?: ?(e: BlurEvent) => mixed,\n\n  /**\n   * Callback that is called when the text input's text changes.\n   */\n  onChange?: ?(e: ChangeEvent) => mixed,\n\n  /**\n   * DANGER: this API is not stable and will change in the future.\n   *\n   * Callback will be called on the main thread and may result in dropped frames.\n   * Callback that is called when the text input's text changes.\n   *\n   * @platform ios\n   */\n  unstable_onChangeSync?: ?(e: ChangeEvent) => mixed,\n\n  /**\n   * Callback that is called when the text input's text changes.\n   * Changed text is passed as an argument to the callback handler.\n   */\n  onChangeText?: ?(text: string) => mixed,\n\n  /**\n   * DANGER: this API is not stable and will change in the future.\n   *\n   * Callback will be called on the main thread and may result in dropped frames.\n   * Callback that is called when the text input's text changes.\n   * Changed text is passed as an argument to the callback handler.\n   *\n   * @platform ios\n   */\n  unstable_onChangeTextSync?: ?(text: string) => mixed,\n\n  /**\n   * Callback that is called when the text input's content size changes.\n   * This will be called with\n   * `{ nativeEvent: { contentSize: { width, height } } }`.\n   *\n   * Only called for multiline text inputs.\n   */\n  onContentSizeChange?: ?(e: ContentSizeChangeEvent) => mixed,\n\n  /**\n   * Callback that is called when text input ends.\n   */\n  onEndEditing?: ?(e: EditingEvent) => mixed,\n\n  /**\n   * Callback that is called when the text input is focused.\n   */\n  onFocus?: ?(e: FocusEvent) => mixed,\n\n  /**\n   * Callback that is called when a key is pressed.\n   * This will be called with `{ nativeEvent: { key: keyValue } }`\n   * where `keyValue` is `'Enter'` or `'Backspace'` for respective keys and\n   * the typed-in character otherwise including `' '` for space.\n   * Fires before `onChange` callbacks.\n   */\n  onKeyPress?: ?(e: KeyPressEvent) => mixed,\n\n  /**\n   * DANGER: this API is not stable and will change in the future.\n   *\n   * Callback will be called on the main thread and may result in dropped frames.\n   *\n   * Callback that is called when a key is pressed.\n   * This will be called with `{ nativeEvent: { key: keyValue } }`\n   * where `keyValue` is `'Enter'` or `'Backspace'` for respective keys and\n   * the typed-in character otherwise including `' '` for space.\n   * Fires before `onChange` callbacks.\n   *\n   * @platform ios\n   */\n  unstable_onKeyPressSync?: ?(e: KeyPressEvent) => mixed,\n\n  /**\n   * Called when a touch is engaged.\n   */\n  onPressIn?: ?(event: PressEvent) => mixed,\n\n  /**\n   * Called when a touch is released.\n   */\n  onPressOut?: ?(event: PressEvent) => mixed,\n\n  /**\n   * Callback that is called when the text input selection is changed.\n   * This will be called with\n   * `{ nativeEvent: { selection: { start, end } } }`.\n   */\n  onSelectionChange?: ?(e: SelectionChangeEvent) => mixed,\n\n  /**\n   * Callback that is called when the text input's submit button is pressed.\n   * Invalid if `multiline={true}` is specified.\n   */\n  onSubmitEditing?: ?(e: EditingEvent) => mixed,\n\n  /**\n   * Invoked on content scroll with `{ nativeEvent: { contentOffset: { x, y } } }`.\n   * May also contain other properties from ScrollEvent but on Android contentSize\n   * is not provided for performance reasons.\n   */\n  onScroll?: ?(e: ScrollEvent) => mixed,\n\n  /**\n   * The string that will be rendered before text input has been entered.\n   */\n  placeholder?: ?Stringish,\n\n  /**\n   * The text color of the placeholder string.\n   */\n  placeholderTextColor?: ?ColorValue,\n\n  /** `readOnly` works like the `readonly` attribute in HTML.\n   *  If `true`, text is not editable. The default value is `false`.\n   *  See https://developer.mozilla.org/en-US/docs/Web/HTML/Attributes/readonly\n   *  for more details.\n   */\n  readOnly?: ?boolean,\n\n  /**\n   * Determines how the return key should look. On Android you can also use\n   * `returnKeyLabel`.\n   *\n   * *Cross platform*\n   *\n   * The following values work across platforms:\n   *\n   * - `done`\n   * - `go`\n   * - `next`\n   * - `search`\n   * - `send`\n   *\n   * *Android Only*\n   *\n   * The following values work on Android only:\n   *\n   * - `none`\n   * - `previous`\n   *\n   * *iOS Only*\n   *\n   * The following values work on iOS only:\n   *\n   * - `default`\n   * - `emergency-call`\n   * - `google`\n   * - `join`\n   * - `route`\n   * - `yahoo`\n   */\n  returnKeyType?: ?ReturnKeyType,\n\n  /**\n   * If `true`, the text input obscures the text entered so that sensitive text\n   * like passwords stay secure. The default value is `false`. Does not work with 'multiline={true}'.\n   */\n  secureTextEntry?: ?boolean,\n\n  /**\n   * The start and end of the text input's selection. Set start and end to\n   * the same value to position the cursor.\n   */\n  selection?: ?$ReadOnly<{|\n    start: number,\n    end?: ?number,\n  |}>,\n\n  /**\n   * The highlight and cursor color of the text input.\n   */\n  selectionColor?: ?ColorValue,\n\n  /**\n   * If `true`, all text will automatically be selected on focus.\n   */\n  selectTextOnFocus?: ?boolean,\n\n  /**\n   * If `true`, the text field will blur when submitted.\n   * The default value is true for single-line fields and false for\n   * multiline fields. Note that for multiline fields, setting `blurOnSubmit`\n   * to `true` means that pressing return will blur the field and trigger the\n   * `onSubmitEditing` event instead of inserting a newline into the field.\n   *\n   * @deprecated\n   * Note that `submitBehavior` now takes the place of `blurOnSubmit` and will\n   * override any behavior defined by `blurOnSubmit`.\n   * @see submitBehavior\n   */\n  blurOnSubmit?: ?boolean,\n\n  /**\n   * When the return key is pressed,\n   *\n   * For single line inputs:\n   *\n   * - `'newline`' defaults to `'blurAndSubmit'`\n   * - `undefined` defaults to `'blurAndSubmit'`\n   *\n   * For multiline inputs:\n   *\n   * - `'newline'` adds a newline\n   * - `undefined` defaults to `'newline'`\n   *\n   * For both single line and multiline inputs:\n   *\n   * - `'submit'` will only send a submit event and not blur the input\n   * - `'blurAndSubmit`' will both blur the input and send a submit event\n   */\n  submitBehavior?: ?SubmitBehavior,\n\n  /**\n   * Note that not all Text styles are supported, an incomplete list of what is not supported includes:\n   *\n   * - `borderLeftWidth`\n   * - `borderTopWidth`\n   * - `borderRightWidth`\n   * - `borderBottomWidth`\n   * - `borderTopLeftRadius`\n   * - `borderTopRightRadius`\n   * - `borderBottomRightRadius`\n   * - `borderBottomLeftRadius`\n   *\n   * see [Issue#7070](https://github.com/facebook/react-native/issues/7070)\n   * for more detail.\n   *\n   * [Styles](docs/style.html)\n   */\n  style?: ?TextStyleProp,\n\n  /**\n   * The value to show for the text input. `TextInput` is a controlled\n   * component, which means the native value will be forced to match this\n   * value prop if provided. For most uses, this works great, but in some\n   * cases this may cause flickering - one common cause is preventing edits\n   * by keeping value the same. In addition to simply setting the same value,\n   * either set `editable={false}`, or set/update `maxLength` to prevent\n   * unwanted edits without flicker.\n   */\n  value?: ?Stringish,\n|}>;\n\ntype ImperativeMethods = $ReadOnly<{|\n  clear: () => void,\n  isFocused: () => boolean,\n  getNativeRef: () => ?React.ElementRef<HostComponent<mixed>>,\n  setSelection: (start: number, end: number) => void,\n|}>;\n\nconst emptyFunctionThatReturnsTrue = () => true;\n\n/**\n * A foundational component for inputting text into the app via a\n * keyboard. Props provide configurability for several features, such as\n * auto-correction, auto-capitalization, placeholder text, and different keyboard\n * types, such as a numeric keypad.\n *\n * The simplest use case is to plop down a `TextInput` and subscribe to the\n * `onChangeText` events to read the user input. There are also other events,\n * such as `onSubmitEditing` and `onFocus` that can be subscribed to. A simple\n * example:\n *\n * ```ReactNativeWebPlayer\n * import React, { Component } from 'react';\n * import { AppRegistry, TextInput } from 'react-native';\n *\n * export default class UselessTextInput extends Component {\n *   constructor(props) {\n *     super(props);\n *     this.state = { text: 'Useless Placeholder' };\n *   }\n *\n *   render() {\n *     return (\n *       <TextInput\n *         style={{height: 40, borderColor: 'gray', borderWidth: 1}}\n *         onChangeText={(text) => this.setState({text})}\n *         value={this.state.text}\n *       />\n *     );\n *   }\n * }\n *\n * // skip this line if using Create React Native App\n * AppRegistry.registerComponent('AwesomeProject', () => UselessTextInput);\n * ```\n *\n * Two methods exposed via the native element are .focus() and .blur() that\n * will focus or blur the TextInput programmatically.\n *\n * Note that some props are only available with `multiline={true/false}`.\n * Additionally, border styles that apply to only one side of the element\n * (e.g., `borderBottomColor`, `borderLeftWidth`, etc.) will not be applied if\n * `multiline=false`. To achieve the same effect, you can wrap your `TextInput`\n * in a `View`:\n *\n * ```ReactNativeWebPlayer\n * import React, { Component } from 'react';\n * import { AppRegistry, View, TextInput } from 'react-native';\n *\n * class UselessTextInput extends Component {\n *   render() {\n *     return (\n *       <TextInput\n *         {...this.props} // Inherit any props passed to it; e.g., multiline, numberOfLines below\n *         editable = {true}\n *         maxLength = {40}\n *       />\n *     );\n *   }\n * }\n *\n * export default class UselessTextInputMultiline extends Component {\n *   constructor(props) {\n *     super(props);\n *     this.state = {\n *       text: 'Useless Multiline Placeholder',\n *     };\n *   }\n *\n *   // If you type something in the text box that is a color, the background will change to that\n *   // color.\n *   render() {\n *     return (\n *      <View style={{\n *        backgroundColor: this.state.text,\n *        borderBottomColor: '#000000',\n *        borderBottomWidth: 1 }}\n *      >\n *        <UselessTextInput\n *          multiline = {true}\n *          numberOfLines = {4}\n *          onChangeText={(text) => this.setState({text})}\n *          value={this.state.text}\n *        />\n *      </View>\n *     );\n *   }\n * }\n *\n * // skip these lines if using Create React Native App\n * AppRegistry.registerComponent(\n *  'AwesomeProject',\n *  () => UselessTextInputMultiline\n * );\n * ```\n *\n * `TextInput` has by default a border at the bottom of its view. This border\n * has its padding set by the background image provided by the system, and it\n * cannot be changed. Solutions to avoid this is to either not set height\n * explicitly, case in which the system will take care of displaying the border\n * in the correct position, or to not display the border by setting\n * `underlineColorAndroid` to transparent.\n *\n * Note that on Android performing text selection in input can change\n * app's activity `windowSoftInputMode` param to `adjustResize`.\n * This may cause issues with components that have position: 'absolute'\n * while keyboard is active. To avoid this behavior either specify `windowSoftInputMode`\n * in AndroidManifest.xml ( https://developer.android.com/guide/topics/manifest/activity-element.html )\n * or control this param programmatically with native code.\n *\n */\nfunction InternalTextInput(props: Props): React.Node {\n  const inputRef = useRef<null | React.ElementRef<HostComponent<mixed>>>(null);\n\n  // Android sends a \"onTextChanged\" event followed by a \"onSelectionChanged\" event, for\n  // the same \"most recent event count\".\n  // For controlled selection, that means that immediately after text is updated,\n  // a controlled component will pass in the *previous* selection, even if the controlled\n  // component didn't mean to modify the selection at all.\n  // Therefore, we ignore selections and pass them through until the selection event has\n  // been sent.\n  // Note that this mitigation is NOT needed for Fabric.\n  // discovered when upgrading react-hooks\n  // eslint-disable-next-line react-hooks/exhaustive-deps\n  let selection: ?Selection =\n    props.selection == null\n      ? null\n      : {\n          start: props.selection.start,\n          end: props.selection.end ?? props.selection.start,\n        };\n\n  const [mostRecentEventCount, setMostRecentEventCount] = useState<number>(0);\n\n  const [lastNativeText, setLastNativeText] = useState<?Stringish>(props.value);\n  const [lastNativeSelectionState, setLastNativeSelection] = useState<{|\n    selection: ?Selection,\n    mostRecentEventCount: number,\n  |}>({selection, mostRecentEventCount});\n\n  const lastNativeSelection = lastNativeSelectionState.selection;\n  const lastNativeSelectionEventCount =\n    lastNativeSelectionState.mostRecentEventCount;\n\n  if (lastNativeSelectionEventCount < mostRecentEventCount) {\n    selection = null;\n  }\n\n  let viewCommands;\n  if (AndroidTextInputCommands) {\n    viewCommands = AndroidTextInputCommands;\n  } else {\n    viewCommands =\n      props.multiline === true\n        ? RCTMultilineTextInputNativeCommands\n        : RCTSinglelineTextInputNativeCommands;\n  }\n\n  const text =\n    typeof props.value === 'string'\n      ? props.value\n      : typeof props.defaultValue === 'string'\n      ? props.defaultValue\n      : '';\n\n  // This is necessary in case native updates the text and JS decides\n  // that the update should be ignored and we should stick with the value\n  // that we have in JS.\n  useLayoutEffect(() => {\n    const nativeUpdate: {text?: string, selection?: Selection} = {};\n\n    if (lastNativeText !== props.value && typeof props.value === 'string') {\n      nativeUpdate.text = props.value;\n      setLastNativeText(props.value);\n    }\n\n    if (\n      selection &&\n      lastNativeSelection &&\n      (lastNativeSelection.start !== selection.start ||\n        lastNativeSelection.end !== selection.end)\n    ) {\n      nativeUpdate.selection = selection;\n      setLastNativeSelection({selection, mostRecentEventCount});\n    }\n\n    if (Object.keys(nativeUpdate).length === 0) {\n      return;\n    }\n\n    if (inputRef.current != null) {\n      viewCommands.setTextAndSelection(\n        inputRef.current,\n        mostRecentEventCount,\n        text,\n        selection?.start ?? -1,\n        selection?.end ?? -1,\n      );\n    }\n  }, [\n    mostRecentEventCount,\n    inputRef,\n    props.value,\n    props.defaultValue,\n    lastNativeText,\n    selection,\n    lastNativeSelection,\n    text,\n    viewCommands,\n  ]);\n\n  useLayoutEffect(() => {\n    const inputRefValue = inputRef.current;\n\n    if (inputRefValue != null) {\n      TextInputState.registerInput(inputRefValue);\n\n      return () => {\n        TextInputState.unregisterInput(inputRefValue);\n\n        if (TextInputState.currentlyFocusedInput() === inputRefValue) {\n          nullthrows(inputRefValue).blur();\n        }\n      };\n    }\n  }, [inputRef]);\n\n  function clear(): void {\n    if (inputRef.current != null) {\n      viewCommands.setTextAndSelection(\n        inputRef.current,\n        mostRecentEventCount,\n        '',\n        0,\n        0,\n      );\n    }\n  }\n\n  function setSelection(start: number, end: number): void {\n    if (inputRef.current != null) {\n      viewCommands.setTextAndSelection(\n        inputRef.current,\n        mostRecentEventCount,\n        null,\n        start,\n        end,\n      );\n    }\n  }\n\n  // TODO: Fix this returning true on null === null, when no input is focused\n  function isFocused(): boolean {\n    return TextInputState.currentlyFocusedInput() === inputRef.current;\n  }\n\n  function getNativeRef(): ?React.ElementRef<HostComponent<mixed>> {\n    return inputRef.current;\n  }\n\n  const _setNativeRef = setAndForwardRef({\n    getForwardedRef: () => props.forwardedRef,\n    setLocalRef: ref => {\n      inputRef.current = ref;\n\n      /*\n        Hi reader from the future. I'm sorry for this.\n\n        This is a hack. Ideally we would forwardRef to the underlying\n        host component. However, since TextInput has it's own methods that can be\n        called as well, if we used the standard forwardRef then these\n        methods wouldn't be accessible and thus be a breaking change.\n\n        We have a couple of options of how to handle this:\n        - Return a new ref with everything we methods from both. This is problematic\n          because we need React to also know it is a host component which requires\n          internals of the class implementation of the ref.\n        - Break the API and have some other way to call one set of the methods or\n          the other. This is our long term approach as we want to eventually\n          get the methods on host components off the ref. So instead of calling\n          ref.measure() you might call ReactNative.measure(ref). This would hopefully\n          let the ref for TextInput then have the methods like `.clear`. Or we do it\n          the other way and make it TextInput.clear(textInputRef) which would be fine\n          too. Either way though is a breaking change that is longer term.\n        - Mutate this ref. :( Gross, but accomplishes what we need in the meantime\n          before we can get to the long term breaking change.\n        */\n      if (ref) {\n        ref.clear = clear;\n        ref.isFocused = isFocused;\n        ref.getNativeRef = getNativeRef;\n        ref.setSelection = setSelection;\n      }\n    },\n  });\n\n  const _onChange = (event: ChangeEvent) => {\n    const currentText = event.nativeEvent.text;\n    props.onChange && props.onChange(event);\n    props.onChangeText && props.onChangeText(currentText);\n\n    if (inputRef.current == null) {\n      // calling `props.onChange` or `props.onChangeText`\n      // may clean up the input itself. Exits here.\n      return;\n    }\n\n    setLastNativeText(currentText);\n    // This must happen last, after we call setLastNativeText.\n    // Different ordering can cause bugs when editing AndroidTextInputs\n    // with multiple Fragments.\n    // We must update this so that controlled input updates work.\n    setMostRecentEventCount(event.nativeEvent.eventCount);\n  };\n\n  const _onChangeSync = (event: ChangeEvent) => {\n    const currentText = event.nativeEvent.text;\n    props.unstable_onChangeSync && props.unstable_onChangeSync(event);\n    props.unstable_onChangeTextSync &&\n      props.unstable_onChangeTextSync(currentText);\n\n    if (inputRef.current == null) {\n      // calling `props.onChange` or `props.onChangeText`\n      // may clean up the input itself. Exits here.\n      return;\n    }\n\n    setLastNativeText(currentText);\n    // This must happen last, after we call setLastNativeText.\n    // Different ordering can cause bugs when editing AndroidTextInputs\n    // with multiple Fragments.\n    // We must update this so that controlled input updates work.\n    setMostRecentEventCount(event.nativeEvent.eventCount);\n  };\n\n  const _onSelectionChange = (event: SelectionChangeEvent) => {\n    props.onSelectionChange && props.onSelectionChange(event);\n\n    if (inputRef.current == null) {\n      // calling `props.onSelectionChange`\n      // may clean up the input itself. Exits here.\n      return;\n    }\n\n    setLastNativeSelection({\n      selection: event.nativeEvent.selection,\n      mostRecentEventCount,\n    });\n  };\n\n  const _onFocus = (event: FocusEvent) => {\n    TextInputState.focusInput(inputRef.current);\n    if (props.onFocus) {\n      props.onFocus(event);\n    }\n  };\n\n  const _onBlur = (event: BlurEvent) => {\n    TextInputState.blurInput(inputRef.current);\n    if (props.onBlur) {\n      props.onBlur(event);\n    }\n  };\n\n  const _onScroll = (event: ScrollEvent) => {\n    props.onScroll && props.onScroll(event);\n  };\n\n  let textInput = null;\n\n  const multiline = props.multiline ?? false;\n\n  let submitBehavior: SubmitBehavior;\n  if (props.submitBehavior != null) {\n    // `submitBehavior` is set explicitly\n    if (!multiline && props.submitBehavior === 'newline') {\n      // For single line text inputs, `'newline'` is not a valid option\n      submitBehavior = 'blurAndSubmit';\n    } else {\n      submitBehavior = props.submitBehavior;\n    }\n  } else if (multiline) {\n    if (props.blurOnSubmit === true) {\n      submitBehavior = 'blurAndSubmit';\n    } else {\n      submitBehavior = 'newline';\n    }\n  } else {\n    // Single line\n    if (props.blurOnSubmit !== false) {\n      submitBehavior = 'blurAndSubmit';\n    } else {\n      submitBehavior = 'submit';\n    }\n  }\n\n  const accessible = props.accessible !== false;\n  const focusable = props.focusable !== false;\n\n  const config = React.useMemo(\n    () => ({\n      onPress: (event: PressEvent) => {\n        if (props.editable !== false) {\n          if (inputRef.current != null) {\n            inputRef.current.focus();\n          }\n        }\n      },\n      onPressIn: props.onPressIn,\n      onPressOut: props.onPressOut,\n      cancelable:\n        Platform.OS === 'ios' ? !props.rejectResponderTermination : null,\n    }),\n    [\n      props.editable,\n      props.onPressIn,\n      props.onPressOut,\n      props.rejectResponderTermination,\n    ],\n  );\n\n  // Hide caret during test runs due to a flashing caret\n  // makes screenshot tests flakey\n  let caretHidden = props.caretHidden;\n  if (Platform.isTesting) {\n    caretHidden = true;\n  }\n\n  // TextInput handles onBlur and onFocus events\n  // so omitting onBlur and onFocus pressability handlers here.\n  const {onBlur, onFocus, ...eventHandlers} = usePressability(config) || {};\n\n  const _accessibilityState = {\n    busy: props['aria-busy'] ?? props.accessibilityState?.busy,\n    checked: props['aria-checked'] ?? props.accessibilityState?.checked,\n    disabled: props['aria-disabled'] ?? props.accessibilityState?.disabled,\n    expanded: props['aria-expanded'] ?? props.accessibilityState?.expanded,\n    selected: props['aria-selected'] ?? props.accessibilityState?.selected,\n  };\n\n  if (Platform.OS === 'ios') {\n    const RCTTextInputView =\n      props.multiline === true\n        ? RCTMultilineTextInputView\n        : RCTSinglelineTextInputView;\n\n    const style =\n      props.multiline === true\n        ? StyleSheet.flatten([styles.multilineInput, props.style])\n        : props.style;\n\n    const useOnChangeSync =\n      (props.unstable_onChangeSync || props.unstable_onChangeTextSync) &&\n      !(props.onChange || props.onChangeText);\n\n    textInput = (\n      <RCTTextInputView\n        ref={_setNativeRef}\n        {...props}\n        {...eventHandlers}\n        accessible={accessible}\n        accessibilityState={_accessibilityState}\n        submitBehavior={submitBehavior}\n        caretHidden={caretHidden}\n        dataDetectorTypes={props.dataDetectorTypes}\n        focusable={focusable}\n        mostRecentEventCount={mostRecentEventCount}\n        onBlur={_onBlur}\n        onKeyPressSync={props.unstable_onKeyPressSync}\n        onChange={_onChange}\n        onChangeSync={useOnChangeSync === true ? _onChangeSync : null}\n        onContentSizeChange={props.onContentSizeChange}\n        onFocus={_onFocus}\n        onScroll={_onScroll}\n        onSelectionChange={_onSelectionChange}\n        onSelectionChangeShouldSetResponder={emptyFunctionThatReturnsTrue}\n        selection={selection}\n        style={style}\n        text={text}\n      />\n    );\n  } else if (Platform.OS === 'android') {\n    const style = [props.style];\n    const autoCapitalize = props.autoCapitalize || 'sentences';\n    const _accessibilityLabelledBy =\n      props?.['aria-labelledby'] ?? props?.accessibilityLabelledBy;\n    const placeholder = props.placeholder ?? '';\n    let children = props.children;\n    const childCount = React.Children.count(children);\n    invariant(\n      !(props.value != null && childCount),\n      'Cannot specify both value and children.',\n    );\n    if (childCount > 1) {\n      children = <Text>{children}</Text>;\n    }\n\n    textInput = (\n      /* $FlowFixMe[prop-missing] the types for AndroidTextInput don't match up\n       * exactly with the props for TextInput. This will need to get fixed */\n      /* $FlowFixMe[incompatible-type] the types for AndroidTextInput don't\n       * match up exactly with the props for TextInput. This will need to get\n       * fixed */\n      /* $FlowFixMe[incompatible-type-arg] the types for AndroidTextInput don't\n       * match up exactly with the props for TextInput. This will need to get\n       * fixed */\n      <AndroidTextInput\n        ref={_setNativeRef}\n        {...props}\n        {...eventHandlers}\n        accessible={accessible}\n        accessibilityState={_accessibilityState}\n        accessibilityLabelledBy={_accessibilityLabelledBy}\n        autoCapitalize={autoCapitalize}\n        submitBehavior={submitBehavior}\n        caretHidden={caretHidden}\n        children={children}\n        disableFullscreenUI={props.disableFullscreenUI}\n        focusable={focusable}\n        mostRecentEventCount={mostRecentEventCount}\n        numberOfLines={props.rows ?? props.numberOfLines}\n        onBlur={_onBlur}\n        onChange={_onChange}\n        onFocus={_onFocus}\n        /* $FlowFixMe[prop-missing] the types for AndroidTextInput don't match\n         * up exactly with the props for TextInput. This will need to get fixed\n         */\n        /* $FlowFixMe[incompatible-type-arg] the types for AndroidTextInput\n         * don't match up exactly with the props for TextInput. This will need\n         * to get fixed */\n        onScroll={_onScroll}\n        onSelectionChange={_onSelectionChange}\n        placeholder={placeholder}\n        selection={selection}\n        style={style}\n        text={text}\n        textBreakStrategy={props.textBreakStrategy}\n      />\n    );\n  }\n  return (\n    <TextAncestor.Provider value={true}>{textInput}</TextAncestor.Provider>\n  );\n}\n\nconst enterKeyHintToReturnTypeMap = {\n  enter: 'default',\n  done: 'done',\n  go: 'go',\n  next: 'next',\n  previous: 'previous',\n  search: 'search',\n  send: 'send',\n};\n\nconst inputModeToKeyboardTypeMap = {\n  none: 'default',\n  text: 'default',\n  decimal: 'decimal-pad',\n  numeric: 'number-pad',\n  tel: 'phone-pad',\n  search: Platform.OS === 'ios' ? 'web-search' : 'default',\n  email: 'email-address',\n  url: 'url',\n};\n\n// Map HTML autocomplete values to Android autoComplete values\nconst autoCompleteWebToAutoCompleteAndroidMap = {\n  'address-line1': 'postal-address-region',\n  'address-line2': 'postal-address-locality',\n  bday: 'birthdate-full',\n  'bday-day': 'birthdate-day',\n  'bday-month': 'birthdate-month',\n  'bday-year': 'birthdate-year',\n  'cc-csc': 'cc-csc',\n  'cc-exp': 'cc-exp',\n  'cc-exp-month': 'cc-exp-month',\n  'cc-exp-year': 'cc-exp-year',\n  'cc-number': 'cc-number',\n  country: 'postal-address-country',\n  'current-password': 'password',\n  email: 'email',\n  'honorific-prefix': 'name-prefix',\n  'honorific-suffix': 'name-suffix',\n  name: 'name',\n  'additional-name': 'name-middle',\n  'family-name': 'name-family',\n  'given-name': 'name-given',\n  'new-password': 'password-new',\n  off: 'off',\n  'one-time-code': 'sms-otp',\n  'postal-code': 'postal-code',\n  sex: 'gender',\n  'street-address': 'street-address',\n  tel: 'tel',\n  'tel-country-code': 'tel-country-code',\n  'tel-national': 'tel-national',\n  username: 'username',\n};\n\n// Map HTML autocomplete values to iOS textContentType values\nconst autoCompleteWebToTextContentTypeMap = {\n  'address-line1': 'streetAddressLine1',\n  'address-line2': 'streetAddressLine2',\n  'cc-number': 'creditCardNumber',\n  'current-password': 'password',\n  country: 'countryName',\n  email: 'emailAddress',\n  name: 'name',\n  'additional-name': 'middleName',\n  'family-name': 'familyName',\n  'given-name': 'givenName',\n  nickname: 'nickname',\n  'honorific-prefix': 'namePrefix',\n  'honorific-suffix': 'nameSuffix',\n  'new-password': 'newPassword',\n  off: 'none',\n  'one-time-code': 'oneTimeCode',\n  organization: 'organizationName',\n  'organization-title': 'jobTitle',\n  'postal-code': 'postalCode',\n  'street-address': 'fullStreetAddress',\n  tel: 'telephoneNumber',\n  url: 'URL',\n  username: 'username',\n};\n\nconst ExportedForwardRef: React.AbstractComponent<\n  React.ElementConfig<typeof InternalTextInput>,\n  React.ElementRef<HostComponent<mixed>> & ImperativeMethods,\n> = React.forwardRef(function TextInput(\n  {\n    allowFontScaling = true,\n    rejectResponderTermination = true,\n    underlineColorAndroid = 'transparent',\n    autoComplete,\n    textContentType,\n    readOnly,\n    editable,\n    enterKeyHint,\n    returnKeyType,\n    inputMode,\n    keyboardType,\n    ...restProps\n  },\n  forwardedRef: ReactRefSetter<\n    React.ElementRef<HostComponent<mixed>> & ImperativeMethods,\n  >,\n) {\n  const style = flattenStyle(restProps.style);\n\n  if (style?.verticalAlign != null) {\n    style.textAlignVertical =\n      verticalAlignToTextAlignVerticalMap[style.verticalAlign];\n  }\n\n  return (\n    <InternalTextInput\n      allowFontScaling={allowFontScaling}\n      rejectResponderTermination={rejectResponderTermination}\n      underlineColorAndroid={underlineColorAndroid}\n      editable={readOnly !== undefined ? !readOnly : editable}\n      returnKeyType={\n        enterKeyHint ? enterKeyHintToReturnTypeMap[enterKeyHint] : returnKeyType\n      }\n      keyboardType={\n        inputMode ? inputModeToKeyboardTypeMap[inputMode] : keyboardType\n      }\n      autoComplete={\n        Platform.OS === 'android'\n          ? // $FlowFixMe[invalid-computed-prop]\n            // $FlowFixMe[prop-missing]\n            autoCompleteWebToAutoCompleteAndroidMap[autoComplete] ??\n            autoComplete\n          : undefined\n      }\n      textContentType={\n        textContentType != null\n          ? textContentType\n          : Platform.OS === 'ios' &&\n            autoComplete &&\n            autoComplete in autoCompleteWebToTextContentTypeMap\n          ? // $FlowFixMe[invalid-computed-prop]\n            // $FlowFixMe[prop-missing]\n            autoCompleteWebToTextContentTypeMap[autoComplete]\n          : textContentType\n      }\n      {...restProps}\n      forwardedRef={forwardedRef}\n      style={style}\n    />\n  );\n});\n\n/**\n * Switch to `deprecated-react-native-prop-types` for compatibility with future\n * releases. This is deprecated and will be removed in the future.\n */\nExportedForwardRef.propTypes =\n  require('deprecated-react-native-prop-types').TextInputPropTypes;\n\n// $FlowFixMe[prop-missing]\nExportedForwardRef.State = {\n  currentlyFocusedInput: TextInputState.currentlyFocusedInput,\n\n  currentlyFocusedField: TextInputState.currentlyFocusedField,\n  focusTextInput: TextInputState.focusTextInput,\n  blurTextInput: TextInputState.blurTextInput,\n};\n\nexport type TextInputComponentStatics = $ReadOnly<{|\n  State: $ReadOnly<{|\n    currentlyFocusedInput: typeof TextInputState.currentlyFocusedInput,\n    currentlyFocusedField: typeof TextInputState.currentlyFocusedField,\n    focusTextInput: typeof TextInputState.focusTextInput,\n    blurTextInput: typeof TextInputState.blurTextInput,\n  |}>,\n|}>;\n\nconst styles = StyleSheet.create({\n  multilineInput: {\n    // This default top inset makes RCTMultilineTextInputView seem as close as possible\n    // to single-line RCTSinglelineTextInputView defaults, using the system defaults\n    // of font size 17 and a height of 31 points.\n    paddingTop: 5,\n  },\n});\n\nconst verticalAlignToTextAlignVerticalMap = {\n  auto: 'auto',\n  top: 'top',\n  bottom: 'bottom',\n  middle: 'center',\n};\n\n// $FlowFixMe[unclear-type] Unclear type. Using `any` type is not safe.\nmodule.exports = ((ExportedForwardRef: any): TextInputType);\n","/**\n * Copyright (c) Meta Platforms, Inc. and affiliates.\n *\n * This source code is licensed under the MIT license found in the\n * LICENSE file in the root directory of this source tree.\n *\n * @flow strict\n * @format\n */\n\nimport type {TurboModule} from '../../TurboModule/RCTExport';\n\nimport * as TurboModuleRegistry from '../../TurboModule/TurboModuleRegistry';\n\nexport interface Spec extends TurboModule {\n  +getConstants: () => {|\n    SHORT: number,\n    LONG: number,\n    TOP: number,\n    BOTTOM: number,\n    CENTER: number,\n  |};\n  +show: (message: string, duration: number) => void;\n  +showWithGravity: (\n    message: string,\n    duration: number,\n    gravity: number,\n  ) => void;\n  +showWithGravityAndOffset: (\n    message: string,\n    duration: number,\n    gravity: number,\n    xOffset: number,\n    yOffset: number,\n  ) => void;\n}\n\nexport default (TurboModuleRegistry.getEnforcing<Spec>('ToastAndroid'): Spec);\n","/**\n * Copyright (c) Meta Platforms, Inc. and affiliates.\n *\n * This source code is licensed under the MIT license found in the\n * LICENSE file in the root directory of this source tree.\n *\n * @format\n * @flow strict-local\n */\n\nimport NativeToastAndroid from './NativeToastAndroid';\n\n/**\n * This exposes the native ToastAndroid module as a JS module. This has a function 'show'\n * which takes the following parameters:\n *\n * 1. String message: A string with the text to toast\n * 2. int duration: The duration of the toast. May be ToastAndroid.SHORT or ToastAndroid.LONG\n *\n * There is also a function `showWithGravity` to specify the layout gravity. May be\n * ToastAndroid.TOP, ToastAndroid.BOTTOM, ToastAndroid.CENTER.\n *\n * The 'showWithGravityAndOffset' function adds on the ability to specify offset\n * These offset values will translate to pixels.\n *\n * Basic usage:\n * ```javascript\n * ToastAndroid.show('A pikachu appeared nearby !', ToastAndroid.SHORT);\n * ToastAndroid.showWithGravity('All Your Base Are Belong To Us', ToastAndroid.SHORT, ToastAndroid.CENTER);\n * ToastAndroid.showWithGravityAndOffset('A wild toast appeared!', ToastAndroid.LONG, ToastAndroid.BOTTOM, 25, 50);\n * ```\n */\n\nconst ToastAndroidConstants = NativeToastAndroid.getConstants();\n\nconst ToastAndroid = {\n  // Toast duration constants\n  SHORT: (ToastAndroidConstants.SHORT: number),\n  LONG: (ToastAndroidConstants.LONG: number),\n  // Toast gravity constants\n  TOP: (ToastAndroidConstants.TOP: number),\n  BOTTOM: (ToastAndroidConstants.BOTTOM: number),\n  CENTER: (ToastAndroidConstants.CENTER: number),\n\n  show: function (message: string, duration: number): void {\n    NativeToastAndroid.show(message, duration);\n  },\n\n  showWithGravity: function (\n    message: string,\n    duration: number,\n    gravity: number,\n  ): void {\n    NativeToastAndroid.showWithGravity(message, duration, gravity);\n  },\n\n  showWithGravityAndOffset: function (\n    message: string,\n    duration: number,\n    gravity: number,\n    xOffset: number,\n    yOffset: number,\n  ): void {\n    NativeToastAndroid.showWithGravityAndOffset(\n      message,\n      duration,\n      gravity,\n      xOffset,\n      yOffset,\n    );\n  },\n};\n\nmodule.exports = ToastAndroid;\n","/**\n * Copyright (c) Meta Platforms, Inc. and affiliates.\n *\n * This source code is licensed under the MIT license found in the\n * LICENSE file in the root directory of this source tree.\n *\n * @format\n */\n\n'use strict';\nimport PooledClass from './PooledClass';\n\nconst twoArgumentPooler = PooledClass.twoArgumentPooler;\n\n/**\n * PooledClass representing the bounding rectangle of a region.\n *\n * @param {number} width Width of bounding rectangle.\n * @param {number} height Height of bounding rectangle.\n * @constructor BoundingDimensions\n */\nfunction BoundingDimensions(width, height) {\n  this.width = width;\n  this.height = height;\n}\n\nBoundingDimensions.prototype.destructor = function () {\n  this.width = null;\n  this.height = null;\n};\n\n/**\n * @param {HTMLElement} element Element to return `BoundingDimensions` for.\n * @return {BoundingDimensions} Bounding dimensions of `element`.\n */\nBoundingDimensions.getPooledFromElement = function (element) {\n  return BoundingDimensions.getPooled(\n    element.offsetWidth,\n    element.offsetHeight,\n  );\n};\n\nPooledClass.addPoolingTo(BoundingDimensions, twoArgumentPooler);\n\nmodule.exports = BoundingDimensions;\n","/**\n * Copyright (c) Meta Platforms, Inc. and affiliates.\n *\n * This source code is licensed under the MIT license found in the\n * LICENSE file in the root directory of this source tree.\n *\n * @format\n * @flow\n */\n\n'use strict';\nimport invariant from 'invariant';\n\n/**\n * Static poolers. Several custom versions for each potential number of\n * arguments. A completely generic pooler is easy to implement, but would\n * require accessing the `arguments` object. In each of these, `this` refers to\n * the Class itself, not an instance. If any others are needed, simply add them\n * here, or in their own files.\n */\n/* $FlowFixMe[missing-this-annot] The 'this' type annotation(s) required by\n * Flow's LTI update could not be added via codemod */\nconst oneArgumentPooler = function (copyFieldsFrom: any) {\n  const Klass = this; // eslint-disable-line consistent-this\n  if (Klass.instancePool.length) {\n    const instance = Klass.instancePool.pop();\n    Klass.call(instance, copyFieldsFrom);\n    return instance;\n  } else {\n    return new Klass(copyFieldsFrom);\n  }\n};\n\n/* $FlowFixMe[missing-this-annot] The 'this' type annotation(s) required by\n * Flow's LTI update could not be added via codemod */\nconst twoArgumentPooler = function (a1: any, a2: any) {\n  const Klass = this; // eslint-disable-line consistent-this\n  if (Klass.instancePool.length) {\n    const instance = Klass.instancePool.pop();\n    Klass.call(instance, a1, a2);\n    return instance;\n  } else {\n    return new Klass(a1, a2);\n  }\n};\n\n/* $FlowFixMe[missing-this-annot] The 'this' type annotation(s) required by\n * Flow's LTI update could not be added via codemod */\nconst threeArgumentPooler = function (a1: any, a2: any, a3: any) {\n  const Klass = this; // eslint-disable-line consistent-this\n  if (Klass.instancePool.length) {\n    const instance = Klass.instancePool.pop();\n    Klass.call(instance, a1, a2, a3);\n    return instance;\n  } else {\n    return new Klass(a1, a2, a3);\n  }\n};\n\n/* $FlowFixMe[missing-this-annot] The 'this' type annotation(s) required by\n * Flow's LTI update could not be added via codemod */\nconst fourArgumentPooler = function (a1: any, a2: any, a3: any, a4: any) {\n  const Klass = this; // eslint-disable-line consistent-this\n  if (Klass.instancePool.length) {\n    const instance = Klass.instancePool.pop();\n    Klass.call(instance, a1, a2, a3, a4);\n    return instance;\n  } else {\n    return new Klass(a1, a2, a3, a4);\n  }\n};\n\n/* $FlowFixMe[missing-local-annot] The type annotation(s) required by Flow's\n * LTI update could not be added via codemod */\n/* $FlowFixMe[missing-this-annot] The 'this' type annotation(s) required by\n * Flow's LTI update could not be added via codemod */\nconst standardReleaser = function (instance) {\n  const Klass = this; // eslint-disable-line consistent-this\n  invariant(\n    instance instanceof Klass,\n    'Trying to release an instance into a pool of a different type.',\n  );\n  instance.destructor();\n  if (Klass.instancePool.length < Klass.poolSize) {\n    Klass.instancePool.push(instance);\n  }\n};\n\nconst DEFAULT_POOL_SIZE = 10;\nconst DEFAULT_POOLER = oneArgumentPooler;\n\ntype Pooler = any;\n\n/**\n * Augments `CopyConstructor` to be a poolable class, augmenting only the class\n * itself (statically) not adding any prototypical fields. Any CopyConstructor\n * you give this may have a `poolSize` property, and will look for a\n * prototypical `destructor` on instances.\n *\n * @param {Function} CopyConstructor Constructor that can be used to reset.\n * @param {Function} pooler Customizable pooler.\n */\nconst addPoolingTo = function <T>(\n  CopyConstructor: Class<T>,\n  pooler: Pooler,\n): Class<T> & {\n  getPooled(\n    ...args: $ReadOnlyArray<mixed>\n  ): /* arguments of the constructor */ T,\n  release(instance: mixed): void,\n  ...\n} {\n  // Casting as any so that flow ignores the actual implementation and trusts\n  // it to match the type we declared\n  const NewKlass = (CopyConstructor: any);\n  NewKlass.instancePool = [];\n  NewKlass.getPooled = pooler || DEFAULT_POOLER;\n  if (!NewKlass.poolSize) {\n    NewKlass.poolSize = DEFAULT_POOL_SIZE;\n  }\n  NewKlass.release = standardReleaser;\n  return NewKlass;\n};\n\nconst PooledClass = {\n  addPoolingTo: addPoolingTo,\n  oneArgumentPooler: (oneArgumentPooler: Pooler),\n  twoArgumentPooler: (twoArgumentPooler: Pooler),\n  threeArgumentPooler: (threeArgumentPooler: Pooler),\n  fourArgumentPooler: (fourArgumentPooler: Pooler),\n};\n\nmodule.exports = PooledClass;\n","/**\n * Copyright (c) Meta Platforms, Inc. and affiliates.\n *\n * This source code is licensed under the MIT license found in the\n * LICENSE file in the root directory of this source tree.\n *\n * @format\n */\n\n'use strict';\nimport PooledClass from './PooledClass';\n\nconst twoArgumentPooler = PooledClass.twoArgumentPooler;\n\n/**\n * Position does not expose methods for construction via an `HTMLDOMElement`,\n * because it isn't meaningful to construct such a thing without first defining\n * a frame of reference.\n *\n * @param {number} windowStartKey Key that window starts at.\n * @param {number} windowEndKey Key that window ends at.\n */\nfunction Position(left, top) {\n  this.left = left;\n  this.top = top;\n}\n\nPosition.prototype.destructor = function () {\n  this.left = null;\n  this.top = null;\n};\n\nPooledClass.addPoolingTo(Position, twoArgumentPooler);\n\nmodule.exports = Position;\n","/**\n * Copyright (c) Meta Platforms, Inc. and affiliates.\n *\n * This source code is licensed under the MIT license found in the\n * LICENSE file in the root directory of this source tree.\n *\n * @flow\n * @format\n */\n\nimport type {EdgeInsetsProp} from '../../StyleSheet/EdgeInsetsPropType';\nimport type {ColorValue} from '../../StyleSheet/StyleSheet';\nimport type {PressEvent} from '../../Types/CoreEventTypes';\nimport type {TouchableType} from './Touchable.flow';\n\nimport {PressabilityDebugView} from '../../Pressability/PressabilityDebug';\nimport UIManager from '../../ReactNative/UIManager';\nimport Platform from '../../Utilities/Platform';\nimport SoundManager from '../Sound/SoundManager';\nimport BoundingDimensions from './BoundingDimensions';\nimport Position from './Position';\nimport * as React from 'react';\n\nconst extractSingleTouch = (nativeEvent: {\n  +changedTouches: $ReadOnlyArray<PressEvent['nativeEvent']>,\n  +force?: number,\n  +identifier: number,\n  +locationX: number,\n  +locationY: number,\n  +pageX: number,\n  +pageY: number,\n  +target: ?number,\n  +timestamp: number,\n  +touches: $ReadOnlyArray<PressEvent['nativeEvent']>,\n}) => {\n  const touches = nativeEvent.touches;\n  const changedTouches = nativeEvent.changedTouches;\n  const hasTouches = touches && touches.length > 0;\n  const hasChangedTouches = changedTouches && changedTouches.length > 0;\n\n  return !hasTouches && hasChangedTouches\n    ? changedTouches[0]\n    : hasTouches\n    ? touches[0]\n    : nativeEvent;\n};\n\n/**\n * `Touchable`: Taps done right.\n *\n * You hook your `ResponderEventPlugin` events into `Touchable`. `Touchable`\n * will measure time/geometry and tells you when to give feedback to the user.\n *\n * ====================== Touchable Tutorial ===============================\n * The `Touchable` mixin helps you handle the \"press\" interaction. It analyzes\n * the geometry of elements, and observes when another responder (scroll view\n * etc) has stolen the touch lock. It notifies your component when it should\n * give feedback to the user. (bouncing/highlighting/unhighlighting).\n *\n * - When a touch was activated (typically you highlight)\n * - When a touch was deactivated (typically you unhighlight)\n * - When a touch was \"pressed\" - a touch ended while still within the geometry\n *   of the element, and no other element (like scroller) has \"stolen\" touch\n *   lock (\"responder\") (Typically you bounce the element).\n *\n * A good tap interaction isn't as simple as you might think. There should be a\n * slight delay before showing a highlight when starting a touch. If a\n * subsequent touch move exceeds the boundary of the element, it should\n * unhighlight, but if that same touch is brought back within the boundary, it\n * should rehighlight again. A touch can move in and out of that boundary\n * several times, each time toggling highlighting, but a \"press\" is only\n * triggered if that touch ends while within the element's boundary and no\n * scroller (or anything else) has stolen the lock on touches.\n *\n * To create a new type of component that handles interaction using the\n * `Touchable` mixin, do the following:\n *\n * - Initialize the `Touchable` state.\n *\n *   getInitialState: function() {\n *     return merge(this.touchableGetInitialState(), yourComponentState);\n *   }\n *\n * - Choose the rendered component who's touches should start the interactive\n *   sequence. On that rendered node, forward all `Touchable` responder\n *   handlers. You can choose any rendered node you like. Choose a node whose\n *   hit target you'd like to instigate the interaction sequence:\n *\n *   // In render function:\n *   return (\n *     <View\n *       onStartShouldSetResponder={this.touchableHandleStartShouldSetResponder}\n *       onResponderTerminationRequest={this.touchableHandleResponderTerminationRequest}\n *       onResponderGrant={this.touchableHandleResponderGrant}\n *       onResponderMove={this.touchableHandleResponderMove}\n *       onResponderRelease={this.touchableHandleResponderRelease}\n *       onResponderTerminate={this.touchableHandleResponderTerminate}>\n *       <View>\n *         Even though the hit detection/interactions are triggered by the\n *         wrapping (typically larger) node, we usually end up implementing\n *         custom logic that highlights this inner one.\n *       </View>\n *     </View>\n *   );\n *\n * - You may set up your own handlers for each of these events, so long as you\n *   also invoke the `touchable*` handlers inside of your custom handler.\n *\n * - Implement the handlers on your component class in order to provide\n *   feedback to the user. See documentation for each of these class methods\n *   that you should implement.\n *\n *   touchableHandlePress: function() {\n *      this.performBounceAnimation();  // or whatever you want to do.\n *   },\n *   touchableHandleActivePressIn: function() {\n *     this.beginHighlighting(...);  // Whatever you like to convey activation\n *   },\n *   touchableHandleActivePressOut: function() {\n *     this.endHighlighting(...);  // Whatever you like to convey deactivation\n *   },\n *\n * - There are more advanced methods you can implement (see documentation below):\n *   touchableGetHighlightDelayMS: function() {\n *     return 20;\n *   }\n *   // In practice, *always* use a predeclared constant (conserve memory).\n *   touchableGetPressRectOffset: function() {\n *     return {top: 20, left: 20, right: 20, bottom: 100};\n *   }\n */\n\n/**\n * Touchable states.\n */\n\nconst States = {\n  NOT_RESPONDER: 'NOT_RESPONDER', // Not the responder\n  RESPONDER_INACTIVE_PRESS_IN: 'RESPONDER_INACTIVE_PRESS_IN', // Responder, inactive, in the `PressRect`\n  RESPONDER_INACTIVE_PRESS_OUT: 'RESPONDER_INACTIVE_PRESS_OUT', // Responder, inactive, out of `PressRect`\n  RESPONDER_ACTIVE_PRESS_IN: 'RESPONDER_ACTIVE_PRESS_IN', // Responder, active, in the `PressRect`\n  RESPONDER_ACTIVE_PRESS_OUT: 'RESPONDER_ACTIVE_PRESS_OUT', // Responder, active, out of `PressRect`\n  RESPONDER_ACTIVE_LONG_PRESS_IN: 'RESPONDER_ACTIVE_LONG_PRESS_IN', // Responder, active, in the `PressRect`, after long press threshold\n  RESPONDER_ACTIVE_LONG_PRESS_OUT: 'RESPONDER_ACTIVE_LONG_PRESS_OUT', // Responder, active, out of `PressRect`, after long press threshold\n  ERROR: 'ERROR',\n};\n\ntype State =\n  | typeof States.NOT_RESPONDER\n  | typeof States.RESPONDER_INACTIVE_PRESS_IN\n  | typeof States.RESPONDER_INACTIVE_PRESS_OUT\n  | typeof States.RESPONDER_ACTIVE_PRESS_IN\n  | typeof States.RESPONDER_ACTIVE_PRESS_OUT\n  | typeof States.RESPONDER_ACTIVE_LONG_PRESS_IN\n  | typeof States.RESPONDER_ACTIVE_LONG_PRESS_OUT\n  | typeof States.ERROR;\n\n/*\n * Quick lookup map for states that are considered to be \"active\"\n */\n\nconst baseStatesConditions = {\n  NOT_RESPONDER: false,\n  RESPONDER_INACTIVE_PRESS_IN: false,\n  RESPONDER_INACTIVE_PRESS_OUT: false,\n  RESPONDER_ACTIVE_PRESS_IN: false,\n  RESPONDER_ACTIVE_PRESS_OUT: false,\n  RESPONDER_ACTIVE_LONG_PRESS_IN: false,\n  RESPONDER_ACTIVE_LONG_PRESS_OUT: false,\n  ERROR: false,\n};\n\nconst IsActive = {\n  ...baseStatesConditions,\n  RESPONDER_ACTIVE_PRESS_OUT: true,\n  RESPONDER_ACTIVE_PRESS_IN: true,\n};\n\n/**\n * Quick lookup for states that are considered to be \"pressing\" and are\n * therefore eligible to result in a \"selection\" if the press stops.\n */\nconst IsPressingIn = {\n  ...baseStatesConditions,\n  RESPONDER_INACTIVE_PRESS_IN: true,\n  RESPONDER_ACTIVE_PRESS_IN: true,\n  RESPONDER_ACTIVE_LONG_PRESS_IN: true,\n};\n\nconst IsLongPressingIn = {\n  ...baseStatesConditions,\n  RESPONDER_ACTIVE_LONG_PRESS_IN: true,\n};\n\n/**\n * Inputs to the state machine.\n */\nconst Signals = {\n  DELAY: 'DELAY',\n  RESPONDER_GRANT: 'RESPONDER_GRANT',\n  RESPONDER_RELEASE: 'RESPONDER_RELEASE',\n  RESPONDER_TERMINATED: 'RESPONDER_TERMINATED',\n  ENTER_PRESS_RECT: 'ENTER_PRESS_RECT',\n  LEAVE_PRESS_RECT: 'LEAVE_PRESS_RECT',\n  LONG_PRESS_DETECTED: 'LONG_PRESS_DETECTED',\n};\n\ntype Signal =\n  | typeof Signals.DELAY\n  | typeof Signals.RESPONDER_GRANT\n  | typeof Signals.RESPONDER_RELEASE\n  | typeof Signals.RESPONDER_TERMINATED\n  | typeof Signals.ENTER_PRESS_RECT\n  | typeof Signals.LEAVE_PRESS_RECT\n  | typeof Signals.LONG_PRESS_DETECTED;\n\n/**\n * Mapping from States x Signals => States\n */\nconst Transitions = {\n  NOT_RESPONDER: {\n    DELAY: States.ERROR,\n    RESPONDER_GRANT: States.RESPONDER_INACTIVE_PRESS_IN,\n    RESPONDER_RELEASE: States.ERROR,\n    RESPONDER_TERMINATED: States.ERROR,\n    ENTER_PRESS_RECT: States.ERROR,\n    LEAVE_PRESS_RECT: States.ERROR,\n    LONG_PRESS_DETECTED: States.ERROR,\n  },\n  RESPONDER_INACTIVE_PRESS_IN: {\n    DELAY: States.RESPONDER_ACTIVE_PRESS_IN,\n    RESPONDER_GRANT: States.ERROR,\n    RESPONDER_RELEASE: States.NOT_RESPONDER,\n    RESPONDER_TERMINATED: States.NOT_RESPONDER,\n    ENTER_PRESS_RECT: States.RESPONDER_INACTIVE_PRESS_IN,\n    LEAVE_PRESS_RECT: States.RESPONDER_INACTIVE_PRESS_OUT,\n    LONG_PRESS_DETECTED: States.ERROR,\n  },\n  RESPONDER_INACTIVE_PRESS_OUT: {\n    DELAY: States.RESPONDER_ACTIVE_PRESS_OUT,\n    RESPONDER_GRANT: States.ERROR,\n    RESPONDER_RELEASE: States.NOT_RESPONDER,\n    RESPONDER_TERMINATED: States.NOT_RESPONDER,\n    ENTER_PRESS_RECT: States.RESPONDER_INACTIVE_PRESS_IN,\n    LEAVE_PRESS_RECT: States.RESPONDER_INACTIVE_PRESS_OUT,\n    LONG_PRESS_DETECTED: States.ERROR,\n  },\n  RESPONDER_ACTIVE_PRESS_IN: {\n    DELAY: States.ERROR,\n    RESPONDER_GRANT: States.ERROR,\n    RESPONDER_RELEASE: States.NOT_RESPONDER,\n    RESPONDER_TERMINATED: States.NOT_RESPONDER,\n    ENTER_PRESS_RECT: States.RESPONDER_ACTIVE_PRESS_IN,\n    LEAVE_PRESS_RECT: States.RESPONDER_ACTIVE_PRESS_OUT,\n    LONG_PRESS_DETECTED: States.RESPONDER_ACTIVE_LONG_PRESS_IN,\n  },\n  RESPONDER_ACTIVE_PRESS_OUT: {\n    DELAY: States.ERROR,\n    RESPONDER_GRANT: States.ERROR,\n    RESPONDER_RELEASE: States.NOT_RESPONDER,\n    RESPONDER_TERMINATED: States.NOT_RESPONDER,\n    ENTER_PRESS_RECT: States.RESPONDER_ACTIVE_PRESS_IN,\n    LEAVE_PRESS_RECT: States.RESPONDER_ACTIVE_PRESS_OUT,\n    LONG_PRESS_DETECTED: States.ERROR,\n  },\n  RESPONDER_ACTIVE_LONG_PRESS_IN: {\n    DELAY: States.ERROR,\n    RESPONDER_GRANT: States.ERROR,\n    RESPONDER_RELEASE: States.NOT_RESPONDER,\n    RESPONDER_TERMINATED: States.NOT_RESPONDER,\n    ENTER_PRESS_RECT: States.RESPONDER_ACTIVE_LONG_PRESS_IN,\n    LEAVE_PRESS_RECT: States.RESPONDER_ACTIVE_LONG_PRESS_OUT,\n    LONG_PRESS_DETECTED: States.RESPONDER_ACTIVE_LONG_PRESS_IN,\n  },\n  RESPONDER_ACTIVE_LONG_PRESS_OUT: {\n    DELAY: States.ERROR,\n    RESPONDER_GRANT: States.ERROR,\n    RESPONDER_RELEASE: States.NOT_RESPONDER,\n    RESPONDER_TERMINATED: States.NOT_RESPONDER,\n    ENTER_PRESS_RECT: States.RESPONDER_ACTIVE_LONG_PRESS_IN,\n    LEAVE_PRESS_RECT: States.RESPONDER_ACTIVE_LONG_PRESS_OUT,\n    LONG_PRESS_DETECTED: States.ERROR,\n  },\n  error: {\n    DELAY: States.NOT_RESPONDER,\n    RESPONDER_GRANT: States.RESPONDER_INACTIVE_PRESS_IN,\n    RESPONDER_RELEASE: States.NOT_RESPONDER,\n    RESPONDER_TERMINATED: States.NOT_RESPONDER,\n    ENTER_PRESS_RECT: States.NOT_RESPONDER,\n    LEAVE_PRESS_RECT: States.NOT_RESPONDER,\n    LONG_PRESS_DETECTED: States.NOT_RESPONDER,\n  },\n};\n\n// ==== Typical Constants for integrating into UI components ====\n// var HIT_EXPAND_PX = 20;\n// var HIT_VERT_OFFSET_PX = 10;\nconst HIGHLIGHT_DELAY_MS = 130;\n\nconst PRESS_EXPAND_PX = 20;\n\nconst LONG_PRESS_THRESHOLD = 500;\n\nconst LONG_PRESS_DELAY_MS = LONG_PRESS_THRESHOLD - HIGHLIGHT_DELAY_MS;\n\nconst LONG_PRESS_ALLOWED_MOVEMENT = 10;\n\n// Default amount \"active\" region protrudes beyond box\n\n/**\n * By convention, methods prefixed with underscores are meant to be @private,\n * and not @protected. Mixers shouldn't access them - not even to provide them\n * as callback handlers.\n *\n *\n * ========== Geometry =========\n * `Touchable` only assumes that there exists a `HitRect` node. The `PressRect`\n * is an abstract box that is extended beyond the `HitRect`.\n *\n *  +--------------------------+\n *  |                          | - \"Start\" events in `HitRect` cause `HitRect`\n *  |  +--------------------+  |   to become the responder.\n *  |  |  +--------------+  |  | - `HitRect` is typically expanded around\n *  |  |  |              |  |  |   the `VisualRect`, but shifted downward.\n *  |  |  |  VisualRect  |  |  | - After pressing down, after some delay,\n *  |  |  |              |  |  |   and before letting up, the Visual React\n *  |  |  +--------------+  |  |   will become \"active\". This makes it eligible\n *  |  |     HitRect        |  |   for being highlighted (so long as the\n *  |  +--------------------+  |   press remains in the `PressRect`).\n *  |        PressRect     o   |\n *  +----------------------|---+\n *           Out Region    |\n *                         +-----+ This gap between the `HitRect` and\n *                                 `PressRect` allows a touch to move far away\n *                                 from the original hit rect, and remain\n *                                 highlighted, and eligible for a \"Press\".\n *                                 Customize this via\n *                                 `touchableGetPressRectOffset()`.\n *\n *\n *\n * ======= State Machine =======\n *\n * +-------------+ <---+ RESPONDER_RELEASE\n * |NOT_RESPONDER|\n * +-------------+ <---+ RESPONDER_TERMINATED\n *     +\n *     | RESPONDER_GRANT (HitRect)\n *     v\n * +---------------------------+  DELAY   +-------------------------+  T + DELAY     +------------------------------+\n * |RESPONDER_INACTIVE_PRESS_IN|+-------->|RESPONDER_ACTIVE_PRESS_IN| +------------> |RESPONDER_ACTIVE_LONG_PRESS_IN|\n * +---------------------------+          +-------------------------+                +------------------------------+\n *     +            ^                         +           ^                                 +           ^\n *     |LEAVE_      |ENTER_                   |LEAVE_     |ENTER_                           |LEAVE_     |ENTER_\n *     |PRESS_RECT  |PRESS_RECT               |PRESS_RECT |PRESS_RECT                       |PRESS_RECT |PRESS_RECT\n *     |            |                         |           |                                 |           |\n *     v            +                         v           +                                 v           +\n * +----------------------------+  DELAY  +--------------------------+               +-------------------------------+\n * |RESPONDER_INACTIVE_PRESS_OUT|+------->|RESPONDER_ACTIVE_PRESS_OUT|               |RESPONDER_ACTIVE_LONG_PRESS_OUT|\n * +----------------------------+         +--------------------------+               +-------------------------------+\n *\n * T + DELAY => LONG_PRESS_DELAY_MS + DELAY\n *\n * Not drawn are the side effects of each transition. The most important side\n * effect is the `touchableHandlePress` abstract method invocation that occurs\n * when a responder is released while in either of the \"Press\" states.\n *\n * The other important side effects are the highlight abstract method\n * invocations (internal callbacks) to be implemented by the mixer.\n *\n *\n * @lends Touchable.prototype\n */\nconst TouchableMixin = {\n  componentDidMount: function () {\n    if (!Platform.isTV) {\n      return;\n    }\n  },\n\n  /**\n   * Clear all timeouts on unmount\n   */\n  /* $FlowFixMe[missing-this-annot] The 'this' type annotation(s) required by\n   * Flow's LTI update could not be added via codemod */\n  componentWillUnmount: function () {\n    this.touchableDelayTimeout && clearTimeout(this.touchableDelayTimeout);\n    this.longPressDelayTimeout && clearTimeout(this.longPressDelayTimeout);\n    this.pressOutDelayTimeout && clearTimeout(this.pressOutDelayTimeout);\n  },\n\n  /**\n   * It's prefer that mixins determine state in this way, having the class\n   * explicitly mix the state in the one and only `getInitialState` method.\n   *\n   * @return {object} State object to be placed inside of\n   * `this.state.touchable`.\n   */\n  touchableGetInitialState: function (): $TEMPORARY$object<{|\n    touchable: $TEMPORARY$object<{|responderID: null, touchState: void|}>,\n  |}> {\n    return {\n      touchable: {touchState: undefined, responderID: null},\n    };\n  },\n\n  // ==== Hooks to Gesture Responder system ====\n  /**\n   * Must return true if embedded in a native platform scroll view.\n   */\n  /* $FlowFixMe[missing-this-annot] The 'this' type annotation(s) required by\n   * Flow's LTI update could not be added via codemod */\n  touchableHandleResponderTerminationRequest: function (): any {\n    return !this.props.rejectResponderTermination;\n  },\n\n  /**\n   * Must return true to start the process of `Touchable`.\n   */\n  /* $FlowFixMe[missing-this-annot] The 'this' type annotation(s) required by\n   * Flow's LTI update could not be added via codemod */\n  touchableHandleStartShouldSetResponder: function (): any {\n    return !this.props.disabled;\n  },\n\n  /**\n   * Return true to cancel press on long press.\n   */\n  touchableLongPressCancelsPress: function (): boolean {\n    return true;\n  },\n\n  /**\n   * Place as callback for a DOM element's `onResponderGrant` event.\n   * @param {SyntheticEvent} e Synthetic event from event system.\n   *\n   */\n  /* $FlowFixMe[missing-this-annot] The 'this' type annotation(s) required by\n   * Flow's LTI update could not be added via codemod */\n  touchableHandleResponderGrant: function (e: PressEvent) {\n    const dispatchID = e.currentTarget;\n    // Since e is used in a callback invoked on another event loop\n    // (as in setTimeout etc), we need to call e.persist() on the\n    // event to make sure it doesn't get reused in the event object pool.\n    e.persist();\n\n    this.pressOutDelayTimeout && clearTimeout(this.pressOutDelayTimeout);\n    this.pressOutDelayTimeout = null;\n\n    this.state.touchable.touchState = States.NOT_RESPONDER;\n    this.state.touchable.responderID = dispatchID;\n    this._receiveSignal(Signals.RESPONDER_GRANT, e);\n    let delayMS =\n      this.touchableGetHighlightDelayMS !== undefined\n        ? Math.max(this.touchableGetHighlightDelayMS(), 0)\n        : HIGHLIGHT_DELAY_MS;\n    delayMS = isNaN(delayMS) ? HIGHLIGHT_DELAY_MS : delayMS;\n    if (delayMS !== 0) {\n      this.touchableDelayTimeout = setTimeout(\n        this._handleDelay.bind(this, e),\n        delayMS,\n      );\n    } else {\n      this._handleDelay(e);\n    }\n\n    let longDelayMS =\n      this.touchableGetLongPressDelayMS !== undefined\n        ? Math.max(this.touchableGetLongPressDelayMS(), 10)\n        : LONG_PRESS_DELAY_MS;\n    longDelayMS = isNaN(longDelayMS) ? LONG_PRESS_DELAY_MS : longDelayMS;\n    this.longPressDelayTimeout = setTimeout(\n      this._handleLongDelay.bind(this, e),\n      longDelayMS + delayMS,\n    );\n  },\n\n  /**\n   * Place as callback for a DOM element's `onResponderRelease` event.\n   */\n  /* $FlowFixMe[missing-this-annot] The 'this' type annotation(s) required by\n   * Flow's LTI update could not be added via codemod */\n  touchableHandleResponderRelease: function (e: PressEvent) {\n    this.pressInLocation = null;\n    this._receiveSignal(Signals.RESPONDER_RELEASE, e);\n  },\n\n  /**\n   * Place as callback for a DOM element's `onResponderTerminate` event.\n   */\n  /* $FlowFixMe[missing-this-annot] The 'this' type annotation(s) required by\n   * Flow's LTI update could not be added via codemod */\n  touchableHandleResponderTerminate: function (e: PressEvent) {\n    this.pressInLocation = null;\n    this._receiveSignal(Signals.RESPONDER_TERMINATED, e);\n  },\n\n  /**\n   * Place as callback for a DOM element's `onResponderMove` event.\n   */\n  /* $FlowFixMe[missing-this-annot] The 'this' type annotation(s) required by\n   * Flow's LTI update could not be added via codemod */\n  touchableHandleResponderMove: function (e: PressEvent) {\n    // Measurement may not have returned yet.\n    if (!this.state.touchable.positionOnActivate) {\n      return;\n    }\n\n    const positionOnActivate = this.state.touchable.positionOnActivate;\n    const dimensionsOnActivate = this.state.touchable.dimensionsOnActivate;\n    const pressRectOffset = this.touchableGetPressRectOffset\n      ? this.touchableGetPressRectOffset()\n      : {\n          left: PRESS_EXPAND_PX,\n          right: PRESS_EXPAND_PX,\n          top: PRESS_EXPAND_PX,\n          bottom: PRESS_EXPAND_PX,\n        };\n\n    let pressExpandLeft = pressRectOffset.left;\n    let pressExpandTop = pressRectOffset.top;\n    let pressExpandRight = pressRectOffset.right;\n    let pressExpandBottom = pressRectOffset.bottom;\n\n    const hitSlop = this.touchableGetHitSlop\n      ? this.touchableGetHitSlop()\n      : null;\n\n    if (hitSlop) {\n      pressExpandLeft += hitSlop.left || 0;\n      pressExpandTop += hitSlop.top || 0;\n      pressExpandRight += hitSlop.right || 0;\n      pressExpandBottom += hitSlop.bottom || 0;\n    }\n\n    const touch = extractSingleTouch(e.nativeEvent);\n    const pageX = touch && touch.pageX;\n    const pageY = touch && touch.pageY;\n\n    if (this.pressInLocation) {\n      const movedDistance = this._getDistanceBetweenPoints(\n        pageX,\n        pageY,\n        this.pressInLocation.pageX,\n        this.pressInLocation.pageY,\n      );\n      if (movedDistance > LONG_PRESS_ALLOWED_MOVEMENT) {\n        this._cancelLongPressDelayTimeout();\n      }\n    }\n\n    const isTouchWithinActive =\n      pageX > positionOnActivate.left - pressExpandLeft &&\n      pageY > positionOnActivate.top - pressExpandTop &&\n      pageX <\n        positionOnActivate.left +\n          dimensionsOnActivate.width +\n          pressExpandRight &&\n      pageY <\n        positionOnActivate.top +\n          dimensionsOnActivate.height +\n          pressExpandBottom;\n    if (isTouchWithinActive) {\n      const prevState = this.state.touchable.touchState;\n      this._receiveSignal(Signals.ENTER_PRESS_RECT, e);\n      const curState = this.state.touchable.touchState;\n      if (\n        curState === States.RESPONDER_INACTIVE_PRESS_IN &&\n        prevState !== States.RESPONDER_INACTIVE_PRESS_IN\n      ) {\n        // fix for t7967420\n        this._cancelLongPressDelayTimeout();\n      }\n    } else {\n      this._cancelLongPressDelayTimeout();\n      this._receiveSignal(Signals.LEAVE_PRESS_RECT, e);\n    }\n  },\n\n  /**\n   * Invoked when the item receives focus. Mixers might override this to\n   * visually distinguish the `VisualRect` so that the user knows that it\n   * currently has the focus. Most platforms only support a single element being\n   * focused at a time, in which case there may have been a previously focused\n   * element that was blurred just prior to this. This can be overridden when\n   * using `Touchable.Mixin.withoutDefaultFocusAndBlur`.\n   */\n  /* $FlowFixMe[missing-this-annot] The 'this' type annotation(s) required by\n   * Flow's LTI update could not be added via codemod */\n  touchableHandleFocus: function (e: Event) {\n    this.props.onFocus && this.props.onFocus(e);\n  },\n\n  /**\n   * Invoked when the item loses focus. Mixers might override this to\n   * visually distinguish the `VisualRect` so that the user knows that it\n   * no longer has focus. Most platforms only support a single element being\n   * focused at a time, in which case the focus may have moved to another.\n   * This can be overridden when using\n   * `Touchable.Mixin.withoutDefaultFocusAndBlur`.\n   */\n  /* $FlowFixMe[missing-this-annot] The 'this' type annotation(s) required by\n   * Flow's LTI update could not be added via codemod */\n  touchableHandleBlur: function (e: Event) {\n    this.props.onBlur && this.props.onBlur(e);\n  },\n\n  // ==== Abstract Application Callbacks ====\n\n  /**\n   * Invoked when the item should be highlighted. Mixers should implement this\n   * to visually distinguish the `VisualRect` so that the user knows that\n   * releasing a touch will result in a \"selection\" (analog to click).\n   *\n   * @abstract\n   * touchableHandleActivePressIn: function,\n   */\n\n  /**\n   * Invoked when the item is \"active\" (in that it is still eligible to become\n   * a \"select\") but the touch has left the `PressRect`. Usually the mixer will\n   * want to unhighlight the `VisualRect`. If the user (while pressing) moves\n   * back into the `PressRect` `touchableHandleActivePressIn` will be invoked\n   * again and the mixer should probably highlight the `VisualRect` again. This\n   * event will not fire on an `touchEnd/mouseUp` event, only move events while\n   * the user is depressing the mouse/touch.\n   *\n   * @abstract\n   * touchableHandleActivePressOut: function\n   */\n\n  /**\n   * Invoked when the item is \"selected\" - meaning the interaction ended by\n   * letting up while the item was either in the state\n   * `RESPONDER_ACTIVE_PRESS_IN` or `RESPONDER_INACTIVE_PRESS_IN`.\n   *\n   * @abstract\n   * touchableHandlePress: function\n   */\n\n  /**\n   * Invoked when the item is long pressed - meaning the interaction ended by\n   * letting up while the item was in `RESPONDER_ACTIVE_LONG_PRESS_IN`. If\n   * `touchableHandleLongPress` is *not* provided, `touchableHandlePress` will\n   * be called as it normally is. If `touchableHandleLongPress` is provided, by\n   * default any `touchableHandlePress` callback will not be invoked. To\n   * override this default behavior, override `touchableLongPressCancelsPress`\n   * to return false. As a result, `touchableHandlePress` will be called when\n   * lifting up, even if `touchableHandleLongPress` has also been called.\n   *\n   * @abstract\n   * touchableHandleLongPress: function\n   */\n\n  /**\n   * Returns the number of millis to wait before triggering a highlight.\n   *\n   * @abstract\n   * touchableGetHighlightDelayMS: function\n   */\n\n  /**\n   * Returns the amount to extend the `HitRect` into the `PressRect`. Positive\n   * numbers mean the size expands outwards.\n   *\n   * @abstract\n   * touchableGetPressRectOffset: function\n   */\n\n  // ==== Internal Logic ====\n\n  /**\n   * Measures the `HitRect` node on activation. The Bounding rectangle is with\n   * respect to viewport - not page, so adding the `pageXOffset/pageYOffset`\n   * should result in points that are in the same coordinate system as an\n   * event's `globalX/globalY` data values.\n   *\n   * - Consider caching this for the lifetime of the component, or possibly\n   *   being able to share this cache between any `ScrollMap` view.\n   *\n   * @sideeffects\n   * @private\n   */\n  /* $FlowFixMe[missing-this-annot] The 'this' type annotation(s) required by\n   * Flow's LTI update could not be added via codemod */\n  _remeasureMetricsOnActivation: function () {\n    const responderID = this.state.touchable.responderID;\n    if (responderID == null) {\n      return;\n    }\n\n    if (typeof responderID === 'number') {\n      UIManager.measure(responderID, this._handleQueryLayout);\n    } else {\n      responderID.measure(this._handleQueryLayout);\n    }\n  },\n\n  /* $FlowFixMe[missing-this-annot] The 'this' type annotation(s) required by\n   * Flow's LTI update could not be added via codemod */\n  _handleQueryLayout: function (\n    l: number,\n    t: number,\n    w: number,\n    h: number,\n    globalX: number,\n    globalY: number,\n  ) {\n    //don't do anything UIManager failed to measure node\n    if (!l && !t && !w && !h && !globalX && !globalY) {\n      return;\n    }\n    this.state.touchable.positionOnActivate &&\n      Position.release(this.state.touchable.positionOnActivate);\n    this.state.touchable.dimensionsOnActivate &&\n      BoundingDimensions.release(this.state.touchable.dimensionsOnActivate);\n    this.state.touchable.positionOnActivate = Position.getPooled(\n      globalX,\n      globalY,\n    );\n    this.state.touchable.dimensionsOnActivate = BoundingDimensions.getPooled(\n      w,\n      h,\n    );\n  },\n\n  /* $FlowFixMe[missing-this-annot] The 'this' type annotation(s) required by\n   * Flow's LTI update could not be added via codemod */\n  _handleDelay: function (e: PressEvent) {\n    this.touchableDelayTimeout = null;\n    this._receiveSignal(Signals.DELAY, e);\n  },\n\n  /* $FlowFixMe[missing-this-annot] The 'this' type annotation(s) required by\n   * Flow's LTI update could not be added via codemod */\n  _handleLongDelay: function (e: PressEvent) {\n    this.longPressDelayTimeout = null;\n    const curState = this.state.touchable.touchState;\n    if (\n      curState === States.RESPONDER_ACTIVE_PRESS_IN ||\n      curState === States.RESPONDER_ACTIVE_LONG_PRESS_IN\n    ) {\n      this._receiveSignal(Signals.LONG_PRESS_DETECTED, e);\n    }\n  },\n\n  /**\n   * Receives a state machine signal, performs side effects of the transition\n   * and stores the new state. Validates the transition as well.\n   *\n   * @param {Signals} signal State machine signal.\n   * @throws Error if invalid state transition or unrecognized signal.\n   * @sideeffects\n   */\n  /* $FlowFixMe[missing-this-annot] The 'this' type annotation(s) required by\n   * Flow's LTI update could not be added via codemod */\n  _receiveSignal: function (signal: Signal, e: PressEvent) {\n    const responderID = this.state.touchable.responderID;\n    const curState = this.state.touchable.touchState;\n    const nextState = Transitions[curState] && Transitions[curState][signal];\n    if (!responderID && signal === Signals.RESPONDER_RELEASE) {\n      return;\n    }\n    if (!nextState) {\n      throw new Error(\n        'Unrecognized signal `' +\n          signal +\n          '` or state `' +\n          curState +\n          '` for Touchable responder `' +\n          typeof this.state.touchable.responderID ===\n        'number'\n          ? this.state.touchable.responderID\n          : 'host component' + '`',\n      );\n    }\n    if (nextState === States.ERROR) {\n      throw new Error(\n        'Touchable cannot transition from `' +\n          curState +\n          '` to `' +\n          signal +\n          '` for responder `' +\n          typeof this.state.touchable.responderID ===\n        'number'\n          ? this.state.touchable.responderID\n          : '<<host component>>' + '`',\n      );\n    }\n    if (curState !== nextState) {\n      this._performSideEffectsForTransition(curState, nextState, signal, e);\n      this.state.touchable.touchState = nextState;\n    }\n  },\n\n  /* $FlowFixMe[missing-this-annot] The 'this' type annotation(s) required by\n   * Flow's LTI update could not be added via codemod */\n  _cancelLongPressDelayTimeout: function () {\n    this.longPressDelayTimeout && clearTimeout(this.longPressDelayTimeout);\n    this.longPressDelayTimeout = null;\n  },\n\n  _isHighlight: function (state: State): boolean {\n    return (\n      state === States.RESPONDER_ACTIVE_PRESS_IN ||\n      state === States.RESPONDER_ACTIVE_LONG_PRESS_IN\n    );\n  },\n\n  /* $FlowFixMe[missing-this-annot] The 'this' type annotation(s) required by\n   * Flow's LTI update could not be added via codemod */\n  _savePressInLocation: function (e: PressEvent) {\n    const touch = extractSingleTouch(e.nativeEvent);\n    const pageX = touch && touch.pageX;\n    const pageY = touch && touch.pageY;\n    const locationX = touch && touch.locationX;\n    const locationY = touch && touch.locationY;\n    this.pressInLocation = {pageX, pageY, locationX, locationY};\n  },\n\n  _getDistanceBetweenPoints: function (\n    aX: number,\n    aY: number,\n    bX: number,\n    bY: number,\n  ): number {\n    const deltaX = aX - bX;\n    const deltaY = aY - bY;\n    return Math.sqrt(deltaX * deltaX + deltaY * deltaY);\n  },\n\n  /**\n   * Will perform a transition between touchable states, and identify any\n   * highlighting or unhighlighting that must be performed for this particular\n   * transition.\n   *\n   * @param {States} curState Current Touchable state.\n   * @param {States} nextState Next Touchable state.\n   * @param {Signal} signal Signal that triggered the transition.\n   * @param {Event} e Native event.\n   * @sideeffects\n   */\n  /* $FlowFixMe[missing-this-annot] The 'this' type annotation(s) required by\n   * Flow's LTI update could not be added via codemod */\n  _performSideEffectsForTransition: function (\n    curState: State,\n    nextState: State,\n    signal: Signal,\n    e: PressEvent,\n  ) {\n    const curIsHighlight = this._isHighlight(curState);\n    const newIsHighlight = this._isHighlight(nextState);\n\n    const isFinalSignal =\n      signal === Signals.RESPONDER_TERMINATED ||\n      signal === Signals.RESPONDER_RELEASE;\n\n    if (isFinalSignal) {\n      this._cancelLongPressDelayTimeout();\n    }\n\n    const isInitialTransition =\n      curState === States.NOT_RESPONDER &&\n      nextState === States.RESPONDER_INACTIVE_PRESS_IN;\n\n    const isActiveTransition = !IsActive[curState] && IsActive[nextState];\n    if (isInitialTransition || isActiveTransition) {\n      this._remeasureMetricsOnActivation();\n    }\n\n    if (IsPressingIn[curState] && signal === Signals.LONG_PRESS_DETECTED) {\n      this.touchableHandleLongPress && this.touchableHandleLongPress(e);\n    }\n\n    if (newIsHighlight && !curIsHighlight) {\n      this._startHighlight(e);\n    } else if (!newIsHighlight && curIsHighlight) {\n      this._endHighlight(e);\n    }\n\n    if (IsPressingIn[curState] && signal === Signals.RESPONDER_RELEASE) {\n      const hasLongPressHandler = !!this.props.onLongPress;\n      const pressIsLongButStillCallOnPress =\n        IsLongPressingIn[curState] && // We *are* long pressing.. // But either has no long handler\n        (!hasLongPressHandler || !this.touchableLongPressCancelsPress()); // or we're told to ignore it.\n\n      const shouldInvokePress =\n        !IsLongPressingIn[curState] || pressIsLongButStillCallOnPress;\n      if (shouldInvokePress && this.touchableHandlePress) {\n        if (!newIsHighlight && !curIsHighlight) {\n          // we never highlighted because of delay, but we should highlight now\n          this._startHighlight(e);\n          this._endHighlight(e);\n        }\n        if (Platform.OS === 'android' && !this.props.touchSoundDisabled) {\n          SoundManager.playTouchSound();\n        }\n        this.touchableHandlePress(e);\n      }\n    }\n\n    this.touchableDelayTimeout && clearTimeout(this.touchableDelayTimeout);\n    this.touchableDelayTimeout = null;\n  },\n\n  /* $FlowFixMe[missing-this-annot] The 'this' type annotation(s) required by\n   * Flow's LTI update could not be added via codemod */\n  _startHighlight: function (e: PressEvent) {\n    this._savePressInLocation(e);\n    this.touchableHandleActivePressIn && this.touchableHandleActivePressIn(e);\n  },\n\n  /* $FlowFixMe[missing-this-annot] The 'this' type annotation(s) required by\n   * Flow's LTI update could not be added via codemod */\n  _endHighlight: function (e: PressEvent) {\n    if (this.touchableHandleActivePressOut) {\n      if (\n        this.touchableGetPressOutDelayMS &&\n        this.touchableGetPressOutDelayMS()\n      ) {\n        this.pressOutDelayTimeout = setTimeout(() => {\n          this.touchableHandleActivePressOut(e);\n        }, this.touchableGetPressOutDelayMS());\n      } else {\n        this.touchableHandleActivePressOut(e);\n      }\n    }\n  },\n\n  withoutDefaultFocusAndBlur: ({}: {...}),\n};\n\n/**\n * Provide an optional version of the mixin where `touchableHandleFocus` and\n * `touchableHandleBlur` can be overridden. This allows appropriate defaults to\n * be set on TV platforms, without breaking existing implementations of\n * `Touchable`.\n */\nconst {\n  touchableHandleFocus,\n  touchableHandleBlur,\n  ...TouchableMixinWithoutDefaultFocusAndBlur\n} = TouchableMixin;\nTouchableMixin.withoutDefaultFocusAndBlur =\n  TouchableMixinWithoutDefaultFocusAndBlur;\n\nconst Touchable: TouchableType = {\n  Mixin: TouchableMixin,\n  /**\n   * Renders a debugging overlay to visualize touch target with hitSlop (might not work on Android).\n   */\n  renderDebugView: ({\n    color,\n    hitSlop,\n  }: {\n    color: ColorValue,\n    hitSlop: EdgeInsetsProp,\n    ...\n  }): null | React.Node => {\n    if (__DEV__) {\n      return <PressabilityDebugView color={color} hitSlop={hitSlop} />;\n    }\n    return null;\n  },\n};\n\nmodule.exports = Touchable;\n","/**\n * Copyright (c) Meta Platforms, Inc. and affiliates.\n *\n * This source code is licensed under the MIT license found in the\n * LICENSE file in the root directory of this source tree.\n *\n * @flow strict-local\n * @format\n */\n\nimport type {PressEvent} from '../../Types/CoreEventTypes';\nimport typeof TouchableWithoutFeedback from './TouchableWithoutFeedback';\n\nimport View from '../../Components/View/View';\nimport Pressability, {\n  type PressabilityConfig,\n} from '../../Pressability/Pressability';\nimport {PressabilityDebugView} from '../../Pressability/PressabilityDebug';\nimport {findHostInstance_DEPRECATED} from '../../ReactNative/RendererProxy';\nimport processColor from '../../StyleSheet/processColor';\nimport Platform from '../../Utilities/Platform';\nimport {Commands} from '../View/ViewNativeComponent';\nimport invariant from 'invariant';\nimport * as React from 'react';\n\ntype Props = $ReadOnly<{|\n  ...React.ElementConfig<TouchableWithoutFeedback>,\n\n  /**\n   * Determines the type of background drawable that's going to be used to\n   * display feedback. It takes an object with `type` property and extra data\n   * depending on the `type`. It's recommended to use one of the static\n   * methods to generate that dictionary.\n   */\n  background?: ?(\n    | $ReadOnly<{|\n        type: 'ThemeAttrAndroid',\n        attribute:\n          | 'selectableItemBackground'\n          | 'selectableItemBackgroundBorderless',\n        rippleRadius: ?number,\n      |}>\n    | $ReadOnly<{|\n        type: 'RippleAndroid',\n        color: ?number,\n        borderless: boolean,\n        rippleRadius: ?number,\n      |}>\n  ),\n\n  /**\n   * TV preferred focus (see documentation for the View component).\n   */\n  hasTVPreferredFocus?: ?boolean,\n\n  /**\n   * TV next focus down (see documentation for the View component).\n   */\n  nextFocusDown?: ?number,\n\n  /**\n   * TV next focus forward (see documentation for the View component).\n   */\n  nextFocusForward?: ?number,\n\n  /**\n   * TV next focus left (see documentation for the View component).\n   */\n  nextFocusLeft?: ?number,\n\n  /**\n   * TV next focus right (see documentation for the View component).\n   */\n  nextFocusRight?: ?number,\n\n  /**\n   * TV next focus up (see documentation for the View component).\n   */\n  nextFocusUp?: ?number,\n\n  /**\n   * Set to true to add the ripple effect to the foreground of the view, instead\n   * of the background. This is useful if one of your child views has a\n   * background of its own, or you're e.g. displaying images, and you don't want\n   * the ripple to be covered by them.\n   *\n   * Check TouchableNativeFeedback.canUseNativeForeground() first, as this is\n   * only available on Android 6.0 and above. If you try to use this on older\n   * versions, this will fallback to background.\n   */\n  useForeground?: ?boolean,\n|}>;\n\ntype State = $ReadOnly<{|\n  pressability: Pressability,\n|}>;\n\nclass TouchableNativeFeedback extends React.Component<Props, State> {\n  /**\n   * Creates a value for the `background` prop that uses the Android theme's\n   * default background for selectable elements.\n   */\n  static SelectableBackground: (rippleRadius: ?number) => $ReadOnly<{|\n    attribute: 'selectableItemBackground',\n    type: 'ThemeAttrAndroid',\n    rippleRadius: ?number,\n  |}> = (rippleRadius: ?number) => ({\n    type: 'ThemeAttrAndroid',\n    attribute: 'selectableItemBackground',\n    rippleRadius,\n  });\n\n  /**\n   * Creates a value for the `background` prop that uses the Android theme's\n   * default background for borderless selectable elements. Requires API 21+.\n   */\n  static SelectableBackgroundBorderless: (rippleRadius: ?number) => $ReadOnly<{|\n    attribute: 'selectableItemBackgroundBorderless',\n    type: 'ThemeAttrAndroid',\n    rippleRadius: ?number,\n  |}> = (rippleRadius: ?number) => ({\n    type: 'ThemeAttrAndroid',\n    attribute: 'selectableItemBackgroundBorderless',\n    rippleRadius,\n  });\n\n  /**\n   * Creates a value for the `background` prop that uses the Android ripple with\n   * the supplied color. If `borderless` is true, the ripple will render outside\n   * of the view bounds. Requires API 21+.\n   */\n  static Ripple: (\n    color: string,\n    borderless: boolean,\n    rippleRadius: ?number,\n  ) => $ReadOnly<{|\n    borderless: boolean,\n    color: ?number,\n    rippleRadius: ?number,\n    type: 'RippleAndroid',\n  |}> = (color: string, borderless: boolean, rippleRadius: ?number) => {\n    const processedColor = processColor(color);\n    invariant(\n      processedColor == null || typeof processedColor === 'number',\n      'Unexpected color given for Ripple color',\n    );\n    return {\n      type: 'RippleAndroid',\n      color: processedColor,\n      borderless,\n      rippleRadius,\n    };\n  };\n\n  /**\n   * Whether `useForeground` is supported.\n   */\n  static canUseNativeForeground: () => boolean = () =>\n    Platform.OS === 'android' && Platform.Version >= 23;\n\n  state: State = {\n    pressability: new Pressability(this._createPressabilityConfig()),\n  };\n\n  _createPressabilityConfig(): PressabilityConfig {\n    const accessibilityStateDisabled =\n      this.props['aria-disabled'] ?? this.props.accessibilityState?.disabled;\n    return {\n      cancelable: !this.props.rejectResponderTermination,\n      disabled:\n        this.props.disabled != null\n          ? this.props.disabled\n          : accessibilityStateDisabled,\n      hitSlop: this.props.hitSlop,\n      delayLongPress: this.props.delayLongPress,\n      delayPressIn: this.props.delayPressIn,\n      delayPressOut: this.props.delayPressOut,\n      minPressDuration: 0,\n      pressRectOffset: this.props.pressRetentionOffset,\n      android_disableSound: this.props.touchSoundDisabled,\n      onLongPress: this.props.onLongPress,\n      onPress: this.props.onPress,\n      onPressIn: event => {\n        if (Platform.OS === 'android') {\n          this._dispatchHotspotUpdate(event);\n          this._dispatchPressedStateChange(true);\n        }\n        if (this.props.onPressIn != null) {\n          this.props.onPressIn(event);\n        }\n      },\n      onPressMove: event => {\n        if (Platform.OS === 'android') {\n          this._dispatchHotspotUpdate(event);\n        }\n      },\n      onPressOut: event => {\n        if (Platform.OS === 'android') {\n          this._dispatchPressedStateChange(false);\n        }\n        if (this.props.onPressOut != null) {\n          this.props.onPressOut(event);\n        }\n      },\n    };\n  }\n\n  _dispatchPressedStateChange(pressed: boolean): void {\n    if (Platform.OS === 'android') {\n      const hostComponentRef = findHostInstance_DEPRECATED(this);\n      if (hostComponentRef == null) {\n        console.warn(\n          'Touchable: Unable to find HostComponent instance. ' +\n            'Has your Touchable component been unmounted?',\n        );\n      } else {\n        Commands.setPressed(hostComponentRef, pressed);\n      }\n    }\n  }\n\n  _dispatchHotspotUpdate(event: PressEvent): void {\n    if (Platform.OS === 'android') {\n      const {locationX, locationY} = event.nativeEvent;\n      const hostComponentRef = findHostInstance_DEPRECATED(this);\n      if (hostComponentRef == null) {\n        console.warn(\n          'Touchable: Unable to find HostComponent instance. ' +\n            'Has your Touchable component been unmounted?',\n        );\n      } else {\n        Commands.hotspotUpdate(\n          hostComponentRef,\n          locationX ?? 0,\n          locationY ?? 0,\n        );\n      }\n    }\n  }\n\n  render(): React.Node {\n    const element = React.Children.only(this.props.children);\n    const children = [element.props.children];\n    if (__DEV__) {\n      if (element.type === View) {\n        children.push(\n          <PressabilityDebugView color=\"brown\" hitSlop={this.props.hitSlop} />,\n        );\n      }\n    }\n\n    // BACKWARD-COMPATIBILITY: Focus and blur events were never supported before\n    // adopting `Pressability`, so preserve that behavior.\n    const {onBlur, onFocus, ...eventHandlersWithoutBlurAndFocus} =\n      this.state.pressability.getEventHandlers();\n\n    let _accessibilityState = {\n      busy: this.props['aria-busy'] ?? this.props.accessibilityState?.busy,\n      checked:\n        this.props['aria-checked'] ?? this.props.accessibilityState?.checked,\n      disabled:\n        this.props['aria-disabled'] ?? this.props.accessibilityState?.disabled,\n      expanded:\n        this.props['aria-expanded'] ?? this.props.accessibilityState?.expanded,\n      selected:\n        this.props['aria-selected'] ?? this.props.accessibilityState?.selected,\n    };\n\n    _accessibilityState =\n      this.props.disabled != null\n        ? {\n            ..._accessibilityState,\n            disabled: this.props.disabled,\n          }\n        : _accessibilityState;\n\n    const accessibilityValue = {\n      max: this.props['aria-valuemax'] ?? this.props.accessibilityValue?.max,\n      min: this.props['aria-valuemin'] ?? this.props.accessibilityValue?.min,\n      now: this.props['aria-valuenow'] ?? this.props.accessibilityValue?.now,\n      text: this.props['aria-valuetext'] ?? this.props.accessibilityValue?.text,\n    };\n\n    const accessibilityLiveRegion =\n      this.props['aria-live'] === 'off'\n        ? 'none'\n        : this.props['aria-live'] ?? this.props.accessibilityLiveRegion;\n\n    const accessibilityLabel =\n      this.props['aria-label'] ?? this.props.accessibilityLabel;\n    return React.cloneElement(\n      element,\n      {\n        ...eventHandlersWithoutBlurAndFocus,\n        ...getBackgroundProp(\n          this.props.background === undefined\n            ? TouchableNativeFeedback.SelectableBackground()\n            : this.props.background,\n          this.props.useForeground === true,\n        ),\n        accessible: this.props.accessible !== false,\n        accessibilityHint: this.props.accessibilityHint,\n        accessibilityLanguage: this.props.accessibilityLanguage,\n        accessibilityLabel: accessibilityLabel,\n        accessibilityRole: this.props.accessibilityRole,\n        accessibilityState: _accessibilityState,\n        accessibilityActions: this.props.accessibilityActions,\n        onAccessibilityAction: this.props.onAccessibilityAction,\n        accessibilityValue: accessibilityValue,\n        importantForAccessibility:\n          this.props['aria-hidden'] === true\n            ? 'no-hide-descendants'\n            : this.props.importantForAccessibility,\n        accessibilityViewIsModal:\n          this.props['aria-modal'] ?? this.props.accessibilityViewIsModal,\n        accessibilityLiveRegion: accessibilityLiveRegion,\n        accessibilityElementsHidden:\n          this.props['aria-hidden'] ?? this.props.accessibilityElementsHidden,\n        hasTVPreferredFocus: this.props.hasTVPreferredFocus,\n        hitSlop: this.props.hitSlop,\n        focusable:\n          this.props.focusable !== false &&\n          this.props.onPress !== undefined &&\n          !this.props.disabled,\n        nativeID: this.props.nativeID,\n        nextFocusDown: this.props.nextFocusDown,\n        nextFocusForward: this.props.nextFocusForward,\n        nextFocusLeft: this.props.nextFocusLeft,\n        nextFocusRight: this.props.nextFocusRight,\n        nextFocusUp: this.props.nextFocusUp,\n        onLayout: this.props.onLayout,\n        testID: this.props.testID,\n      },\n      ...children,\n    );\n  }\n\n  componentDidUpdate(prevProps: Props, prevState: State) {\n    this.state.pressability.configure(this._createPressabilityConfig());\n  }\n\n  componentWillUnmount(): void {\n    this.state.pressability.reset();\n  }\n}\n\nconst getBackgroundProp =\n  Platform.OS === 'android'\n    ? /* $FlowFixMe[missing-local-annot] The type annotation(s) required by\n       * Flow's LTI update could not be added via codemod */\n      (background, useForeground: boolean) =>\n        useForeground && TouchableNativeFeedback.canUseNativeForeground()\n          ? {nativeForegroundAndroid: background}\n          : {nativeBackgroundAndroid: background}\n    : /* $FlowFixMe[missing-local-annot] The type annotation(s) required by\n       * Flow's LTI update could not be added via codemod */\n      (background, useForeground: boolean) => null;\n\nTouchableNativeFeedback.displayName = 'TouchableNativeFeedback';\n\nmodule.exports = TouchableNativeFeedback;\n","/**\n * Copyright (c) Meta Platforms, Inc. and affiliates.\n *\n * This source code is licensed under the MIT license found in the\n * LICENSE file in the root directory of this source tree.\n *\n * @flow strict-local\n * @format\n */\n\nimport type {ViewStyleProp} from '../../StyleSheet/StyleSheet';\nimport typeof TouchableWithoutFeedback from './TouchableWithoutFeedback';\n\nimport Animated from '../../Animated/Animated';\nimport Easing from '../../Animated/Easing';\nimport Pressability, {\n  type PressabilityConfig,\n} from '../../Pressability/Pressability';\nimport {PressabilityDebugView} from '../../Pressability/PressabilityDebug';\nimport flattenStyle from '../../StyleSheet/flattenStyle';\nimport Platform from '../../Utilities/Platform';\nimport * as React from 'react';\n\ntype TVProps = $ReadOnly<{|\n  hasTVPreferredFocus?: ?boolean,\n  nextFocusDown?: ?number,\n  nextFocusForward?: ?number,\n  nextFocusLeft?: ?number,\n  nextFocusRight?: ?number,\n  nextFocusUp?: ?number,\n|}>;\n\ntype Props = $ReadOnly<{|\n  ...React.ElementConfig<TouchableWithoutFeedback>,\n  ...TVProps,\n\n  activeOpacity?: ?number,\n  style?: ?ViewStyleProp,\n\n  hostRef?: ?React.Ref<typeof Animated.View>,\n|}>;\n\ntype State = $ReadOnly<{|\n  anim: Animated.Value,\n  pressability: Pressability,\n|}>;\n\n/**\n * A wrapper for making views respond properly to touches.\n * On press down, the opacity of the wrapped view is decreased, dimming it.\n *\n * Opacity is controlled by wrapping the children in an Animated.View, which is\n * added to the view hierarchy.  Be aware that this can affect layout.\n *\n * Example:\n *\n * ```\n * renderButton: function() {\n *   return (\n *     <TouchableOpacity onPress={this._onPressButton}>\n *       <Image\n *         style={styles.button}\n *         source={require('./myButton.png')}\n *       />\n *     </TouchableOpacity>\n *   );\n * },\n * ```\n * ### Example\n *\n * ```ReactNativeWebPlayer\n * import React, { Component } from 'react'\n * import {\n *   AppRegistry,\n *   StyleSheet,\n *   TouchableOpacity,\n *   Text,\n *   View,\n * } from 'react-native'\n *\n * class App extends Component {\n *   state = { count: 0 }\n *\n *   onPress = () => {\n *     this.setState(state => ({\n *       count: state.count + 1\n *     }));\n *   };\n *\n *  render() {\n *    return (\n *      <View style={styles.container}>\n *        <TouchableOpacity\n *          style={styles.button}\n *          onPress={this.onPress}>\n *          <Text> Touch Here </Text>\n *        </TouchableOpacity>\n *        <View style={[styles.countContainer]}>\n *          <Text style={[styles.countText]}>\n *             { this.state.count !== 0 ? this.state.count: null}\n *           </Text>\n *         </View>\n *       </View>\n *     )\n *   }\n * }\n *\n * const styles = StyleSheet.create({\n *   container: {\n *     flex: 1,\n *     justifyContent: 'center',\n *     paddingHorizontal: 10\n *   },\n *   button: {\n *     alignItems: 'center',\n *     backgroundColor: '#DDDDDD',\n *     padding: 10\n *   },\n *   countContainer: {\n *     alignItems: 'center',\n *     padding: 10\n *   },\n *   countText: {\n *     color: '#FF00FF'\n *   }\n * })\n *\n * AppRegistry.registerComponent('App', () => App)\n * ```\n *\n */\nclass TouchableOpacity extends React.Component<Props, State> {\n  state: State = {\n    anim: new Animated.Value(this._getChildStyleOpacityWithDefault()),\n    pressability: new Pressability(this._createPressabilityConfig()),\n  };\n\n  _createPressabilityConfig(): PressabilityConfig {\n    return {\n      cancelable: !this.props.rejectResponderTermination,\n      disabled:\n        this.props.disabled ??\n        this.props['aria-disabled'] ??\n        this.props.accessibilityState?.disabled,\n      hitSlop: this.props.hitSlop,\n      delayLongPress: this.props.delayLongPress,\n      delayPressIn: this.props.delayPressIn,\n      delayPressOut: this.props.delayPressOut,\n      minPressDuration: 0,\n      pressRectOffset: this.props.pressRetentionOffset,\n      onBlur: event => {\n        if (Platform.isTV) {\n          this._opacityInactive(250);\n        }\n        if (this.props.onBlur != null) {\n          this.props.onBlur(event);\n        }\n      },\n      onFocus: event => {\n        if (Platform.isTV) {\n          this._opacityActive(150);\n        }\n        if (this.props.onFocus != null) {\n          this.props.onFocus(event);\n        }\n      },\n      onLongPress: this.props.onLongPress,\n      onPress: this.props.onPress,\n      onPressIn: event => {\n        this._opacityActive(\n          event.dispatchConfig.registrationName === 'onResponderGrant'\n            ? 0\n            : 150,\n        );\n        if (this.props.onPressIn != null) {\n          this.props.onPressIn(event);\n        }\n      },\n      onPressOut: event => {\n        this._opacityInactive(250);\n        if (this.props.onPressOut != null) {\n          this.props.onPressOut(event);\n        }\n      },\n    };\n  }\n\n  /**\n   * Animate the touchable to a new opacity.\n   */\n  _setOpacityTo(toValue: number, duration: number): void {\n    Animated.timing(this.state.anim, {\n      toValue,\n      duration,\n      easing: Easing.inOut(Easing.quad),\n      useNativeDriver: true,\n    }).start();\n  }\n\n  _opacityActive(duration: number): void {\n    this._setOpacityTo(this.props.activeOpacity ?? 0.2, duration);\n  }\n\n  _opacityInactive(duration: number): void {\n    this._setOpacityTo(this._getChildStyleOpacityWithDefault(), duration);\n  }\n\n  _getChildStyleOpacityWithDefault(): number {\n    const opacity = flattenStyle(this.props.style)?.opacity;\n    return typeof opacity === 'number' ? opacity : 1;\n  }\n\n  render(): React.Node {\n    // BACKWARD-COMPATIBILITY: Focus and blur events were never supported before\n    // adopting `Pressability`, so preserve that behavior.\n    const {onBlur, onFocus, ...eventHandlersWithoutBlurAndFocus} =\n      this.state.pressability.getEventHandlers();\n\n    let _accessibilityState = {\n      busy: this.props['aria-busy'] ?? this.props.accessibilityState?.busy,\n      checked:\n        this.props['aria-checked'] ?? this.props.accessibilityState?.checked,\n      disabled:\n        this.props['aria-disabled'] ?? this.props.accessibilityState?.disabled,\n      expanded:\n        this.props['aria-expanded'] ?? this.props.accessibilityState?.expanded,\n      selected:\n        this.props['aria-selected'] ?? this.props.accessibilityState?.selected,\n    };\n\n    _accessibilityState =\n      this.props.disabled != null\n        ? {\n            ..._accessibilityState,\n            disabled: this.props.disabled,\n          }\n        : _accessibilityState;\n\n    const accessibilityValue = {\n      max: this.props['aria-valuemax'] ?? this.props.accessibilityValue?.max,\n      min: this.props['aria-valuemin'] ?? this.props.accessibilityValue?.min,\n      now: this.props['aria-valuenow'] ?? this.props.accessibilityValue?.now,\n      text: this.props['aria-valuetext'] ?? this.props.accessibilityValue?.text,\n    };\n\n    const accessibilityLiveRegion =\n      this.props['aria-live'] === 'off'\n        ? 'none'\n        : this.props['aria-live'] ?? this.props.accessibilityLiveRegion;\n\n    const accessibilityLabel =\n      this.props['aria-label'] ?? this.props.accessibilityLabel;\n    return (\n      <Animated.View\n        accessible={this.props.accessible !== false}\n        accessibilityLabel={accessibilityLabel}\n        accessibilityHint={this.props.accessibilityHint}\n        accessibilityLanguage={this.props.accessibilityLanguage}\n        accessibilityRole={this.props.accessibilityRole}\n        accessibilityState={_accessibilityState}\n        accessibilityActions={this.props.accessibilityActions}\n        onAccessibilityAction={this.props.onAccessibilityAction}\n        accessibilityValue={accessibilityValue}\n        importantForAccessibility={\n          this.props['aria-hidden'] === true\n            ? 'no-hide-descendants'\n            : this.props.importantForAccessibility\n        }\n        accessibilityViewIsModal={\n          this.props['aria-modal'] ?? this.props.accessibilityViewIsModal\n        }\n        accessibilityLiveRegion={accessibilityLiveRegion}\n        accessibilityElementsHidden={\n          this.props['aria-hidden'] ?? this.props.accessibilityElementsHidden\n        }\n        style={[this.props.style, {opacity: this.state.anim}]}\n        nativeID={this.props.nativeID}\n        testID={this.props.testID}\n        onLayout={this.props.onLayout}\n        nextFocusDown={this.props.nextFocusDown}\n        nextFocusForward={this.props.nextFocusForward}\n        nextFocusLeft={this.props.nextFocusLeft}\n        nextFocusRight={this.props.nextFocusRight}\n        nextFocusUp={this.props.nextFocusUp}\n        hasTVPreferredFocus={this.props.hasTVPreferredFocus}\n        hitSlop={this.props.hitSlop}\n        focusable={\n          this.props.focusable !== false && this.props.onPress !== undefined\n        }\n        ref={this.props.hostRef}\n        {...eventHandlersWithoutBlurAndFocus}>\n        {this.props.children}\n        {__DEV__ ? (\n          <PressabilityDebugView color=\"cyan\" hitSlop={this.props.hitSlop} />\n        ) : null}\n      </Animated.View>\n    );\n  }\n\n  componentDidUpdate(prevProps: Props, prevState: State) {\n    this.state.pressability.configure(this._createPressabilityConfig());\n    if (\n      this.props.disabled !== prevProps.disabled ||\n      flattenStyle(prevProps.style)?.opacity !==\n        flattenStyle(this.props.style)?.opacity\n    ) {\n      this._opacityInactive(250);\n    }\n  }\n\n  componentWillUnmount(): void {\n    this.state.pressability.reset();\n  }\n}\n\nconst Touchable = (React.forwardRef((props, ref) => (\n  <TouchableOpacity {...props} hostRef={ref} />\n)): React.AbstractComponent<Props, React.ElementRef<typeof Animated.View>>);\n\nTouchable.displayName = 'TouchableOpacity';\n\nmodule.exports = Touchable;\n","/**\n * Copyright (c) Meta Platforms, Inc. and affiliates.\n *\n * This source code is licensed under the MIT license found in the\n * LICENSE file in the root directory of this source tree.\n *\n * @flow\n * @format\n */\n\n'use strict';\n\nimport type {ViewProps} from '../Components/View/ViewPropTypes';\nimport type {HostComponent} from '../Renderer/shims/ReactNativeTypes';\nimport type {ImageBackgroundProps} from './ImageProps';\n\nimport View from '../Components/View/View';\nimport flattenStyle from '../StyleSheet/flattenStyle';\nimport StyleSheet from '../StyleSheet/StyleSheet';\nimport Image from './Image';\nimport * as React from 'react';\n\n/**\n * Very simple drop-in replacement for <Image> which supports nesting views.\n *\n * ```ReactNativeWebPlayer\n * import React, { Component } from 'react';\n * import { AppRegistry, View, ImageBackground, Text } from 'react-native';\n *\n * class DisplayAnImageBackground extends Component {\n *   render() {\n *     return (\n *       <ImageBackground\n *         style={{width: 50, height: 50}}\n *         source={{uri: 'https://reactnative.dev/img/opengraph.png'}}\n *       >\n *         <Text>React</Text>\n *       </ImageBackground>\n *     );\n *   }\n * }\n *\n * // App registration and rendering\n * AppRegistry.registerComponent('DisplayAnImageBackground', () => DisplayAnImageBackground);\n * ```\n */\nclass ImageBackground extends React.Component<ImageBackgroundProps> {\n  setNativeProps(props: Object) {\n    // Work-around flow\n    const viewRef = this._viewRef;\n    if (viewRef) {\n      viewRef.setNativeProps(props);\n    }\n  }\n\n  _viewRef: ?React.ElementRef<typeof View> = null;\n\n  _captureRef = (\n    ref: null | React$ElementRef<\n      React$AbstractComponent<\n        ViewProps,\n        React.ElementRef<HostComponent<ViewProps>>,\n      >,\n    >,\n  ) => {\n    this._viewRef = ref;\n  };\n\n  render(): React.Node {\n    const {\n      children,\n      style,\n      imageStyle,\n      imageRef,\n      importantForAccessibility,\n      ...props\n    } = this.props;\n\n    const flattenedStyle = flattenStyle(style);\n    return (\n      <View\n        accessibilityIgnoresInvertColors={true}\n        importantForAccessibility={importantForAccessibility}\n        style={style}\n        ref={this._captureRef}>\n        <Image\n          {...props}\n          importantForAccessibility={importantForAccessibility}\n          style={[\n            StyleSheet.absoluteFill,\n            {\n              // Temporary Workaround:\n              // Current (imperfect yet) implementation of <Image> overwrites width and height styles\n              // (which is not quite correct), and these styles conflict with explicitly set styles\n              // of <ImageBackground> and with our internal layout model here.\n              // So, we have to proxy/reapply these styles explicitly for actual <Image> component.\n              // This workaround should be removed after implementing proper support of\n              // intrinsic content size of the <Image>.\n              width: flattenedStyle?.width,\n              height: flattenedStyle?.height,\n            },\n            imageStyle,\n          ]}\n          ref={imageRef}\n        />\n        {children}\n      </View>\n    );\n  }\n}\n\nmodule.exports = ImageBackground;\n","/**\n * Copyright (c) Meta Platforms, Inc. and affiliates.\n *\n * This source code is licensed under the MIT license found in the\n * LICENSE file in the root directory of this source tree.\n *\n * @flow\n * @format\n */\n\n'use strict';\n\nimport type {PressEvent} from '../Types/CoreEventTypes';\nimport type {PanResponderType} from './PanResponder.flow.js';\n\nconst InteractionManager = require('./InteractionManager');\nconst TouchHistoryMath = require('./TouchHistoryMath');\n\nconst currentCentroidXOfTouchesChangedAfter =\n  TouchHistoryMath.currentCentroidXOfTouchesChangedAfter;\nconst currentCentroidYOfTouchesChangedAfter =\n  TouchHistoryMath.currentCentroidYOfTouchesChangedAfter;\nconst previousCentroidXOfTouchesChangedAfter =\n  TouchHistoryMath.previousCentroidXOfTouchesChangedAfter;\nconst previousCentroidYOfTouchesChangedAfter =\n  TouchHistoryMath.previousCentroidYOfTouchesChangedAfter;\nconst currentCentroidX = TouchHistoryMath.currentCentroidX;\nconst currentCentroidY = TouchHistoryMath.currentCentroidY;\n\n/**\n * `PanResponder` reconciles several touches into a single gesture. It makes\n * single-touch gestures resilient to extra touches, and can be used to\n * recognize simple multi-touch gestures.\n *\n * By default, `PanResponder` holds an `InteractionManager` handle to block\n * long-running JS events from interrupting active gestures.\n *\n * It provides a predictable wrapper of the responder handlers provided by the\n * [gesture responder system](docs/gesture-responder-system.html).\n * For each handler, it provides a new `gestureState` object alongside the\n * native event object:\n *\n * ```\n * onPanResponderMove: (event, gestureState) => {}\n * ```\n *\n * A native event is a synthetic touch event with the following form:\n *\n *  - `nativeEvent`\n *      + `changedTouches` - Array of all touch events that have changed since the last event\n *      + `identifier` - The ID of the touch\n *      + `locationX` - The X position of the touch, relative to the element\n *      + `locationY` - The Y position of the touch, relative to the element\n *      + `pageX` - The X position of the touch, relative to the root element\n *      + `pageY` - The Y position of the touch, relative to the root element\n *      + `target` - The node id of the element receiving the touch event\n *      + `timestamp` - A time identifier for the touch, useful for velocity calculation\n *      + `touches` - Array of all current touches on the screen\n *\n * A `gestureState` object has the following:\n *\n *  - `stateID` - ID of the gestureState- persisted as long as there at least\n *     one touch on screen\n *  - `moveX` - the latest screen coordinates of the recently-moved touch\n *  - `moveY` - the latest screen coordinates of the recently-moved touch\n *  - `x0` - the screen coordinates of the responder grant\n *  - `y0` - the screen coordinates of the responder grant\n *  - `dx` - accumulated distance of the gesture since the touch started\n *  - `dy` - accumulated distance of the gesture since the touch started\n *  - `vx` - current velocity of the gesture\n *  - `vy` - current velocity of the gesture\n *  - `numberActiveTouches` - Number of touches currently on screen\n *\n * ### Basic Usage\n *\n * ```\n *   componentWillMount: function() {\n *     this._panResponder = PanResponder.create({\n *       // Ask to be the responder:\n *       onStartShouldSetPanResponder: (evt, gestureState) => true,\n *       onStartShouldSetPanResponderCapture: (evt, gestureState) => true,\n *       onMoveShouldSetPanResponder: (evt, gestureState) => true,\n *       onMoveShouldSetPanResponderCapture: (evt, gestureState) => true,\n *\n *       onPanResponderGrant: (evt, gestureState) => {\n *         // The gesture has started. Show visual feedback so the user knows\n *         // what is happening!\n *\n *         // gestureState.d{x,y} will be set to zero now\n *       },\n *       onPanResponderMove: (evt, gestureState) => {\n *         // The most recent move distance is gestureState.move{X,Y}\n *\n *         // The accumulated gesture distance since becoming responder is\n *         // gestureState.d{x,y}\n *       },\n *       onPanResponderTerminationRequest: (evt, gestureState) => true,\n *       onPanResponderRelease: (evt, gestureState) => {\n *         // The user has released all touches while this view is the\n *         // responder. This typically means a gesture has succeeded\n *       },\n *       onPanResponderTerminate: (evt, gestureState) => {\n *         // Another component has become the responder, so this gesture\n *         // should be cancelled\n *       },\n *       onShouldBlockNativeResponder: (evt, gestureState) => {\n *         // Returns whether this component should block native components from becoming the JS\n *         // responder. Returns true by default. Is currently only supported on android.\n *         return true;\n *       },\n *     });\n *   },\n *\n *   render: function() {\n *     return (\n *       <View {...this._panResponder.panHandlers} />\n *     );\n *   },\n *\n * ```\n *\n * ### Working Example\n *\n * To see it in action, try the\n * [PanResponder example in RNTester](https://github.com/facebook/react-native/blob/HEAD/packages/rn-tester/js/examples/PanResponder/PanResponderExample.js)\n */\n\nexport type GestureState = {|\n  /**\n   * ID of the gestureState - persisted as long as there at least one touch on screen\n   */\n  stateID: number,\n\n  /**\n   * The latest screen coordinates of the recently-moved touch\n   */\n  moveX: number,\n\n  /**\n   * The latest screen coordinates of the recently-moved touch\n   */\n  moveY: number,\n\n  /**\n   * The screen coordinates of the responder grant\n   */\n  x0: number,\n\n  /**\n   * The screen coordinates of the responder grant\n   */\n  y0: number,\n\n  /**\n   * Accumulated distance of the gesture since the touch started\n   */\n  dx: number,\n\n  /**\n   * Accumulated distance of the gesture since the touch started\n   */\n  dy: number,\n\n  /**\n   * Current velocity of the gesture\n   */\n  vx: number,\n\n  /**\n   * Current velocity of the gesture\n   */\n  vy: number,\n\n  /**\n   * Number of touches currently on screen\n   */\n  numberActiveTouches: number,\n\n  /**\n   * All `gestureState` accounts for timeStamps up until this value\n   *\n   * @private\n   */\n  _accountsForMovesUpTo: number,\n|};\n\ntype ActiveCallback = (\n  event: PressEvent,\n  gestureState: GestureState,\n) => boolean;\n\ntype PassiveCallback = (event: PressEvent, gestureState: GestureState) => mixed;\n\ntype PanHandlers = {|\n  onMoveShouldSetResponder: (event: PressEvent) => boolean,\n  onMoveShouldSetResponderCapture: (event: PressEvent) => boolean,\n  onResponderEnd: (event: PressEvent) => void,\n  onResponderGrant: (event: PressEvent) => boolean,\n  onResponderMove: (event: PressEvent) => void,\n  onResponderReject: (event: PressEvent) => void,\n  onResponderRelease: (event: PressEvent) => void,\n  onResponderStart: (event: PressEvent) => void,\n  onResponderTerminate: (event: PressEvent) => void,\n  onResponderTerminationRequest: (event: PressEvent) => boolean,\n  onStartShouldSetResponder: (event: PressEvent) => boolean,\n  onStartShouldSetResponderCapture: (event: PressEvent) => boolean,\n|};\n\ntype PanResponderConfig = $ReadOnly<{|\n  onMoveShouldSetPanResponder?: ?ActiveCallback,\n  onMoveShouldSetPanResponderCapture?: ?ActiveCallback,\n  onStartShouldSetPanResponder?: ?ActiveCallback,\n  onStartShouldSetPanResponderCapture?: ?ActiveCallback,\n  /**\n   * The body of `onResponderGrant` returns a bool, but the vast majority of\n   * callsites return void and this TODO notice is found in it:\n   *   TODO: t7467124 investigate if this can be removed\n   */\n  onPanResponderGrant?: ?(PassiveCallback | ActiveCallback),\n  onPanResponderReject?: ?PassiveCallback,\n  onPanResponderStart?: ?PassiveCallback,\n  onPanResponderEnd?: ?PassiveCallback,\n  onPanResponderRelease?: ?PassiveCallback,\n  onPanResponderMove?: ?PassiveCallback,\n  onPanResponderTerminate?: ?PassiveCallback,\n  onPanResponderTerminationRequest?: ?ActiveCallback,\n  onShouldBlockNativeResponder?: ?ActiveCallback,\n|}>;\n\nconst PanResponder: PanResponderType = {\n  /**\n   *\n   * A graphical explanation of the touch data flow:\n   *\n   * +----------------------------+             +--------------------------------+\n   * | ResponderTouchHistoryStore |             |TouchHistoryMath                |\n   * +----------------------------+             +----------+---------------------+\n   * |Global store of touchHistory|             |Allocation-less math util       |\n   * |including activeness, start |             |on touch history (centroids     |\n   * |position, prev/cur position.|             |and multitouch movement etc)    |\n   * |                            |             |                                |\n   * +----^-----------------------+             +----^---------------------------+\n   *      |                                          |\n   *      | (records relevant history                |\n   *      |  of touches relevant for                 |\n   *      |  implementing higher level               |\n   *      |  gestures)                               |\n   *      |                                          |\n   * +----+-----------------------+             +----|---------------------------+\n   * | ResponderEventPlugin       |             |    |   Your App/Component      |\n   * +----------------------------+             +----|---------------------------+\n   * |Negotiates which view gets  | Low level   |    |             High level    |\n   * |onResponderMove events.     | events w/   |  +-+-------+     events w/     |\n   * |Also records history into   | touchHistory|  |   Pan   |     multitouch +  |\n   * |ResponderTouchHistoryStore. +---------------->Responder+-----> accumulative|\n   * +----------------------------+ attached to |  |         |     distance and  |\n   *                                 each event |  +---------+     velocity.     |\n   *                                            |                                |\n   *                                            |                                |\n   *                                            +--------------------------------+\n   *\n   *\n   *\n   * Gesture that calculates cumulative movement over time in a way that just\n   * \"does the right thing\" for multiple touches. The \"right thing\" is very\n   * nuanced. When moving two touches in opposite directions, the cumulative\n   * distance is zero in each dimension. When two touches move in parallel five\n   * pixels in the same direction, the cumulative distance is five, not ten. If\n   * two touches start, one moves five in a direction, then stops and the other\n   * touch moves fives in the same direction, the cumulative distance is ten.\n   *\n   * This logic requires a kind of processing of time \"clusters\" of touch events\n   * so that two touch moves that essentially occur in parallel but move every\n   * other frame respectively, are considered part of the same movement.\n   *\n   * Explanation of some of the non-obvious fields:\n   *\n   * - moveX/moveY: If no move event has been observed, then `(moveX, moveY)` is\n   *   invalid. If a move event has been observed, `(moveX, moveY)` is the\n   *   centroid of the most recently moved \"cluster\" of active touches.\n   *   (Currently all move have the same timeStamp, but later we should add some\n   *   threshold for what is considered to be \"moving\"). If a palm is\n   *   accidentally counted as a touch, but a finger is moving greatly, the palm\n   *   will move slightly, but we only want to count the single moving touch.\n   * - x0/y0: Centroid location (non-cumulative) at the time of becoming\n   *   responder.\n   * - dx/dy: Cumulative touch distance - not the same thing as sum of each touch\n   *   distance. Accounts for touch moves that are clustered together in time,\n   *   moving the same direction. Only valid when currently responder (otherwise,\n   *   it only represents the drag distance below the threshold).\n   * - vx/vy: Velocity.\n   */\n\n  _initializeGestureState(gestureState: GestureState) {\n    gestureState.moveX = 0;\n    gestureState.moveY = 0;\n    gestureState.x0 = 0;\n    gestureState.y0 = 0;\n    gestureState.dx = 0;\n    gestureState.dy = 0;\n    gestureState.vx = 0;\n    gestureState.vy = 0;\n    gestureState.numberActiveTouches = 0;\n    // All `gestureState` accounts for timeStamps up until:\n    gestureState._accountsForMovesUpTo = 0;\n  },\n\n  /**\n   * This is nuanced and is necessary. It is incorrect to continuously take all\n   * active *and* recently moved touches, find the centroid, and track how that\n   * result changes over time. Instead, we must take all recently moved\n   * touches, and calculate how the centroid has changed just for those\n   * recently moved touches, and append that change to an accumulator. This is\n   * to (at least) handle the case where the user is moving three fingers, and\n   * then one of the fingers stops but the other two continue.\n   *\n   * This is very different than taking all of the recently moved touches and\n   * storing their centroid as `dx/dy`. For correctness, we must *accumulate\n   * changes* in the centroid of recently moved touches.\n   *\n   * There is also some nuance with how we handle multiple moved touches in a\n   * single event. With the way `ReactNativeEventEmitter` dispatches touches as\n   * individual events, multiple touches generate two 'move' events, each of\n   * them triggering `onResponderMove`. But with the way `PanResponder` works,\n   * all of the gesture inference is performed on the first dispatch, since it\n   * looks at all of the touches (even the ones for which there hasn't been a\n   * native dispatch yet). Therefore, `PanResponder` does not call\n   * `onResponderMove` passed the first dispatch. This diverges from the\n   * typical responder callback pattern (without using `PanResponder`), but\n   * avoids more dispatches than necessary.\n   */\n  _updateGestureStateOnMove(\n    gestureState: GestureState,\n    touchHistory: $PropertyType<PressEvent, 'touchHistory'>,\n  ) {\n    gestureState.numberActiveTouches = touchHistory.numberActiveTouches;\n    gestureState.moveX = currentCentroidXOfTouchesChangedAfter(\n      touchHistory,\n      gestureState._accountsForMovesUpTo,\n    );\n    gestureState.moveY = currentCentroidYOfTouchesChangedAfter(\n      touchHistory,\n      gestureState._accountsForMovesUpTo,\n    );\n    const movedAfter = gestureState._accountsForMovesUpTo;\n    const prevX = previousCentroidXOfTouchesChangedAfter(\n      touchHistory,\n      movedAfter,\n    );\n    const x = currentCentroidXOfTouchesChangedAfter(touchHistory, movedAfter);\n    const prevY = previousCentroidYOfTouchesChangedAfter(\n      touchHistory,\n      movedAfter,\n    );\n    const y = currentCentroidYOfTouchesChangedAfter(touchHistory, movedAfter);\n    const nextDX = gestureState.dx + (x - prevX);\n    const nextDY = gestureState.dy + (y - prevY);\n\n    // TODO: This must be filtered intelligently.\n    const dt =\n      touchHistory.mostRecentTimeStamp - gestureState._accountsForMovesUpTo;\n    gestureState.vx = (nextDX - gestureState.dx) / dt;\n    gestureState.vy = (nextDY - gestureState.dy) / dt;\n\n    gestureState.dx = nextDX;\n    gestureState.dy = nextDY;\n    gestureState._accountsForMovesUpTo = touchHistory.mostRecentTimeStamp;\n  },\n\n  /**\n   * @param {object} config Enhanced versions of all of the responder callbacks\n   * that provide not only the typical `ResponderSyntheticEvent`, but also the\n   * `PanResponder` gesture state.  Simply replace the word `Responder` with\n   * `PanResponder` in each of the typical `onResponder*` callbacks. For\n   * example, the `config` object would look like:\n   *\n   *  - `onMoveShouldSetPanResponder: (e, gestureState) => {...}`\n   *  - `onMoveShouldSetPanResponderCapture: (e, gestureState) => {...}`\n   *  - `onStartShouldSetPanResponder: (e, gestureState) => {...}`\n   *  - `onStartShouldSetPanResponderCapture: (e, gestureState) => {...}`\n   *  - `onPanResponderReject: (e, gestureState) => {...}`\n   *  - `onPanResponderGrant: (e, gestureState) => {...}`\n   *  - `onPanResponderStart: (e, gestureState) => {...}`\n   *  - `onPanResponderEnd: (e, gestureState) => {...}`\n   *  - `onPanResponderRelease: (e, gestureState) => {...}`\n   *  - `onPanResponderMove: (e, gestureState) => {...}`\n   *  - `onPanResponderTerminate: (e, gestureState) => {...}`\n   *  - `onPanResponderTerminationRequest: (e, gestureState) => {...}`\n   *  - `onShouldBlockNativeResponder: (e, gestureState) => {...}`\n   *\n   *  In general, for events that have capture equivalents, we update the\n   *  gestureState once in the capture phase and can use it in the bubble phase\n   *  as well.\n   *\n   *  Be careful with onStartShould* callbacks. They only reflect updated\n   *  `gestureState` for start/end events that bubble/capture to the Node.\n   *  Once the node is the responder, you can rely on every start/end event\n   *  being processed by the gesture and `gestureState` being updated\n   *  accordingly. (numberActiveTouches) may not be totally accurate unless you\n   *  are the responder.\n   */\n  create(config: PanResponderConfig): $TEMPORARY$object<{|\n    getInteractionHandle: () => ?number,\n    panHandlers: PanHandlers,\n  |}> {\n    const interactionState = {\n      handle: (null: ?number),\n    };\n    const gestureState: GestureState = {\n      // Useful for debugging\n      stateID: Math.random(),\n      moveX: 0,\n      moveY: 0,\n      x0: 0,\n      y0: 0,\n      dx: 0,\n      dy: 0,\n      vx: 0,\n      vy: 0,\n      numberActiveTouches: 0,\n      _accountsForMovesUpTo: 0,\n    };\n    const panHandlers = {\n      onStartShouldSetResponder(event: PressEvent): boolean {\n        return config.onStartShouldSetPanResponder == null\n          ? false\n          : config.onStartShouldSetPanResponder(event, gestureState);\n      },\n      onMoveShouldSetResponder(event: PressEvent): boolean {\n        return config.onMoveShouldSetPanResponder == null\n          ? false\n          : config.onMoveShouldSetPanResponder(event, gestureState);\n      },\n      onStartShouldSetResponderCapture(event: PressEvent): boolean {\n        // TODO: Actually, we should reinitialize the state any time\n        // touches.length increases from 0 active to > 0 active.\n        if (event.nativeEvent.touches.length === 1) {\n          PanResponder._initializeGestureState(gestureState);\n        }\n        gestureState.numberActiveTouches =\n          event.touchHistory.numberActiveTouches;\n        return config.onStartShouldSetPanResponderCapture != null\n          ? config.onStartShouldSetPanResponderCapture(event, gestureState)\n          : false;\n      },\n\n      onMoveShouldSetResponderCapture(event: PressEvent): boolean {\n        const touchHistory = event.touchHistory;\n        // Responder system incorrectly dispatches should* to current responder\n        // Filter out any touch moves past the first one - we would have\n        // already processed multi-touch geometry during the first event.\n        if (\n          gestureState._accountsForMovesUpTo ===\n          touchHistory.mostRecentTimeStamp\n        ) {\n          return false;\n        }\n        PanResponder._updateGestureStateOnMove(gestureState, touchHistory);\n        return config.onMoveShouldSetPanResponderCapture\n          ? config.onMoveShouldSetPanResponderCapture(event, gestureState)\n          : false;\n      },\n\n      onResponderGrant(event: PressEvent): boolean {\n        if (!interactionState.handle) {\n          interactionState.handle =\n            InteractionManager.createInteractionHandle();\n        }\n        gestureState.x0 = currentCentroidX(event.touchHistory);\n        gestureState.y0 = currentCentroidY(event.touchHistory);\n        gestureState.dx = 0;\n        gestureState.dy = 0;\n        if (config.onPanResponderGrant) {\n          config.onPanResponderGrant(event, gestureState);\n        }\n        // TODO: t7467124 investigate if this can be removed\n        return config.onShouldBlockNativeResponder == null\n          ? true\n          : config.onShouldBlockNativeResponder(event, gestureState);\n      },\n\n      onResponderReject(event: PressEvent): void {\n        clearInteractionHandle(\n          interactionState,\n          config.onPanResponderReject,\n          event,\n          gestureState,\n        );\n      },\n\n      onResponderRelease(event: PressEvent): void {\n        clearInteractionHandle(\n          interactionState,\n          config.onPanResponderRelease,\n          event,\n          gestureState,\n        );\n        PanResponder._initializeGestureState(gestureState);\n      },\n\n      onResponderStart(event: PressEvent): void {\n        const touchHistory = event.touchHistory;\n        gestureState.numberActiveTouches = touchHistory.numberActiveTouches;\n        if (config.onPanResponderStart) {\n          config.onPanResponderStart(event, gestureState);\n        }\n      },\n\n      onResponderMove(event: PressEvent): void {\n        const touchHistory = event.touchHistory;\n        // Guard against the dispatch of two touch moves when there are two\n        // simultaneously changed touches.\n        if (\n          gestureState._accountsForMovesUpTo ===\n          touchHistory.mostRecentTimeStamp\n        ) {\n          return;\n        }\n        // Filter out any touch moves past the first one - we would have\n        // already processed multi-touch geometry during the first event.\n        PanResponder._updateGestureStateOnMove(gestureState, touchHistory);\n        if (config.onPanResponderMove) {\n          config.onPanResponderMove(event, gestureState);\n        }\n      },\n\n      onResponderEnd(event: PressEvent): void {\n        const touchHistory = event.touchHistory;\n        gestureState.numberActiveTouches = touchHistory.numberActiveTouches;\n        clearInteractionHandle(\n          interactionState,\n          config.onPanResponderEnd,\n          event,\n          gestureState,\n        );\n      },\n\n      onResponderTerminate(event: PressEvent): void {\n        clearInteractionHandle(\n          interactionState,\n          config.onPanResponderTerminate,\n          event,\n          gestureState,\n        );\n        PanResponder._initializeGestureState(gestureState);\n      },\n\n      onResponderTerminationRequest(event: PressEvent): boolean {\n        return config.onPanResponderTerminationRequest == null\n          ? true\n          : config.onPanResponderTerminationRequest(event, gestureState);\n      },\n    };\n    return {\n      panHandlers,\n      getInteractionHandle(): ?number {\n        return interactionState.handle;\n      },\n    };\n  },\n};\n\nfunction clearInteractionHandle(\n  interactionState: {handle: ?number, ...},\n  callback: ?(ActiveCallback | PassiveCallback),\n  event: PressEvent,\n  gestureState: GestureState,\n) {\n  if (interactionState.handle) {\n    InteractionManager.clearInteractionHandle(interactionState.handle);\n    interactionState.handle = null;\n  }\n  if (callback) {\n    callback(event, gestureState);\n  }\n}\n\nexport type PanResponderInstance = $Call<\n  $PropertyType<typeof PanResponder, 'create'>,\n  PanResponderConfig,\n>;\n\nmodule.exports = PanResponder;\n","/**\n * Copyright (c) Meta Platforms, Inc. and affiliates.\n *\n * This source code is licensed under the MIT license found in the\n * LICENSE file in the root directory of this source tree.\n *\n * @format\n */\n\nconst TouchHistoryMath = {\n  /**\n   * This code is optimized and not intended to look beautiful. This allows\n   * computing of touch centroids that have moved after `touchesChangedAfter`\n   * timeStamp. You can compute the current centroid involving all touches\n   * moves after `touchesChangedAfter`, or you can compute the previous\n   * centroid of all touches that were moved after `touchesChangedAfter`.\n   *\n   * @param {TouchHistoryMath} touchHistory Standard Responder touch track\n   * data.\n   * @param {number} touchesChangedAfter timeStamp after which moved touches\n   * are considered \"actively moving\" - not just \"active\".\n   * @param {boolean} isXAxis Consider `x` dimension vs. `y` dimension.\n   * @param {boolean} ofCurrent Compute current centroid for actively moving\n   * touches vs. previous centroid of now actively moving touches.\n   * @return {number} value of centroid in specified dimension.\n   */\n  centroidDimension: function (\n    touchHistory,\n    touchesChangedAfter,\n    isXAxis,\n    ofCurrent,\n  ) {\n    const touchBank = touchHistory.touchBank;\n    let total = 0;\n    let count = 0;\n\n    const oneTouchData =\n      touchHistory.numberActiveTouches === 1\n        ? touchHistory.touchBank[touchHistory.indexOfSingleActiveTouch]\n        : null;\n\n    if (oneTouchData !== null) {\n      if (\n        oneTouchData.touchActive &&\n        oneTouchData.currentTimeStamp > touchesChangedAfter\n      ) {\n        total +=\n          ofCurrent && isXAxis\n            ? oneTouchData.currentPageX\n            : ofCurrent && !isXAxis\n            ? oneTouchData.currentPageY\n            : !ofCurrent && isXAxis\n            ? oneTouchData.previousPageX\n            : oneTouchData.previousPageY;\n        count = 1;\n      }\n    } else {\n      for (let i = 0; i < touchBank.length; i++) {\n        const touchTrack = touchBank[i];\n        if (\n          touchTrack !== null &&\n          touchTrack !== undefined &&\n          touchTrack.touchActive &&\n          touchTrack.currentTimeStamp >= touchesChangedAfter\n        ) {\n          let toAdd; // Yuck, program temporarily in invalid state.\n          if (ofCurrent && isXAxis) {\n            toAdd = touchTrack.currentPageX;\n          } else if (ofCurrent && !isXAxis) {\n            toAdd = touchTrack.currentPageY;\n          } else if (!ofCurrent && isXAxis) {\n            toAdd = touchTrack.previousPageX;\n          } else {\n            toAdd = touchTrack.previousPageY;\n          }\n          total += toAdd;\n          count++;\n        }\n      }\n    }\n    return count > 0 ? total / count : TouchHistoryMath.noCentroid;\n  },\n\n  currentCentroidXOfTouchesChangedAfter: function (\n    touchHistory,\n    touchesChangedAfter,\n  ) {\n    return TouchHistoryMath.centroidDimension(\n      touchHistory,\n      touchesChangedAfter,\n      true, // isXAxis\n      true, // ofCurrent\n    );\n  },\n\n  currentCentroidYOfTouchesChangedAfter: function (\n    touchHistory,\n    touchesChangedAfter,\n  ) {\n    return TouchHistoryMath.centroidDimension(\n      touchHistory,\n      touchesChangedAfter,\n      false, // isXAxis\n      true, // ofCurrent\n    );\n  },\n\n  previousCentroidXOfTouchesChangedAfter: function (\n    touchHistory,\n    touchesChangedAfter,\n  ) {\n    return TouchHistoryMath.centroidDimension(\n      touchHistory,\n      touchesChangedAfter,\n      true, // isXAxis\n      false, // ofCurrent\n    );\n  },\n\n  previousCentroidYOfTouchesChangedAfter: function (\n    touchHistory,\n    touchesChangedAfter,\n  ) {\n    return TouchHistoryMath.centroidDimension(\n      touchHistory,\n      touchesChangedAfter,\n      false, // isXAxis\n      false, // ofCurrent\n    );\n  },\n\n  currentCentroidX: function (touchHistory) {\n    return TouchHistoryMath.centroidDimension(\n      touchHistory,\n      0, // touchesChangedAfter\n      true, // isXAxis\n      true, // ofCurrent\n    );\n  },\n\n  currentCentroidY: function (touchHistory) {\n    return TouchHistoryMath.centroidDimension(\n      touchHistory,\n      0, // touchesChangedAfter\n      false, // isXAxis\n      true, // ofCurrent\n    );\n  },\n\n  noCentroid: -1,\n};\n\nmodule.exports = TouchHistoryMath;\n","/**\n * Copyright (c) Meta Platforms, Inc. and affiliates.\n *\n * This source code is licensed under the MIT license found in the\n * LICENSE file in the root directory of this source tree.\n *\n * @format\n * @flow strict-local\n */\n\nimport type {EventSubscription} from '../vendor/emitter/EventEmitter';\n\nimport NativeEventEmitter from '../EventEmitter/NativeEventEmitter';\nimport InteractionManager from '../Interaction/InteractionManager';\nimport Platform from '../Utilities/Platform';\nimport NativeIntentAndroid from './NativeIntentAndroid';\nimport NativeLinkingManager from './NativeLinkingManager';\nimport invariant from 'invariant';\nimport nullthrows from 'nullthrows';\n\ntype LinkingEventDefinitions = {\n  url: [{url: string}],\n};\n\n/**\n * `Linking` gives you a general interface to interact with both incoming\n * and outgoing app links.\n *\n * See https://reactnative.dev/docs/linking\n */\nclass Linking extends NativeEventEmitter<LinkingEventDefinitions> {\n  constructor() {\n    super(Platform.OS === 'ios' ? nullthrows(NativeLinkingManager) : undefined);\n  }\n\n  /**\n   * Add a handler to Linking changes by listening to the `url` event type\n   * and providing the handler\n   *\n   * See https://reactnative.dev/docs/linking#addeventlistener\n   */\n  addEventListener<K: $Keys<LinkingEventDefinitions>>(\n    eventType: K,\n    listener: (...$ElementType<LinkingEventDefinitions, K>) => mixed,\n    context: $FlowFixMe,\n  ): EventSubscription {\n    return this.addListener(eventType, listener);\n  }\n\n  /**\n   * Try to open the given `url` with any of the installed apps.\n   *\n   * See https://reactnative.dev/docs/linking#openurl\n   */\n  openURL(url: string): Promise<void> {\n    this._validateURL(url);\n    if (Platform.OS === 'android') {\n      return nullthrows(NativeIntentAndroid).openURL(url);\n    } else {\n      return nullthrows(NativeLinkingManager).openURL(url);\n    }\n  }\n\n  /**\n   * Determine whether or not an installed app can handle a given URL.\n   *\n   * See https://reactnative.dev/docs/linking#canopenurl\n   */\n  canOpenURL(url: string): Promise<boolean> {\n    this._validateURL(url);\n    if (Platform.OS === 'android') {\n      return nullthrows(NativeIntentAndroid).canOpenURL(url);\n    } else {\n      return nullthrows(NativeLinkingManager).canOpenURL(url);\n    }\n  }\n\n  /**\n   * Open app settings.\n   *\n   * See https://reactnative.dev/docs/linking#opensettings\n   */\n  openSettings(): Promise<void> {\n    if (Platform.OS === 'android') {\n      return nullthrows(NativeIntentAndroid).openSettings();\n    } else {\n      return nullthrows(NativeLinkingManager).openSettings();\n    }\n  }\n\n  /**\n   * If the app launch was triggered by an app link,\n   * it will give the link url, otherwise it will give `null`\n   *\n   * See https://reactnative.dev/docs/linking#getinitialurl\n   */\n  getInitialURL(): Promise<?string> {\n    return Platform.OS === 'android'\n      ? InteractionManager.runAfterInteractions().then(() =>\n          nullthrows(NativeIntentAndroid).getInitialURL(),\n        )\n      : nullthrows(NativeLinkingManager).getInitialURL();\n  }\n\n  /*\n   * Launch an Android intent with extras (optional)\n   *\n   * @platform android\n   *\n   * See https://reactnative.dev/docs/linking#sendintent\n   */\n  sendIntent(\n    action: string,\n    extras?: Array<{\n      key: string,\n      value: string | number | boolean,\n      ...\n    }>,\n  ): Promise<void> {\n    if (Platform.OS === 'android') {\n      return nullthrows(NativeIntentAndroid).sendIntent(action, extras);\n    } else {\n      return new Promise((resolve, reject) => reject(new Error('Unsupported')));\n    }\n  }\n\n  _validateURL(url: string): void {\n    invariant(\n      typeof url === 'string',\n      'Invalid URL: should be a string. Was: ' + url,\n    );\n    invariant(url, 'Invalid URL: cannot be empty');\n  }\n}\n\nmodule.exports = (new Linking(): Linking);\n","/**\n * Copyright (c) Meta Platforms, Inc. and affiliates.\n *\n * This source code is licensed under the MIT license found in the\n * LICENSE file in the root directory of this source tree.\n *\n * @flow strict\n * @format\n */\n\nimport type {TurboModule} from '../TurboModule/RCTExport';\n\nimport * as TurboModuleRegistry from '../TurboModule/TurboModuleRegistry';\n\nexport interface Spec extends TurboModule {\n  +getInitialURL: () => Promise<string>;\n  +canOpenURL: (url: string) => Promise<boolean>;\n  +openURL: (url: string) => Promise<void>;\n  +openSettings: () => Promise<void>;\n  +sendIntent: (\n    action: string,\n    extras: ?Array<{\n      key: string,\n      value: string | number | boolean, // TODO(T67672788): Union types are not type safe\n      ...\n    }>,\n  ) => Promise<void>;\n}\n\nexport default (TurboModuleRegistry.get<Spec>('IntentAndroid'): ?Spec);\n","/**\n * Copyright (c) Meta Platforms, Inc. and affiliates.\n *\n * This source code is licensed under the MIT license found in the\n * LICENSE file in the root directory of this source tree.\n *\n * @flow strict\n * @format\n */\n\nimport type {TurboModule} from '../TurboModule/RCTExport';\n\nimport * as TurboModuleRegistry from '../TurboModule/TurboModuleRegistry';\n\nexport interface Spec extends TurboModule {\n  // Common interface\n  +getInitialURL: () => Promise<string>;\n  +canOpenURL: (url: string) => Promise<boolean>;\n  +openURL: (url: string) => Promise<void>;\n  +openSettings: () => Promise<void>;\n\n  // Events\n  +addListener: (eventName: string) => void;\n  +removeListeners: (count: number) => void;\n}\n\nexport default (TurboModuleRegistry.get<Spec>('LinkingManager'): ?Spec);\n","/**\n * Copyright (c) Meta Platforms, Inc. and affiliates.\n *\n * This source code is licensed under the MIT license found in the\n * LICENSE file in the root directory of this source tree.\n *\n * @format\n * @flow strict-local\n */\n\nimport type {ViewProps} from '../Components/View/ViewPropTypes';\nimport type {RootTag} from '../ReactNative/RootTag';\nimport type {DirectEventHandler} from '../Types/CodegenTypes';\n\nimport NativeEventEmitter from '../EventEmitter/NativeEventEmitter';\nimport {VirtualizedListContextResetter} from '../Lists/VirtualizedListContext.js';\nimport {type EventSubscription} from '../vendor/emitter/EventEmitter';\nimport ModalInjection from './ModalInjection';\nimport NativeModalManager from './NativeModalManager';\nimport RCTModalHostView from './RCTModalHostViewNativeComponent';\n\nconst ScrollView = require('../Components/ScrollView/ScrollView');\nconst View = require('../Components/View/View');\nconst AppContainer = require('../ReactNative/AppContainer');\nconst I18nManager = require('../ReactNative/I18nManager');\nconst {RootTagContext} = require('../ReactNative/RootTag');\nconst StyleSheet = require('../StyleSheet/StyleSheet');\nconst Platform = require('../Utilities/Platform');\nconst React = require('react');\n\ntype ModalEventDefinitions = {\n  modalDismissed: [{modalID: number}],\n};\n\nconst ModalEventEmitter =\n  Platform.OS === 'ios' && NativeModalManager != null\n    ? new NativeEventEmitter<ModalEventDefinitions>(\n        // T88715063: NativeEventEmitter only used this parameter on iOS. Now it uses it on all platforms, so this code was modified automatically to preserve its behavior\n        // If you want to use the native module on other platforms, please remove this condition and test its behavior\n        Platform.OS !== 'ios' ? null : NativeModalManager,\n      )\n    : null;\n\n/**\n * The Modal component is a simple way to present content above an enclosing view.\n *\n * See https://reactnative.dev/docs/modal\n */\n\n// In order to route onDismiss callbacks, we need to uniquely identifier each\n// <Modal> on screen. There can be different ones, either nested or as siblings.\n// We cannot pass the onDismiss callback to native as the view will be\n// destroyed before the callback is fired.\nlet uniqueModalIdentifier = 0;\n\ntype OrientationChangeEvent = $ReadOnly<{|\n  orientation: 'portrait' | 'landscape',\n|}>;\n\nexport type Props = $ReadOnly<{|\n  ...ViewProps,\n\n  /**\n   * The `animationType` prop controls how the modal animates.\n   *\n   * See https://reactnative.dev/docs/modal#animationtype\n   */\n  animationType?: ?('none' | 'slide' | 'fade'),\n\n  /**\n   * The `presentationStyle` prop controls how the modal appears.\n   *\n   * See https://reactnative.dev/docs/modal#presentationstyle\n   */\n  presentationStyle?: ?(\n    | 'fullScreen'\n    | 'pageSheet'\n    | 'formSheet'\n    | 'overFullScreen'\n  ),\n\n  /**\n   * The `transparent` prop determines whether your modal will fill the\n   * entire view.\n   *\n   * See https://reactnative.dev/docs/modal#transparent\n   */\n  transparent?: ?boolean,\n\n  /**\n   * The `statusBarTranslucent` prop determines whether your modal should go under\n   * the system statusbar.\n   *\n   * See https://reactnative.dev/docs/modal#transparent\n   */\n  statusBarTranslucent?: ?boolean,\n\n  /**\n   * The `hardwareAccelerated` prop controls whether to force hardware\n   * acceleration for the underlying window.\n   *\n   * This prop works only on Android.\n   *\n   * See https://reactnative.dev/docs/modal#hardwareaccelerated\n   */\n  hardwareAccelerated?: ?boolean,\n\n  /**\n   * The `visible` prop determines whether your modal is visible.\n   *\n   * See https://reactnative.dev/docs/modal#visible\n   */\n  visible?: ?boolean,\n\n  /**\n   * The `onRequestClose` callback is called when the user taps the hardware\n   * back button on Android or the menu button on Apple TV.\n   *\n   * This is required on Apple TV and Android.\n   *\n   * See https://reactnative.dev/docs/modal#onrequestclose\n   */\n  onRequestClose?: ?DirectEventHandler<null>,\n\n  /**\n   * The `onShow` prop allows passing a function that will be called once the\n   * modal has been shown.\n   *\n   * See https://reactnative.dev/docs/modal#onshow\n   */\n  onShow?: ?DirectEventHandler<null>,\n\n  /**\n   * The `onDismiss` prop allows passing a function that will be called once\n   * the modal has been dismissed.\n   *\n   * See https://reactnative.dev/docs/modal#ondismiss\n   */\n  onDismiss?: ?() => mixed,\n\n  /**\n   * The `supportedOrientations` prop allows the modal to be rotated to any of the specified orientations.\n   *\n   * See https://reactnative.dev/docs/modal#supportedorientations\n   */\n  supportedOrientations?: ?$ReadOnlyArray<\n    | 'portrait'\n    | 'portrait-upside-down'\n    | 'landscape'\n    | 'landscape-left'\n    | 'landscape-right',\n  >,\n\n  /**\n   * The `onOrientationChange` callback is called when the orientation changes while the modal is being displayed.\n   *\n   * See https://reactnative.dev/docs/modal#onorientationchange\n   */\n  onOrientationChange?: ?DirectEventHandler<OrientationChangeEvent>,\n|}>;\n\nfunction confirmProps(props: Props) {\n  if (__DEV__) {\n    if (\n      props.presentationStyle &&\n      props.presentationStyle !== 'overFullScreen' &&\n      props.transparent === true\n    ) {\n      console.warn(\n        `Modal with '${props.presentationStyle}' presentation style and 'transparent' value is not supported.`,\n      );\n    }\n  }\n}\n\nclass Modal extends React.Component<Props> {\n  static defaultProps: {|hardwareAccelerated: boolean, visible: boolean|} = {\n    visible: true,\n    hardwareAccelerated: false,\n  };\n\n  static contextType: React.Context<RootTag> = RootTagContext;\n\n  _identifier: number;\n  _eventSubscription: ?EventSubscription;\n\n  constructor(props: Props) {\n    super(props);\n    if (__DEV__) {\n      confirmProps(props);\n    }\n    this._identifier = uniqueModalIdentifier++;\n  }\n\n  componentDidMount() {\n    // 'modalDismissed' is for the old renderer in iOS only\n    if (ModalEventEmitter) {\n      this._eventSubscription = ModalEventEmitter.addListener(\n        'modalDismissed',\n        event => {\n          if (event.modalID === this._identifier && this.props.onDismiss) {\n            this.props.onDismiss();\n          }\n        },\n      );\n    }\n  }\n\n  componentWillUnmount() {\n    if (this._eventSubscription) {\n      this._eventSubscription.remove();\n    }\n  }\n\n  componentDidUpdate() {\n    if (__DEV__) {\n      confirmProps(this.props);\n    }\n  }\n\n  render(): React.Node {\n    if (this.props.visible !== true) {\n      return null;\n    }\n\n    const containerStyles = {\n      backgroundColor:\n        this.props.transparent === true ? 'transparent' : 'white',\n    };\n\n    let animationType = this.props.animationType || 'none';\n\n    let presentationStyle = this.props.presentationStyle;\n    if (!presentationStyle) {\n      presentationStyle = 'fullScreen';\n      if (this.props.transparent === true) {\n        presentationStyle = 'overFullScreen';\n      }\n    }\n\n    const innerChildren = __DEV__ ? (\n      <AppContainer rootTag={this.context}>{this.props.children}</AppContainer>\n    ) : (\n      this.props.children\n    );\n\n    return (\n      <RCTModalHostView\n        animationType={animationType}\n        presentationStyle={presentationStyle}\n        transparent={this.props.transparent}\n        hardwareAccelerated={this.props.hardwareAccelerated}\n        onRequestClose={this.props.onRequestClose}\n        onShow={this.props.onShow}\n        onDismiss={() => {\n          if (this.props.onDismiss) {\n            this.props.onDismiss();\n          }\n        }}\n        visible={this.props.visible}\n        statusBarTranslucent={this.props.statusBarTranslucent}\n        identifier={this._identifier}\n        style={styles.modal}\n        // $FlowFixMe[method-unbinding] added when improving typing for this parameters\n        onStartShouldSetResponder={this._shouldSetResponder}\n        supportedOrientations={this.props.supportedOrientations}\n        onOrientationChange={this.props.onOrientationChange}\n        testID={this.props.testID}>\n        <VirtualizedListContextResetter>\n          <ScrollView.Context.Provider value={null}>\n            <View\n              style={[styles.container, containerStyles]}\n              collapsable={false}>\n              {innerChildren}\n            </View>\n          </ScrollView.Context.Provider>\n        </VirtualizedListContextResetter>\n      </RCTModalHostView>\n    );\n  }\n\n  // We don't want any responder events bubbling out of the modal.\n  _shouldSetResponder(): boolean {\n    return true;\n  }\n}\n\nconst side = I18nManager.getConstants().isRTL ? 'right' : 'left';\nconst styles = StyleSheet.create({\n  modal: {\n    position: 'absolute',\n  },\n  container: {\n    /* $FlowFixMe[invalid-computed-prop] (>=0.111.0 site=react_native_fb) This\n     * comment suppresses an error found when Flow v0.111 was deployed. To see\n     * the error, delete this comment and run Flow. */\n    [side]: 0,\n    top: 0,\n    flex: 1,\n  },\n});\n\nconst ExportedModal: React.AbstractComponent<\n  React.ElementConfig<typeof Modal>,\n> = ModalInjection.unstable_Modal ?? Modal;\n\nmodule.exports = ExportedModal;\n","/**\n * Copyright (c) Meta Platforms, Inc. and affiliates.\n *\n * This source code is licensed under the MIT license found in the\n * LICENSE file in the root directory of this source tree.\n *\n * @flow strict-local\n * @format\n */\n\nimport typeof Modal from './Modal';\n\nexport default {\n  unstable_Modal: (null: ?Modal),\n};\n","/**\n * Copyright (c) Meta Platforms, Inc. and affiliates.\n *\n * This source code is licensed under the MIT license found in the\n * LICENSE file in the root directory of this source tree.\n *\n * @flow strict\n * @format\n */\n\nimport type {TurboModule} from '../TurboModule/RCTExport';\n\nimport * as TurboModuleRegistry from '../TurboModule/TurboModuleRegistry';\n\nexport interface Spec extends TurboModule {\n  // RCTEventEmitter\n  +addListener: (eventName: string) => void;\n  +removeListeners: (count: number) => void;\n}\n\nexport default (TurboModuleRegistry.get<Spec>('ModalManager'): ?Spec);\n","/**\n * Copyright (c) Meta Platforms, Inc. and affiliates.\n *\n * This source code is licensed under the MIT license found in the\n * LICENSE file in the root directory of this source tree.\n *\n * @format\n * @flow strict-local\n */\n\nimport type {ViewProps} from '../Components/View/ViewPropTypes';\nimport type {HostComponent} from '../Renderer/shims/ReactNativeTypes';\nimport type {\n  DirectEventHandler,\n  Int32,\n  WithDefault,\n} from '../Types/CodegenTypes';\n\nimport codegenNativeComponent from '../Utilities/codegenNativeComponent';\n\ntype OrientationChangeEvent = $ReadOnly<{|\n  orientation: 'portrait' | 'landscape',\n|}>;\n\ntype NativeProps = $ReadOnly<{|\n  ...ViewProps,\n\n  /**\n   * The `animationType` prop controls how the modal animates.\n   *\n   * See https://reactnative.dev/docs/modal#animationtype\n   */\n  animationType?: WithDefault<'none' | 'slide' | 'fade', 'none'>,\n\n  /**\n   * The `presentationStyle` prop controls how the modal appears.\n   *\n   * See https://reactnative.dev/docs/modal#presentationstyle\n   */\n  presentationStyle?: WithDefault<\n    'fullScreen' | 'pageSheet' | 'formSheet' | 'overFullScreen',\n    'fullScreen',\n  >,\n\n  /**\n   * The `transparent` prop determines whether your modal will fill the\n   * entire view.\n   *\n   * See https://reactnative.dev/docs/modal#transparent\n   */\n  transparent?: WithDefault<boolean, false>,\n\n  /**\n   * The `statusBarTranslucent` prop determines whether your modal should go under\n   * the system statusbar.\n   *\n   * See https://reactnative.dev/docs/modal#statusBarTranslucent\n   */\n  statusBarTranslucent?: WithDefault<boolean, false>,\n\n  /**\n   * The `hardwareAccelerated` prop controls whether to force hardware\n   * acceleration for the underlying window.\n   *\n   * See https://reactnative.dev/docs/modal#hardwareaccelerated\n   */\n  hardwareAccelerated?: WithDefault<boolean, false>,\n\n  /**\n   * The `onRequestClose` callback is called when the user taps the hardware\n   * back button on Android or the menu button on Apple TV.\n   *\n   * This is required on Apple TV and Android.\n   *\n   * See https://reactnative.dev/docs/modal#onrequestclose\n   */\n  onRequestClose?: ?DirectEventHandler<null>,\n\n  /**\n   * The `onShow` prop allows passing a function that will be called once the\n   * modal has been shown.\n   *\n   * See https://reactnative.dev/docs/modal#onshow\n   */\n  onShow?: ?DirectEventHandler<null>,\n\n  /**\n   * The `onDismiss` prop allows passing a function that will be called once\n   * the modal has been dismissed.\n   *\n   * See https://reactnative.dev/docs/modal#ondismiss\n   */\n  onDismiss?: ?DirectEventHandler<null>,\n\n  /**\n   * The `visible` prop determines whether your modal is visible.\n   *\n   * See https://reactnative.dev/docs/modal#visible\n   */\n  visible?: WithDefault<boolean, false>,\n\n  /**\n   * Deprecated. Use the `animationType` prop instead.\n   */\n  animated?: WithDefault<boolean, false>,\n\n  /**\n   * The `supportedOrientations` prop allows the modal to be rotated to any of the specified orientations.\n   *\n   * See https://reactnative.dev/docs/modal#supportedorientations\n   */\n  supportedOrientations?: WithDefault<\n    $ReadOnlyArray<\n      | 'portrait'\n      | 'portrait-upside-down'\n      | 'landscape'\n      | 'landscape-left'\n      | 'landscape-right',\n    >,\n    'portrait',\n  >,\n\n  /**\n   * The `onOrientationChange` callback is called when the orientation changes while the modal is being displayed.\n   *\n   * See https://reactnative.dev/docs/modal#onorientationchange\n   */\n  onOrientationChange?: ?DirectEventHandler<OrientationChangeEvent>,\n\n  /**\n   * The `identifier` is the unique number for identifying Modal components.\n   */\n  identifier?: WithDefault<Int32, 0>,\n|}>;\n\nexport default (codegenNativeComponent<NativeProps>('ModalHostView', {\n  interfaceOnly: true,\n  paperComponentName: 'RCTModalHostView',\n}): HostComponent<NativeProps>);\n","/**\n * Copyright (c) Meta Platforms, Inc. and affiliates.\n *\n * This source code is licensed under the MIT license found in the\n * LICENSE file in the root directory of this source tree.\n *\n * @format\n * @flow strict\n */\n\nimport type {TurboModule} from '../TurboModule/RCTExport';\n\nimport * as TurboModuleRegistry from '../TurboModule/TurboModuleRegistry';\n\n// TODO: Use proper enum types.\nexport type PermissionStatus = string;\nexport type PermissionType = string;\n/*\nexport type PermissionStatus = 'granted' | 'denied' | 'never_ask_again';\nexport type PermissionType =\n  | 'android.permission.READ_CALENDAR'\n  | 'android.permission.WRITE_CALENDAR'\n  | 'android.permission.CAMERA'\n  | 'android.permission.READ_CONTACTS'\n  | 'android.permission.WRITE_CONTACTS'\n  | 'android.permission.GET_ACCOUNTS'\n  | 'android.permission.ACCESS_BACKGROUND_LOCATION'\n  | 'android.permission.ACCESS_FINE_LOCATION'\n  | 'android.permission.ACCESS_COARSE_LOCATION'\n  | 'android.permission.RECORD_AUDIO'\n  | 'android.permission.READ_PHONE_STATE'\n  | 'android.permission.CALL_PHONE'\n  | 'android.permission.READ_CALL_LOG'\n  | 'android.permission.WRITE_CALL_LOG'\n  | 'com.android.voicemail.permission.ADD_VOICEMAIL'\n  | 'com.android.voicemail.permission.READ_VOICEMAIL'\n  | 'com.android.voicemail.permission.WRITE_VOICEMAIL'\n  | 'android.permission.USE_SIP'\n  | 'android.permission.PROCESS_OUTGOING_CALLS'\n  | 'android.permission.BODY_SENSORS'\n  | 'android.permission.BODY_SENSORS_BACKGROUND'\n  | 'android.permission.SEND_SMS'\n  | 'android.permission.RECEIVE_SMS'\n  | 'android.permission.READ_SMS'\n  | 'android.permission.RECEIVE_WAP_PUSH'\n  | 'android.permission.RECEIVE_MMS'\n  | 'android.permission.READ_EXTERNAL_STORAGE'\n  | 'android.permission.READ_MEDIA_IMAGES',\n  | 'android.permission.READ_MEDIA_VIDEO',\n  | 'android.permission.READ_MEDIA_AUDIO',\n  | 'android.permission.WRITE_EXTERNAL_STORAGE'\n  | 'android.permission.BLUETOOTH_CONNECT'\n  | 'android.permission.BLUETOOTH_SCAN'\n  | 'android.permission.BLUETOOTH_ADVERTISE'\n  | 'android.permission.ACCESS_MEDIA_LOCATION'\n  | 'android.permission.ACCEPT_HANDOVER'\n  | 'android.permission.ACTIVITY_RECOGNITION'\n  | 'android.permission.ANSWER_PHONE_CALLS'\n  | 'android.permission.READ_PHONE_NUMBERS'\n  | 'android.permission.UWB_RANGING'\n  | 'android.permission.POST_NOTIFICATIONS'\n  | 'android.permission.NEARBY_WIFI_DEVICES';\n*/\n\nexport interface Spec extends TurboModule {\n  +checkPermission: (permission: PermissionType) => Promise<boolean>;\n  +requestPermission: (permission: PermissionType) => Promise<PermissionStatus>;\n  +shouldShowRequestPermissionRationale: (\n    permission: string,\n  ) => Promise<boolean>;\n  +requestMultiplePermissions: (\n    permissions: Array<PermissionType>,\n  ) => Promise<{[permission: PermissionType]: PermissionStatus, ...}>;\n}\n\nexport default (TurboModuleRegistry.get<Spec>('PermissionsAndroid'): ?Spec);\n","/**\n * Copyright (c) Meta Platforms, Inc. and affiliates.\n *\n * This source code is licensed under the MIT license found in the\n * LICENSE file in the root directory of this source tree.\n *\n * @format\n * @flow strict\n */\n\nimport type {\n  PermissionStatus,\n  PermissionType,\n} from './NativePermissionsAndroid';\n\nimport NativeDialogManagerAndroid from '../NativeModules/specs/NativeDialogManagerAndroid';\nimport NativePermissionsAndroid from './NativePermissionsAndroid';\nimport invariant from 'invariant';\n\nconst Platform = require('../Utilities/Platform');\n\nexport type Rationale = {\n  title: string,\n  message: string,\n  buttonPositive?: string,\n  buttonNegative?: string,\n  buttonNeutral?: string,\n  ...\n};\n\nconst PERMISSION_REQUEST_RESULT = Object.freeze({\n  GRANTED: 'granted',\n  DENIED: 'denied',\n  NEVER_ASK_AGAIN: 'never_ask_again',\n});\n\nconst PERMISSIONS = Object.freeze({\n  READ_CALENDAR: 'android.permission.READ_CALENDAR',\n  WRITE_CALENDAR: 'android.permission.WRITE_CALENDAR',\n  CAMERA: 'android.permission.CAMERA',\n  READ_CONTACTS: 'android.permission.READ_CONTACTS',\n  WRITE_CONTACTS: 'android.permission.WRITE_CONTACTS',\n  GET_ACCOUNTS: 'android.permission.GET_ACCOUNTS',\n  ACCESS_FINE_LOCATION: 'android.permission.ACCESS_FINE_LOCATION',\n  ACCESS_COARSE_LOCATION: 'android.permission.ACCESS_COARSE_LOCATION',\n  ACCESS_BACKGROUND_LOCATION: 'android.permission.ACCESS_BACKGROUND_LOCATION',\n  RECORD_AUDIO: 'android.permission.RECORD_AUDIO',\n  READ_PHONE_STATE: 'android.permission.READ_PHONE_STATE',\n  CALL_PHONE: 'android.permission.CALL_PHONE',\n  READ_CALL_LOG: 'android.permission.READ_CALL_LOG',\n  WRITE_CALL_LOG: 'android.permission.WRITE_CALL_LOG',\n  ADD_VOICEMAIL: 'com.android.voicemail.permission.ADD_VOICEMAIL',\n  READ_VOICEMAIL: 'com.android.voicemail.permission.READ_VOICEMAIL',\n  WRITE_VOICEMAIL: 'com.android.voicemail.permission.WRITE_VOICEMAIL',\n  USE_SIP: 'android.permission.USE_SIP',\n  PROCESS_OUTGOING_CALLS: 'android.permission.PROCESS_OUTGOING_CALLS',\n  BODY_SENSORS: 'android.permission.BODY_SENSORS',\n  BODY_SENSORS_BACKGROUND: 'android.permission.BODY_SENSORS_BACKGROUND',\n  SEND_SMS: 'android.permission.SEND_SMS',\n  RECEIVE_SMS: 'android.permission.RECEIVE_SMS',\n  READ_SMS: 'android.permission.READ_SMS',\n  RECEIVE_WAP_PUSH: 'android.permission.RECEIVE_WAP_PUSH',\n  RECEIVE_MMS: 'android.permission.RECEIVE_MMS',\n  READ_EXTERNAL_STORAGE: 'android.permission.READ_EXTERNAL_STORAGE',\n  READ_MEDIA_IMAGES: 'android.permission.READ_MEDIA_IMAGES',\n  READ_MEDIA_VIDEO: 'android.permission.READ_MEDIA_VIDEO',\n  READ_MEDIA_AUDIO: 'android.permission.READ_MEDIA_AUDIO',\n  WRITE_EXTERNAL_STORAGE: 'android.permission.WRITE_EXTERNAL_STORAGE',\n  BLUETOOTH_CONNECT: 'android.permission.BLUETOOTH_CONNECT',\n  BLUETOOTH_SCAN: 'android.permission.BLUETOOTH_SCAN',\n  BLUETOOTH_ADVERTISE: 'android.permission.BLUETOOTH_ADVERTISE',\n  ACCESS_MEDIA_LOCATION: 'android.permission.ACCESS_MEDIA_LOCATION',\n  ACCEPT_HANDOVER: 'android.permission.ACCEPT_HANDOVER',\n  ACTIVITY_RECOGNITION: 'android.permission.ACTIVITY_RECOGNITION',\n  ANSWER_PHONE_CALLS: 'android.permission.ANSWER_PHONE_CALLS',\n  READ_PHONE_NUMBERS: 'android.permission.READ_PHONE_NUMBERS',\n  UWB_RANGING: 'android.permission.UWB_RANGING',\n  POST_NOTIFICATION: 'android.permission.POST_NOTIFICATIONS', // Remove in 0.72\n  POST_NOTIFICATIONS: 'android.permission.POST_NOTIFICATIONS',\n  NEARBY_WIFI_DEVICES: 'android.permission.NEARBY_WIFI_DEVICES',\n});\n\n/**\n * `PermissionsAndroid` provides access to Android M's new permissions model.\n *\n * See https://reactnative.dev/docs/permissionsandroid\n */\n\nclass PermissionsAndroid {\n  PERMISSIONS: {|\n    ACCEPT_HANDOVER: string,\n    ACCESS_BACKGROUND_LOCATION: string,\n    ACCESS_COARSE_LOCATION: string,\n    ACCESS_FINE_LOCATION: string,\n    ACCESS_MEDIA_LOCATION: string,\n    ACTIVITY_RECOGNITION: string,\n    ADD_VOICEMAIL: string,\n    READ_VOICEMAIL: string,\n    WRITE_VOICEMAIL: string,\n    ANSWER_PHONE_CALLS: string,\n    BLUETOOTH_ADVERTISE: string,\n    BLUETOOTH_CONNECT: string,\n    BLUETOOTH_SCAN: string,\n    BODY_SENSORS: string,\n    BODY_SENSORS_BACKGROUND: string,\n    CALL_PHONE: string,\n    CAMERA: string,\n    GET_ACCOUNTS: string,\n    NEARBY_WIFI_DEVICES: string,\n    POST_NOTIFICATION: string, // Remove in 0.72\n    POST_NOTIFICATIONS: string,\n    PROCESS_OUTGOING_CALLS: string,\n    READ_CALENDAR: string,\n    READ_CALL_LOG: string,\n    READ_CONTACTS: string,\n    READ_EXTERNAL_STORAGE: string,\n    READ_MEDIA_IMAGES: string,\n    READ_MEDIA_VIDEO: string,\n    READ_MEDIA_AUDIO: string,\n    READ_PHONE_NUMBERS: string,\n    READ_PHONE_STATE: string,\n    READ_SMS: string,\n    RECEIVE_MMS: string,\n    RECEIVE_SMS: string,\n    RECEIVE_WAP_PUSH: string,\n    RECORD_AUDIO: string,\n    SEND_SMS: string,\n    USE_SIP: string,\n    UWB_RANGING: string,\n    WRITE_CALENDAR: string,\n    WRITE_CALL_LOG: string,\n    WRITE_CONTACTS: string,\n    WRITE_EXTERNAL_STORAGE: string,\n  |} = PERMISSIONS;\n  RESULTS: {|\n    DENIED: $TEMPORARY$string<'denied'>,\n    GRANTED: $TEMPORARY$string<'granted'>,\n    NEVER_ASK_AGAIN: $TEMPORARY$string<'never_ask_again'>,\n  |} = PERMISSION_REQUEST_RESULT;\n\n  /**\n   * DEPRECATED - use check\n   *\n   * Returns a promise resolving to a boolean value as to whether the specified\n   * permissions has been granted\n   *\n   * @deprecated\n   */\n  checkPermission(permission: PermissionType): Promise<boolean> {\n    console.warn(\n      '\"PermissionsAndroid.checkPermission\" is deprecated. Use \"PermissionsAndroid.check\" instead',\n    );\n    if (Platform.OS !== 'android') {\n      console.warn(\n        '\"PermissionsAndroid\" module works only for Android platform.',\n      );\n      return Promise.resolve(false);\n    }\n\n    invariant(\n      NativePermissionsAndroid,\n      'PermissionsAndroid is not installed correctly.',\n    );\n\n    return NativePermissionsAndroid.checkPermission(permission);\n  }\n\n  /**\n   * Returns a promise resolving to a boolean value as to whether the specified\n   * permissions has been granted\n   *\n   * See https://reactnative.dev/docs/permissionsandroid#check\n   */\n  check(permission: PermissionType): Promise<boolean> {\n    if (Platform.OS !== 'android') {\n      console.warn(\n        '\"PermissionsAndroid\" module works only for Android platform.',\n      );\n      return Promise.resolve(false);\n    }\n\n    invariant(\n      NativePermissionsAndroid,\n      'PermissionsAndroid is not installed correctly.',\n    );\n\n    return NativePermissionsAndroid.checkPermission(permission);\n  }\n\n  /**\n   * DEPRECATED - use request\n   *\n   * Prompts the user to enable a permission and returns a promise resolving to a\n   * boolean value indicating whether the user allowed or denied the request\n   *\n   * If the optional rationale argument is included (which is an object with a\n   * `title` and `message`), this function checks with the OS whether it is\n   * necessary to show a dialog explaining why the permission is needed\n   * (https://developer.android.com/training/permissions/requesting#explain)\n   * and then shows the system permission dialog\n   *\n   * @deprecated\n   */\n  async requestPermission(\n    permission: PermissionType,\n    rationale?: Rationale,\n  ): Promise<boolean> {\n    console.warn(\n      '\"PermissionsAndroid.requestPermission\" is deprecated. Use \"PermissionsAndroid.request\" instead',\n    );\n    if (Platform.OS !== 'android') {\n      console.warn(\n        '\"PermissionsAndroid\" module works only for Android platform.',\n      );\n      return Promise.resolve(false);\n    }\n\n    const response = await this.request(permission, rationale);\n    return response === this.RESULTS.GRANTED;\n  }\n\n  /**\n   * Prompts the user to enable a permission and returns a promise resolving to a\n   * string value indicating whether the user allowed or denied the request\n   *\n   * See https://reactnative.dev/docs/permissionsandroid#request\n   */\n  async request(\n    permission: PermissionType,\n    rationale?: Rationale,\n  ): Promise<PermissionStatus> {\n    if (Platform.OS !== 'android') {\n      console.warn(\n        '\"PermissionsAndroid\" module works only for Android platform.',\n      );\n      return Promise.resolve(this.RESULTS.DENIED);\n    }\n\n    invariant(\n      NativePermissionsAndroid,\n      'PermissionsAndroid is not installed correctly.',\n    );\n\n    if (rationale) {\n      const shouldShowRationale =\n        await NativePermissionsAndroid.shouldShowRequestPermissionRationale(\n          permission,\n        );\n\n      if (shouldShowRationale && !!NativeDialogManagerAndroid) {\n        return new Promise((resolve, reject) => {\n          const options = {\n            ...rationale,\n          };\n          NativeDialogManagerAndroid.showAlert(\n            /* $FlowFixMe[incompatible-exact] (>=0.111.0 site=react_native_fb)\n             * This comment suppresses an error found when Flow v0.111 was\n             * deployed. To see the error, delete this comment and run Flow.\n             */\n            options,\n            () => reject(new Error('Error showing rationale')),\n            () =>\n              resolve(NativePermissionsAndroid.requestPermission(permission)),\n          );\n        });\n      }\n    }\n    return NativePermissionsAndroid.requestPermission(permission);\n  }\n\n  /**\n   * Prompts the user to enable multiple permissions in the same dialog and\n   * returns an object with the permissions as keys and strings as values\n   * indicating whether the user allowed or denied the request\n   *\n   * See https://reactnative.dev/docs/permissionsandroid#requestmultiple\n   */\n  requestMultiple(\n    permissions: Array<PermissionType>,\n  ): Promise<{[permission: PermissionType]: PermissionStatus, ...}> {\n    if (Platform.OS !== 'android') {\n      console.warn(\n        '\"PermissionsAndroid\" module works only for Android platform.',\n      );\n      return Promise.resolve({});\n    }\n\n    invariant(\n      NativePermissionsAndroid,\n      'PermissionsAndroid is not installed correctly.',\n    );\n\n    return NativePermissionsAndroid.requestMultiplePermissions(permissions);\n  }\n}\n\nconst PermissionsAndroidInstance: PermissionsAndroid = new PermissionsAndroid();\n\nmodule.exports = PermissionsAndroidInstance;\n","/**\n * Copyright (c) Meta Platforms, Inc. and affiliates.\n *\n * This source code is licensed under the MIT license found in the\n * LICENSE file in the root directory of this source tree.\n *\n * @format\n * @flow\n */\n\nimport type {TurboModule} from '../TurboModule/RCTExport';\n\nimport * as TurboModuleRegistry from '../TurboModule/TurboModuleRegistry';\n\ntype Permissions = {|\n  alert: boolean,\n  badge: boolean,\n  sound: boolean,\n|};\n\ntype Notification = {|\n  +alertTitle?: ?string,\n  // Actual type: string | number\n  +fireDate?: ?number,\n  +alertBody?: ?string,\n  +alertAction?: ?string,\n  +userInfo?: ?Object,\n  +category?: ?string,\n  // Actual type: 'year' | 'month' | 'week' | 'day' | 'hour' | 'minute'\n  +repeatInterval?: ?string,\n  +applicationIconBadgeNumber?: ?number,\n  +isSilent?: ?boolean,\n  +soundName?: ?string,\n|};\n\nexport interface Spec extends TurboModule {\n  +getConstants: () => {||};\n  +onFinishRemoteNotification: (\n    notificationId: string,\n    /**\n     * Type:\n     *  'UIBackgroundFetchResultNewData' |\n     *  'UIBackgroundFetchResultNoData' |\n     *  'UIBackgroundFetchResultFailed'\n     */\n    fetchResult: string,\n  ) => void;\n  +setApplicationIconBadgeNumber: (num: number) => void;\n  +getApplicationIconBadgeNumber: (callback: (num: number) => void) => void;\n  +requestPermissions: (permission: {|\n    +alert: boolean,\n    +badge: boolean,\n    +sound: boolean,\n  |}) => Promise<Permissions>;\n  +abandonPermissions: () => void;\n  +checkPermissions: (callback: (permissions: Permissions) => void) => void;\n  +presentLocalNotification: (notification: Notification) => void;\n  +scheduleLocalNotification: (notification: Notification) => void;\n  +cancelAllLocalNotifications: () => void;\n  +cancelLocalNotifications: (userInfo: Object) => void;\n  +getInitialNotification: () => Promise<?Notification>;\n  +getScheduledLocalNotifications: (\n    callback: (notification: Notification) => void,\n  ) => void;\n  +removeAllDeliveredNotifications: () => void;\n  +removeDeliveredNotifications: (identifiers: Array<string>) => void;\n  +getDeliveredNotifications: (\n    callback: (notification: Array<Notification>) => void,\n  ) => void;\n  +getAuthorizationStatus: (\n    callback: (authorizationStatus: number) => void,\n  ) => void;\n  +addListener: (eventType: string) => void;\n  +removeListeners: (count: number) => void;\n}\n\nexport default (TurboModuleRegistry.get<Spec>(\n  'PushNotificationManager',\n): ?Spec);\n","/**\n * Copyright (c) Meta Platforms, Inc. and affiliates.\n *\n * This source code is licensed under the MIT license found in the\n * LICENSE file in the root directory of this source tree.\n *\n * @format\n * @flow\n */\n\nimport type {EventSubscription} from '../vendor/emitter/EventEmitter';\n\nimport NativeEventEmitter from '../EventEmitter/NativeEventEmitter';\nimport Platform from '../Utilities/Platform';\nimport NativePushNotificationManagerIOS from './NativePushNotificationManagerIOS';\nimport invariant from 'invariant';\n\ntype NativePushNotificationIOSEventDefinitions = {\n  remoteNotificationReceived: [\n    {\n      notificationId: string,\n      remote: boolean,\n      ...\n    },\n  ],\n  remoteNotificationsRegistered: [\n    {\n      deviceToken?: ?string,\n      ...\n    },\n  ],\n  remoteNotificationRegistrationError: [\n    {\n      message: string,\n      code: number,\n      details: {...},\n    },\n  ],\n  localNotificationReceived: [{...}],\n};\n\nconst PushNotificationEmitter =\n  new NativeEventEmitter<NativePushNotificationIOSEventDefinitions>(\n    // T88715063: NativeEventEmitter only used this parameter on iOS. Now it uses it on all platforms, so this code was modified automatically to preserve its behavior\n    // If you want to use the native module on other platforms, please remove this condition and test its behavior\n    Platform.OS !== 'ios' ? null : NativePushNotificationManagerIOS,\n  );\n\nconst _notifHandlers = new Map<string, void | EventSubscription>();\n\nconst DEVICE_NOTIF_EVENT = 'remoteNotificationReceived';\nconst NOTIF_REGISTER_EVENT = 'remoteNotificationsRegistered';\nconst NOTIF_REGISTRATION_ERROR_EVENT = 'remoteNotificationRegistrationError';\nconst DEVICE_LOCAL_NOTIF_EVENT = 'localNotificationReceived';\n\nexport type ContentAvailable = 1 | null | void;\n\nexport type FetchResult = {\n  NewData: string,\n  NoData: string,\n  ResultFailed: string,\n  ...\n};\n\n/**\n * An event emitted by PushNotificationIOS.\n */\nexport type PushNotificationEventName = $Keys<{\n  /**\n   * Fired when a remote notification is received. The handler will be invoked\n   * with an instance of `PushNotificationIOS`.\n   */\n  notification: string,\n  /**\n   * Fired when a local notification is received. The handler will be invoked\n   * with an instance of `PushNotificationIOS`.\n   */\n  localNotification: string,\n  /**\n   * Fired when the user registers for remote notifications. The handler will be\n   * invoked with a hex string representing the deviceToken.\n   */\n  register: string,\n  /**\n   * Fired when the user fails to register for remote notifications. Typically\n   * occurs when APNS is having issues, or the device is a simulator. The\n   * handler will be invoked with {message: string, code: number, details: any}.\n   */\n  registrationError: string,\n  ...\n}>;\n\n/**\n *\n * Handle push notifications for your app, including permission handling and\n * icon badge number.\n *\n * See https://reactnative.dev/docs/pushnotificationios\n */\nclass PushNotificationIOS {\n  _data: Object;\n  _alert: string | Object;\n  _sound: string;\n  _category: string;\n  _contentAvailable: ContentAvailable;\n  _badgeCount: number;\n  _notificationId: string;\n  _isRemote: boolean;\n  _remoteNotificationCompleteCallbackCalled: boolean;\n  _threadID: string;\n\n  static FetchResult: FetchResult = {\n    NewData: 'UIBackgroundFetchResultNewData',\n    NoData: 'UIBackgroundFetchResultNoData',\n    ResultFailed: 'UIBackgroundFetchResultFailed',\n  };\n\n  /**\n   * Schedules the localNotification for immediate presentation.\n   *\n   * See https://reactnative.dev/docs/pushnotificationios#presentlocalnotification\n   */\n  static presentLocalNotification(details: Object): void {\n    invariant(\n      NativePushNotificationManagerIOS,\n      'PushNotificationManager is not available.',\n    );\n    NativePushNotificationManagerIOS.presentLocalNotification(details);\n  }\n\n  /**\n   * Schedules the localNotification for future presentation.\n   *\n   * See https://reactnative.dev/docs/pushnotificationios#schedulelocalnotification\n   */\n  static scheduleLocalNotification(details: Object): void {\n    invariant(\n      NativePushNotificationManagerIOS,\n      'PushNotificationManager is not available.',\n    );\n    NativePushNotificationManagerIOS.scheduleLocalNotification(details);\n  }\n\n  /**\n   * Cancels all scheduled localNotifications.\n   *\n   * See https://reactnative.dev/docs/pushnotificationios#cancelalllocalnotifications\n   */\n  static cancelAllLocalNotifications(): void {\n    invariant(\n      NativePushNotificationManagerIOS,\n      'PushNotificationManager is not available.',\n    );\n    NativePushNotificationManagerIOS.cancelAllLocalNotifications();\n  }\n\n  /**\n   * Remove all delivered notifications from Notification Center.\n   *\n   * See https://reactnative.dev/docs/pushnotificationios#removealldeliverednotifications\n   */\n  static removeAllDeliveredNotifications(): void {\n    invariant(\n      NativePushNotificationManagerIOS,\n      'PushNotificationManager is not available.',\n    );\n    NativePushNotificationManagerIOS.removeAllDeliveredNotifications();\n  }\n\n  /**\n   * Provides you with a list of the app’s notifications that are still displayed in Notification Center.\n   *\n   * See https://reactnative.dev/docs/pushnotificationios#getdeliverednotifications\n   */\n  static getDeliveredNotifications(\n    callback: (notifications: Array<Object>) => void,\n  ): void {\n    invariant(\n      NativePushNotificationManagerIOS,\n      'PushNotificationManager is not available.',\n    );\n    NativePushNotificationManagerIOS.getDeliveredNotifications(callback);\n  }\n\n  /**\n   * Removes the specified notifications from Notification Center\n   *\n   * See https://reactnative.dev/docs/pushnotificationios#removedeliverednotifications\n   */\n  static removeDeliveredNotifications(identifiers: Array<string>): void {\n    invariant(\n      NativePushNotificationManagerIOS,\n      'PushNotificationManager is not available.',\n    );\n    NativePushNotificationManagerIOS.removeDeliveredNotifications(identifiers);\n  }\n\n  /**\n   * Sets the badge number for the app icon on the home screen.\n   *\n   * See https://reactnative.dev/docs/pushnotificationios#setapplicationiconbadgenumber\n   */\n  static setApplicationIconBadgeNumber(number: number): void {\n    invariant(\n      NativePushNotificationManagerIOS,\n      'PushNotificationManager is not available.',\n    );\n    NativePushNotificationManagerIOS.setApplicationIconBadgeNumber(number);\n  }\n\n  /**\n   * Gets the current badge number for the app icon on the home screen.\n   *\n   * See https://reactnative.dev/docs/pushnotificationios#getapplicationiconbadgenumber\n   */\n  static getApplicationIconBadgeNumber(callback: Function): void {\n    invariant(\n      NativePushNotificationManagerIOS,\n      'PushNotificationManager is not available.',\n    );\n    NativePushNotificationManagerIOS.getApplicationIconBadgeNumber(callback);\n  }\n\n  /**\n   * Cancel local notifications.\n   *\n   * See https://reactnative.dev/docs/pushnotificationios#cancellocalnotification\n   */\n  static cancelLocalNotifications(userInfo: Object): void {\n    invariant(\n      NativePushNotificationManagerIOS,\n      'PushNotificationManager is not available.',\n    );\n    NativePushNotificationManagerIOS.cancelLocalNotifications(userInfo);\n  }\n\n  /**\n   * Gets the local notifications that are currently scheduled.\n   *\n   * See https://reactnative.dev/docs/pushnotificationios#getscheduledlocalnotifications\n   */\n  static getScheduledLocalNotifications(callback: Function): void {\n    invariant(\n      NativePushNotificationManagerIOS,\n      'PushNotificationManager is not available.',\n    );\n    NativePushNotificationManagerIOS.getScheduledLocalNotifications(callback);\n  }\n\n  /**\n   * Attaches a listener to remote or local notification events while the app\n   * is running in the foreground or the background.\n   *\n   * See https://reactnative.dev/docs/pushnotificationios#addeventlistener\n   */\n  static addEventListener(\n    type: PushNotificationEventName,\n    handler: Function,\n  ): void {\n    invariant(\n      type === 'notification' ||\n        type === 'register' ||\n        type === 'registrationError' ||\n        type === 'localNotification',\n      'PushNotificationIOS only supports `notification`, `register`, `registrationError`, and `localNotification` events',\n    );\n    let listener;\n    if (type === 'notification') {\n      listener = PushNotificationEmitter.addListener(\n        DEVICE_NOTIF_EVENT,\n        notifData => {\n          handler(new PushNotificationIOS(notifData));\n        },\n      );\n    } else if (type === 'localNotification') {\n      listener = PushNotificationEmitter.addListener(\n        DEVICE_LOCAL_NOTIF_EVENT,\n        notifData => {\n          handler(new PushNotificationIOS(notifData));\n        },\n      );\n    } else if (type === 'register') {\n      listener = PushNotificationEmitter.addListener(\n        NOTIF_REGISTER_EVENT,\n        registrationInfo => {\n          handler(registrationInfo.deviceToken);\n        },\n      );\n    } else if (type === 'registrationError') {\n      listener = PushNotificationEmitter.addListener(\n        NOTIF_REGISTRATION_ERROR_EVENT,\n        errorInfo => {\n          handler(errorInfo);\n        },\n      );\n    }\n    _notifHandlers.set(type, listener);\n  }\n\n  /**\n   * Removes the event listener. Do this in `componentWillUnmount` to prevent\n   * memory leaks.\n   *\n   * See https://reactnative.dev/docs/pushnotificationios#removeeventlistener\n   */\n  static removeEventListener(\n    type: PushNotificationEventName,\n    handler: Function,\n  ): void {\n    invariant(\n      type === 'notification' ||\n        type === 'register' ||\n        type === 'registrationError' ||\n        type === 'localNotification',\n      'PushNotificationIOS only supports `notification`, `register`, `registrationError`, and `localNotification` events',\n    );\n    const listener = _notifHandlers.get(type);\n    if (!listener) {\n      return;\n    }\n    listener.remove();\n    _notifHandlers.delete(type);\n  }\n\n  /**\n   * Requests notification permissions from iOS, prompting the user's\n   * dialog box. By default, it will request all notification permissions, but\n   * a subset of these can be requested by passing a map of requested\n   * permissions.\n   *\n   * See https://reactnative.dev/docs/pushnotificationios#requestpermissions\n   */\n  static requestPermissions(permissions?: {\n    alert?: boolean,\n    badge?: boolean,\n    sound?: boolean,\n    ...\n  }): Promise<{\n    alert: boolean,\n    badge: boolean,\n    sound: boolean,\n    ...\n  }> {\n    let requestedPermissions = {\n      alert: true,\n      badge: true,\n      sound: true,\n    };\n    if (permissions) {\n      requestedPermissions = {\n        alert: !!permissions.alert,\n        badge: !!permissions.badge,\n        sound: !!permissions.sound,\n      };\n    }\n    invariant(\n      NativePushNotificationManagerIOS,\n      'PushNotificationManager is not available.',\n    );\n    return NativePushNotificationManagerIOS.requestPermissions(\n      requestedPermissions,\n    );\n  }\n\n  /**\n   * Unregister for all remote notifications received via Apple Push Notification service.\n   *\n   * See https://reactnative.dev/docs/pushnotificationios#abandonpermissions\n   */\n  static abandonPermissions(): void {\n    invariant(\n      NativePushNotificationManagerIOS,\n      'PushNotificationManager is not available.',\n    );\n    NativePushNotificationManagerIOS.abandonPermissions();\n  }\n\n  /**\n   * See what push permissions are currently enabled. `callback` will be\n   * invoked with a `permissions` object.\n   *\n   * See https://reactnative.dev/docs/pushnotificationios#checkpermissions\n   */\n  static checkPermissions(callback: Function): void {\n    invariant(typeof callback === 'function', 'Must provide a valid callback');\n    invariant(\n      NativePushNotificationManagerIOS,\n      'PushNotificationManager is not available.',\n    );\n    NativePushNotificationManagerIOS.checkPermissions(callback);\n  }\n\n  /**\n   * This method returns a promise that resolves to either the notification\n   * object if the app was launched by a push notification, or `null` otherwise.\n   *\n   * See https://reactnative.dev/docs/pushnotificationios#getinitialnotification\n   */\n  static getInitialNotification(): Promise<?PushNotificationIOS> {\n    invariant(\n      NativePushNotificationManagerIOS,\n      'PushNotificationManager is not available.',\n    );\n    return NativePushNotificationManagerIOS.getInitialNotification().then(\n      notification => {\n        return notification && new PushNotificationIOS(notification);\n      },\n    );\n  }\n\n  /**\n   * This method returns a promise that resolves to notification authorization status.\n   */\n  static getAuthorizationStatus(\n    callback: (authorizationStatus: number) => void,\n  ): void {\n    invariant(\n      NativePushNotificationManagerIOS,\n      'PushNotificationManager is not available.',\n    );\n\n    NativePushNotificationManagerIOS.getAuthorizationStatus(callback);\n  }\n\n  /**\n   * You will never need to instantiate `PushNotificationIOS` yourself.\n   * Listening to the `notification` event and invoking\n   * `getInitialNotification` is sufficient\n   *\n   */\n  constructor(nativeNotif: Object) {\n    this._data = {};\n    this._remoteNotificationCompleteCallbackCalled = false;\n    this._isRemote = nativeNotif.remote;\n    if (this._isRemote) {\n      this._notificationId = nativeNotif.notificationId;\n    }\n\n    if (nativeNotif.remote) {\n      // Extract data from Apple's `aps` dict as defined:\n      // https://developer.apple.com/library/ios/documentation/NetworkingInternet/Conceptual/RemoteNotificationsPG/Chapters/ApplePushService\n      Object.keys(nativeNotif).forEach(notifKey => {\n        const notifVal = nativeNotif[notifKey];\n        if (notifKey === 'aps') {\n          this._alert = notifVal.alert;\n          this._sound = notifVal.sound;\n          this._badgeCount = notifVal.badge;\n          this._category = notifVal.category;\n          this._contentAvailable = notifVal['content-available'];\n          this._threadID = notifVal['thread-id'];\n        } else {\n          this._data[notifKey] = notifVal;\n        }\n      });\n    } else {\n      // Local notifications aren't being sent down with `aps` dict.\n      this._badgeCount = nativeNotif.applicationIconBadgeNumber;\n      this._sound = nativeNotif.soundName;\n      this._alert = nativeNotif.alertBody;\n      this._data = nativeNotif.userInfo;\n      this._category = nativeNotif.category;\n    }\n  }\n\n  /**\n   * This method is available for remote notifications that have been received via:\n   * `application:didReceiveRemoteNotification:fetchCompletionHandler:`\n   *\n   * See https://reactnative.dev/docs/pushnotificationios#finish\n   */\n  finish(fetchResult: string): void {\n    if (\n      !this._isRemote ||\n      !this._notificationId ||\n      this._remoteNotificationCompleteCallbackCalled\n    ) {\n      return;\n    }\n    this._remoteNotificationCompleteCallbackCalled = true;\n\n    invariant(\n      NativePushNotificationManagerIOS,\n      'PushNotificationManager is not available.',\n    );\n    NativePushNotificationManagerIOS.onFinishRemoteNotification(\n      this._notificationId,\n      fetchResult,\n    );\n  }\n\n  /**\n   * An alias for `getAlert` to get the notification's main message string\n   */\n  getMessage(): ?string | ?Object {\n    // alias because \"alert\" is an ambiguous name\n    return this._alert;\n  }\n\n  /**\n   * Gets the sound string from the `aps` object\n   *\n   * See https://reactnative.dev/docs/pushnotificationios#getsound\n   */\n  getSound(): ?string {\n    return this._sound;\n  }\n\n  /**\n   * Gets the category string from the `aps` object\n   *\n   * See https://reactnative.dev/docs/pushnotificationios#getcategory\n   */\n  getCategory(): ?string {\n    return this._category;\n  }\n\n  /**\n   * Gets the notification's main message from the `aps` object\n   *\n   * See https://reactnative.dev/docs/pushnotificationios#getalert\n   */\n  getAlert(): ?string | ?Object {\n    return this._alert;\n  }\n\n  /**\n   * Gets the content-available number from the `aps` object\n   *\n   * See https://reactnative.dev/docs/pushnotificationios#getcontentavailable\n   */\n  getContentAvailable(): ContentAvailable {\n    return this._contentAvailable;\n  }\n\n  /**\n   * Gets the badge count number from the `aps` object\n   *\n   * See https://reactnative.dev/docs/pushnotificationios#getbadgecount\n   */\n  getBadgeCount(): ?number {\n    return this._badgeCount;\n  }\n\n  /**\n   * Gets the data object on the notif\n   *\n   * See https://reactnative.dev/docs/pushnotificationios#getdata\n   */\n  getData(): ?Object {\n    return this._data;\n  }\n\n  /**\n   * Gets the thread ID on the notif\n   *\n   * See https://reactnative.dev/docs/pushnotificationios#getthreadid\n   */\n  getThreadID(): ?string {\n    return this._threadID;\n  }\n}\n\nmodule.exports = PushNotificationIOS;\n","/**\n * Copyright (c) Meta Platforms, Inc. and affiliates.\n *\n * This source code is licensed under the MIT license found in the\n * LICENSE file in the root directory of this source tree.\n *\n * @format\n * @flow\n */\n\n'use strict';\n\nconst Settings = {\n  get(key: string): mixed {\n    console.warn('Settings is not yet supported on Android');\n    return null;\n  },\n\n  set(settings: Object) {\n    console.warn('Settings is not yet supported on Android');\n  },\n\n  watchKeys(keys: string | Array<string>, callback: Function): number {\n    console.warn('Settings is not yet supported on Android');\n    return -1;\n  },\n\n  clearWatch(watchId: number) {\n    console.warn('Settings is not yet supported on Android');\n  },\n};\n\nmodule.exports = Settings;\n","/**\n * Copyright (c) Meta Platforms, Inc. and affiliates.\n *\n * This source code is licensed under the MIT license found in the\n * LICENSE file in the root directory of this source tree.\n *\n * @flow strict\n * @format\n */\n\nimport type {TurboModule} from '../TurboModule/RCTExport';\n\nimport * as TurboModuleRegistry from '../TurboModule/TurboModuleRegistry';\n\nexport interface Spec extends TurboModule {\n  +getConstants: () => {||};\n  +share: (\n    content: {|title?: string, message?: string|},\n    dialogTitle?: string,\n  ) => Promise<{|action: string|}>;\n}\n\nexport default (TurboModuleRegistry.get<Spec>('ShareModule'): ?Spec);\n","/**\n * Copyright (c) Meta Platforms, Inc. and affiliates.\n *\n * This source code is licensed under the MIT license found in the\n * LICENSE file in the root directory of this source tree.\n *\n * @format\n * @flow strict-local\n */\n\nimport NativeActionSheetManager from '../ActionSheetIOS/NativeActionSheetManager';\nimport NativeShareModule from './NativeShareModule';\n\nconst processColor = require('../StyleSheet/processColor');\nconst Platform = require('../Utilities/Platform');\nconst invariant = require('invariant');\n\ntype Content =\n  | {\n      title?: string,\n      message: string,\n      ...\n    }\n  | {\n      title?: string,\n      url: string,\n      ...\n    };\ntype Options = {\n  dialogTitle?: string,\n  excludedActivityTypes?: Array<string>,\n  tintColor?: string,\n  subject?: string,\n  anchor?: number,\n  ...\n};\n\nclass Share {\n  /**\n   * Open a dialog to share text content.\n   *\n   * In iOS, Returns a Promise which will be invoked an object containing `action`, `activityType`.\n   * If the user dismissed the dialog, the Promise will still be resolved with action being `Share.dismissedAction`\n   * and all the other keys being undefined.\n   *\n   * In Android, Returns a Promise which always be resolved with action being `Share.sharedAction`.\n   *\n   * ### Content\n   *\n   *  - `message` - a message to share\n   *\n   * #### iOS\n   *\n   *  - `url` - a URL to share\n   *\n   * At least one of URL and message is required.\n   *\n   * #### Android\n   *\n   * - `title` - title of the message\n   *\n   * ### Options\n   *\n   * #### iOS\n   *\n   *  - `subject` - a subject to share via email\n   *  - `excludedActivityTypes`\n   *  - `tintColor`\n   *\n   * #### Android\n   *\n   *  - `dialogTitle`\n   *\n   */\n  static share(\n    content: Content,\n    options: Options = {},\n  ): Promise<{action: string, activityType: ?string}> {\n    invariant(\n      typeof content === 'object' && content !== null,\n      'Content to share must be a valid object',\n    );\n    invariant(\n      typeof content.url === 'string' || typeof content.message === 'string',\n      'At least one of URL and message is required',\n    );\n    invariant(\n      typeof options === 'object' && options !== null,\n      'Options must be a valid object',\n    );\n\n    if (Platform.OS === 'android') {\n      invariant(\n        NativeShareModule,\n        'ShareModule should be registered on Android.',\n      );\n      invariant(\n        content.title == null || typeof content.title === 'string',\n        'Invalid title: title should be a string.',\n      );\n\n      const newContent = {\n        title: content.title,\n        message:\n          typeof content.message === 'string' ? content.message : undefined,\n      };\n\n      return NativeShareModule.share(newContent, options.dialogTitle).then(\n        result => ({\n          activityType: null,\n          ...result,\n        }),\n      );\n    } else if (Platform.OS === 'ios') {\n      return new Promise((resolve, reject) => {\n        const tintColor = processColor(options.tintColor);\n\n        invariant(\n          tintColor == null || typeof tintColor === 'number',\n          'Unexpected color given for options.tintColor',\n        );\n\n        invariant(\n          NativeActionSheetManager,\n          'NativeActionSheetManager is not registered on iOS, but it should be.',\n        );\n\n        NativeActionSheetManager.showShareActionSheetWithOptions(\n          {\n            message:\n              typeof content.message === 'string' ? content.message : undefined,\n            url: typeof content.url === 'string' ? content.url : undefined,\n            subject: options.subject,\n            tintColor: typeof tintColor === 'number' ? tintColor : undefined,\n            anchor:\n              typeof options.anchor === 'number' ? options.anchor : undefined,\n            excludedActivityTypes: options.excludedActivityTypes,\n          },\n          error => reject(error),\n          (success, activityType) => {\n            if (success) {\n              resolve({\n                action: 'sharedAction',\n                activityType: activityType,\n              });\n            } else {\n              resolve({\n                action: 'dismissedAction',\n                activityType: null,\n              });\n            }\n          },\n        );\n      });\n    } else {\n      return Promise.reject(new Error('Unsupported platform'));\n    }\n  }\n\n  /**\n   * The content was successfully shared.\n   */\n  static sharedAction: 'sharedAction' = 'sharedAction';\n\n  /**\n   * The dialog has been dismissed.\n   * @platform ios\n   */\n  static dismissedAction: 'dismissedAction' = 'dismissedAction';\n}\n\nmodule.exports = Share;\n","/**\n * Copyright (c) Meta Platforms, Inc. and affiliates.\n *\n * This source code is licensed under the MIT license found in the\n * LICENSE file in the root directory of this source tree.\n *\n * @format\n * @flow strict-local\n */\n\nimport type {ColorValue} from './StyleSheet';\n\nexport type DynamicColorIOSTuple = {\n  light: ColorValue,\n  dark: ColorValue,\n  highContrastLight?: ColorValue,\n  highContrastDark?: ColorValue,\n};\n\nexport const DynamicColorIOS = (tuple: DynamicColorIOSTuple): ColorValue => {\n  throw new Error('DynamicColorIOS is not available on this platform.');\n};\n","/**\n * Copyright (c) Meta Platforms, Inc. and affiliates.\n *\n * This source code is licensed under the MIT license found in the\n * LICENSE file in the root directory of this source tree.\n *\n * @format\n * @flow strict-local\n */\n\nimport NativeEventEmitter from '../EventEmitter/NativeEventEmitter';\nimport Platform from '../Utilities/Platform';\nimport EventEmitter, {\n  type EventSubscription,\n} from '../vendor/emitter/EventEmitter';\nimport {isAsyncDebugging} from './DebugEnvironment';\nimport NativeAppearance, {\n  type AppearancePreferences,\n  type ColorSchemeName,\n} from './NativeAppearance';\nimport invariant from 'invariant';\n\ntype AppearanceListener = (preferences: AppearancePreferences) => void;\nconst eventEmitter = new EventEmitter<{\n  change: [AppearancePreferences],\n}>();\n\ntype NativeAppearanceEventDefinitions = {\n  appearanceChanged: [AppearancePreferences],\n};\n\nif (NativeAppearance) {\n  const nativeEventEmitter =\n    new NativeEventEmitter<NativeAppearanceEventDefinitions>(\n      // T88715063: NativeEventEmitter only used this parameter on iOS. Now it uses it on all platforms, so this code was modified automatically to preserve its behavior\n      // If you want to use the native module on other platforms, please remove this condition and test its behavior\n      Platform.OS !== 'ios' ? null : NativeAppearance,\n    );\n  nativeEventEmitter.addListener(\n    'appearanceChanged',\n    (newAppearance: AppearancePreferences) => {\n      const {colorScheme} = newAppearance;\n      invariant(\n        colorScheme === 'dark' ||\n          colorScheme === 'light' ||\n          colorScheme == null,\n        \"Unrecognized color scheme. Did you mean 'dark' or 'light'?\",\n      );\n      eventEmitter.emit('change', {colorScheme});\n    },\n  );\n}\n\nmodule.exports = {\n  /**\n   * Note: Although color scheme is available immediately, it may change at any\n   * time. Any rendering logic or styles that depend on this should try to call\n   * this function on every render, rather than caching the value (for example,\n   * using inline styles rather than setting a value in a `StyleSheet`).\n   *\n   * Example: `const colorScheme = Appearance.getColorScheme();`\n   *\n   * @returns {?ColorSchemeName} Value for the color scheme preference.\n   */\n  getColorScheme(): ?ColorSchemeName {\n    if (__DEV__) {\n      if (isAsyncDebugging) {\n        // Hard code light theme when using the async debugger as\n        // sync calls aren't supported\n        return 'light';\n      }\n    }\n\n    // TODO: (hramos) T52919652 Use ?ColorSchemeName once codegen supports union\n    const nativeColorScheme: ?string =\n      NativeAppearance == null\n        ? null\n        : NativeAppearance.getColorScheme() || null;\n    invariant(\n      nativeColorScheme === 'dark' ||\n        nativeColorScheme === 'light' ||\n        nativeColorScheme == null,\n      \"Unrecognized color scheme. Did you mean 'dark' or 'light'?\",\n    );\n    return nativeColorScheme;\n  },\n\n  /**\n   * Add an event handler that is fired when appearance preferences change.\n   */\n  addChangeListener(listener: AppearanceListener): EventSubscription {\n    return eventEmitter.addListener('change', listener);\n  },\n};\n","/**\n * Copyright (c) Meta Platforms, Inc. and affiliates.\n *\n * This source code is licensed under the MIT license found in the\n * LICENSE file in the root directory of this source tree.\n *\n * @format\n * @flow strict\n */\n\nexport let isAsyncDebugging: boolean = false;\n\nif (__DEV__) {\n  // These native interfaces don't exist in asynchronous debugging environments.\n  isAsyncDebugging =\n    !global.nativeExtensions &&\n    !global.nativeCallSyncHook &&\n    !global.RN$Bridgeless;\n}\n","/**\n * Copyright (c) Meta Platforms, Inc. and affiliates.\n *\n * This source code is licensed under the MIT license found in the\n * LICENSE file in the root directory of this source tree.\n *\n * @flow strict\n * @format\n */\n\nimport type {TurboModule} from '../TurboModule/RCTExport';\n\nimport * as TurboModuleRegistry from '../TurboModule/TurboModuleRegistry';\n\nexport type ColorSchemeName = 'light' | 'dark';\n\nexport type AppearancePreferences = {|\n  // TODO: (hramos) T52919652 Use ?ColorSchemeName once codegen supports union\n  // types.\n  /* 'light' | 'dark' */\n  colorScheme?: ?string,\n|};\n\nexport interface Spec extends TurboModule {\n  // TODO: (hramos) T52919652 Use ?ColorSchemeName once codegen supports union\n  // types.\n  /* 'light' | 'dark' */\n  +getColorScheme: () => ?string;\n\n  // RCTEventEmitter\n  +addListener: (eventName: string) => void;\n  +removeListeners: (count: number) => void;\n}\n\nexport default (TurboModuleRegistry.get<Spec>('Appearance'): ?Spec);\n","/**\n * Copyright (c) Meta Platforms, Inc. and affiliates.\n *\n * This source code is licensed under the MIT license found in the\n * LICENSE file in the root directory of this source tree.\n *\n * @format\n * @flow strict-local\n */\n\n'use strict';\n\nimport type {ColorSchemeName} from './NativeAppearance';\n\nimport Appearance from './Appearance';\nimport {useSyncExternalStore} from 'use-sync-external-store/shim';\n\nexport default function useColorScheme(): ?ColorSchemeName {\n  return useSyncExternalStore(\n    callback => {\n      const appearanceSubscription = Appearance.addChangeListener(callback);\n      return () => appearanceSubscription.remove();\n    },\n    () => Appearance.getColorScheme(),\n  );\n}\n","/**\n * Copyright (c) Meta Platforms, Inc. and affiliates.\n *\n * This source code is licensed under the MIT license found in the\n * LICENSE file in the root directory of this source tree.\n *\n * @format\n * @flow strict-local\n */\n\nimport Dimensions from './Dimensions';\nimport {\n  type DisplayMetrics,\n  type DisplayMetricsAndroid,\n} from './NativeDeviceInfo';\nimport {useEffect, useState} from 'react';\n\nexport default function useWindowDimensions():\n  | DisplayMetrics\n  | DisplayMetricsAndroid {\n  const [dimensions, setDimensions] = useState(() => Dimensions.get('window'));\n  useEffect(() => {\n    function handleChange({\n      window,\n    }:\n      | $FlowFixMe\n      | $TEMPORARY$object<{window: DisplayMetrics | DisplayMetricsAndroid}>) {\n      if (\n        dimensions.width !== window.width ||\n        dimensions.height !== window.height ||\n        dimensions.scale !== window.scale ||\n        dimensions.fontScale !== window.fontScale\n      ) {\n        setDimensions(window);\n      }\n    }\n    const subscription = Dimensions.addEventListener('change', handleChange);\n    // We might have missed an update between calling `get` in render and\n    // `addEventListener` in this handler, so we set it here. If there was\n    // no change, React will filter out this update as a no-op.\n    handleChange({window: Dimensions.get('window')});\n    return () => {\n      subscription.remove();\n    };\n  }, [dimensions]);\n  return dimensions;\n}\n","/**\n * Copyright (c) Meta Platforms, Inc. and affiliates.\n *\n * This source code is licensed under the MIT license found in the\n * LICENSE file in the root directory of this source tree.\n *\n * @flow strict\n * @format\n */\n\nimport type {TurboModule} from '../TurboModule/RCTExport';\n\nimport * as TurboModuleRegistry from '../TurboModule/TurboModuleRegistry';\n\nexport interface Spec extends TurboModule {\n  +getConstants: () => {||};\n  +vibrate: (pattern: number) => void;\n\n  // Android only\n  +vibrateByPattern: (pattern: Array<number>, repeat: number) => void;\n  +cancel: () => void;\n}\n\nexport default (TurboModuleRegistry.getEnforcing<Spec>('Vibration'): Spec);\n","/**\n * Copyright (c) Meta Platforms, Inc. and affiliates.\n *\n * This source code is licensed under the MIT license found in the\n * LICENSE file in the root directory of this source tree.\n *\n * @format\n * @flow strict\n * @jsdoc\n */\n\nimport NativeVibration from './NativeVibration';\n\nconst Platform = require('../Utilities/Platform');\n\n/**\n * Vibration API\n *\n * See https://reactnative.dev/docs/vibration\n */\n\nlet _vibrating: boolean = false;\nlet _id: number = 0; // _id is necessary to prevent race condition.\nconst _default_vibration_length = 400;\n\nfunction vibrateByPattern(pattern: Array<number>, repeat: boolean = false) {\n  if (_vibrating) {\n    return;\n  }\n  _vibrating = true;\n  if (pattern[0] === 0) {\n    NativeVibration.vibrate(_default_vibration_length);\n    // $FlowFixMe[reassign-const]\n    pattern = pattern.slice(1);\n  }\n  if (pattern.length === 0) {\n    _vibrating = false;\n    return;\n  }\n  setTimeout(() => vibrateScheduler(++_id, pattern, repeat, 1), pattern[0]);\n}\n\nfunction vibrateScheduler(\n  id: number,\n  pattern: Array<number>,\n  repeat: boolean,\n  nextIndex: number,\n) {\n  if (!_vibrating || id !== _id) {\n    return;\n  }\n  NativeVibration.vibrate(_default_vibration_length);\n  if (nextIndex >= pattern.length) {\n    if (repeat) {\n      // $FlowFixMe[reassign-const]\n      nextIndex = 0;\n    } else {\n      _vibrating = false;\n      return;\n    }\n  }\n  setTimeout(\n    () => vibrateScheduler(id, pattern, repeat, nextIndex + 1),\n    pattern[nextIndex],\n  );\n}\n\nconst Vibration = {\n  /**\n   * Trigger a vibration with specified `pattern`.\n   *\n   * See https://reactnative.dev/docs/vibration#vibrate\n   */\n  vibrate: function (\n    pattern: number | Array<number> = _default_vibration_length,\n    repeat: boolean = false,\n  ) {\n    if (Platform.OS === 'android') {\n      if (typeof pattern === 'number') {\n        NativeVibration.vibrate(pattern);\n      } else if (Array.isArray(pattern)) {\n        NativeVibration.vibrateByPattern(pattern, repeat ? 0 : -1);\n      } else {\n        throw new Error('Vibration pattern should be a number or array');\n      }\n    } else {\n      if (_vibrating) {\n        return;\n      }\n      if (typeof pattern === 'number') {\n        NativeVibration.vibrate(pattern);\n      } else if (Array.isArray(pattern)) {\n        vibrateByPattern(pattern, repeat);\n      } else {\n        throw new Error('Vibration pattern should be a number or array');\n      }\n    }\n  },\n  /**\n   * Stop vibration\n   *\n   * See https://reactnative.dev/docs/vibration#cancel\n   */\n  cancel: function () {\n    if (Platform.OS === 'ios') {\n      _vibrating = false;\n    } else {\n      NativeVibration.cancel();\n    }\n  },\n};\n\nmodule.exports = Vibration;\n","/**\n * Copyright (c) Meta Platforms, Inc. and affiliates.\n *\n * This source code is licensed under the MIT license found in the\n * LICENSE file in the root directory of this source tree.\n *\n * @flow\n * @format\n */\n\n'use strict';\n\nimport type {IgnorePattern} from '../LogBox/Data/LogBoxData';\n\nconst LogBox = require('../LogBox/LogBox');\nconst React = require('react');\n\ntype Props = $ReadOnly<{||}>;\n\nlet YellowBox;\nif (__DEV__) {\n  YellowBox = class extends React.Component<Props> {\n    static ignoreWarnings(patterns: $ReadOnlyArray<IgnorePattern>): void {\n      console.warn(\n        'YellowBox has been replaced with LogBox. Please call LogBox.ignoreLogs() instead.',\n      );\n\n      LogBox.ignoreLogs(patterns);\n    }\n\n    static install(): void {\n      console.warn(\n        'YellowBox has been replaced with LogBox. Please call LogBox.install() instead.',\n      );\n      LogBox.install();\n    }\n\n    static uninstall(): void {\n      console.warn(\n        'YellowBox has been replaced with LogBox. Please call LogBox.uninstall() instead.',\n      );\n      LogBox.uninstall();\n    }\n\n    render(): React.Node {\n      return null;\n    }\n  };\n} else {\n  YellowBox = class extends React.Component<Props> {\n    static ignoreWarnings(patterns: $ReadOnlyArray<IgnorePattern>): void {\n      // Do nothing.\n    }\n\n    static install(): void {\n      // Do nothing.\n    }\n\n    static uninstall(): void {\n      // Do nothing.\n    }\n\n    render(): React.Node {\n      return null;\n    }\n  };\n}\n\n// $FlowFixMe[method-unbinding]\nmodule.exports = (YellowBox: Class<React.Component<Props>> & {\n  ignoreWarnings($ReadOnlyArray<IgnorePattern>): void,\n  install(): void,\n  uninstall(): void,\n  ...\n});\n","/**\n * Copyright (c) Meta Platforms, Inc. and affiliates.\n *\n * This source code is licensed under the MIT license found in the\n * LICENSE file in the root directory of this source tree.\n *\n * @format\n * @flow\n */\n\n'use strict';\n\n// Components\nimport typeof AccessibilityInfo from './Libraries/Components/AccessibilityInfo/AccessibilityInfo';\nimport typeof ActivityIndicator from './Libraries/Components/ActivityIndicator/ActivityIndicator';\nimport typeof Button from './Libraries/Components/Button';\nimport typeof DatePickerIOS from './Libraries/Components/DatePicker/DatePickerIOS';\nimport typeof DrawerLayoutAndroid from './Libraries/Components/DrawerAndroid/DrawerLayoutAndroid';\nimport typeof FlatList from './Libraries/Lists/FlatList';\nimport typeof Image from './Libraries/Image/Image';\nimport typeof ImageBackground from './Libraries/Image/ImageBackground';\nimport typeof InputAccessoryView from './Libraries/Components/TextInput/InputAccessoryView';\nimport typeof KeyboardAvoidingView from './Libraries/Components/Keyboard/KeyboardAvoidingView';\nimport typeof Modal from './Libraries/Modal/Modal';\nimport typeof Pressable from './Libraries/Components/Pressable/Pressable';\nimport typeof ProgressBarAndroid from './Libraries/Components/ProgressBarAndroid/ProgressBarAndroid';\nimport typeof ProgressViewIOS from './Libraries/Components/ProgressViewIOS/ProgressViewIOS';\nimport typeof RefreshControl from './Libraries/Components/RefreshControl/RefreshControl';\nimport typeof SafeAreaView from './Libraries/Components/SafeAreaView/SafeAreaView';\nimport typeof ScrollView from './Libraries/Components/ScrollView/ScrollView';\nimport typeof SectionList from './Libraries/Lists/SectionList';\nimport typeof Slider from './Libraries/Components/Slider/Slider';\nimport typeof StatusBar from './Libraries/Components/StatusBar/StatusBar';\nimport typeof Switch from './Libraries/Components/Switch/Switch';\nimport typeof Text from './Libraries/Text/Text';\nimport typeof TextInput from './Libraries/Components/TextInput/TextInput';\nimport typeof Touchable from './Libraries/Components/Touchable/Touchable';\nimport typeof TouchableHighlight from './Libraries/Components/Touchable/TouchableHighlight';\nimport typeof TouchableNativeFeedback from './Libraries/Components/Touchable/TouchableNativeFeedback';\nimport typeof TouchableOpacity from './Libraries/Components/Touchable/TouchableOpacity';\nimport typeof TouchableWithoutFeedback from './Libraries/Components/Touchable/TouchableWithoutFeedback';\nimport typeof View from './Libraries/Components/View/View';\nimport typeof VirtualizedList from './Libraries/Lists/VirtualizedList';\nimport typeof VirtualizedSectionList from './Libraries/Lists/VirtualizedSectionList';\n\n// APIs\nimport typeof ActionSheetIOS from './Libraries/ActionSheetIOS/ActionSheetIOS';\nimport typeof Alert from './Libraries/Alert/Alert';\nimport typeof Animated from './Libraries/Animated/Animated';\nimport typeof * as AnimatedModule from './Libraries/Animated/Animated';\nimport typeof Appearance from './Libraries/Utilities/Appearance';\nimport typeof AppRegistry from './Libraries/ReactNative/AppRegistry';\nimport typeof AppState from './Libraries/AppState/AppState';\nimport typeof BackHandler from './Libraries/Utilities/BackHandler';\nimport typeof Clipboard from './Libraries/Components/Clipboard/Clipboard';\nimport typeof DeviceInfo from './Libraries/Utilities/DeviceInfo';\nimport typeof DevSettings from './Libraries/Utilities/DevSettings';\nimport typeof Dimensions from './Libraries/Utilities/Dimensions';\nimport typeof Easing from './Libraries/Animated/Easing';\nimport typeof ReactNative from './Libraries/Renderer/shims/ReactNative';\nimport typeof I18nManager from './Libraries/ReactNative/I18nManager';\nimport typeof InteractionManager from './Libraries/Interaction/InteractionManager';\nimport typeof Keyboard from './Libraries/Components/Keyboard/Keyboard';\nimport typeof LayoutAnimation from './Libraries/LayoutAnimation/LayoutAnimation';\nimport typeof Linking from './Libraries/Linking/Linking';\nimport typeof LogBox from './Libraries/LogBox/LogBox';\nimport typeof NativeDialogManagerAndroid from './Libraries/NativeModules/specs/NativeDialogManagerAndroid';\nimport typeof NativeEventEmitter from './Libraries/EventEmitter/NativeEventEmitter';\nimport typeof Networking from './Libraries/Network/RCTNetworking';\nimport typeof PanResponder from './Libraries/Interaction/PanResponder';\nimport typeof PermissionsAndroid from './Libraries/PermissionsAndroid/PermissionsAndroid';\nimport typeof PixelRatio from './Libraries/Utilities/PixelRatio';\nimport typeof PushNotificationIOS from './Libraries/PushNotificationIOS/PushNotificationIOS';\nimport typeof Settings from './Libraries/Settings/Settings';\nimport typeof Share from './Libraries/Share/Share';\nimport typeof StyleSheet from './Libraries/StyleSheet/StyleSheet';\nimport typeof * as Systrace from './Libraries/Performance/Systrace';\nimport typeof ToastAndroid from './Libraries/Components/ToastAndroid/ToastAndroid';\nimport typeof * as TurboModuleRegistry from './Libraries/TurboModule/TurboModuleRegistry';\nimport typeof UIManager from './Libraries/ReactNative/UIManager';\nimport typeof useAnimatedValue from './Libraries/Animated/useAnimatedValue';\nimport typeof useColorScheme from './Libraries/Utilities/useColorScheme';\nimport typeof useWindowDimensions from './Libraries/Utilities/useWindowDimensions';\nimport typeof UTFSequence from './Libraries/UTFSequence';\nimport typeof Vibration from './Libraries/Vibration/Vibration';\nimport typeof YellowBox from './Libraries/YellowBox/YellowBoxDeprecated';\n\n// Plugins\nimport typeof {DynamicColorIOS} from './Libraries/StyleSheet/PlatformColorValueTypesIOS';\nimport typeof NativeModules from './Libraries/BatchedBridge/NativeModules';\nimport typeof Platform from './Libraries/Utilities/Platform';\nimport typeof {PlatformColor} from './Libraries/StyleSheet/PlatformColorValueTypes';\nimport typeof processColor from './Libraries/StyleSheet/processColor';\nimport typeof RCTDeviceEventEmitter from './Libraries/EventEmitter/RCTDeviceEventEmitter';\nimport typeof RCTNativeAppEventEmitter from './Libraries/EventEmitter/RCTNativeAppEventEmitter';\nimport typeof {RootTagContext} from './Libraries/ReactNative/RootTag';\n\nimport type {HostComponent as _HostComponentInternal} from './Libraries/Renderer/shims/ReactNativeTypes';\n\nexport type HostComponent<T> = _HostComponentInternal<T>;\n\nconst invariant = require('invariant');\nconst warnOnce = require('./Libraries/Utilities/warnOnce');\n\nmodule.exports = {\n  // Components\n  get AccessibilityInfo(): AccessibilityInfo {\n    return require('./Libraries/Components/AccessibilityInfo/AccessibilityInfo')\n      .default;\n  },\n  get ActivityIndicator(): ActivityIndicator {\n    return require('./Libraries/Components/ActivityIndicator/ActivityIndicator');\n  },\n  get Button(): Button {\n    return require('./Libraries/Components/Button');\n  },\n  // $FlowFixMe[value-as-type]\n  get DatePickerIOS(): DatePickerIOS {\n    warnOnce(\n      'DatePickerIOS-merged',\n      'DatePickerIOS has been merged with DatePickerAndroid and will be removed in a future release. ' +\n        \"It can now be installed and imported from '@react-native-community/datetimepicker' instead of 'react-native'. \" +\n        'See https://github.com/react-native-datetimepicker/datetimepicker',\n    );\n    return require('./Libraries/Components/DatePicker/DatePickerIOS');\n  },\n  // $FlowFixMe[value-as-type]\n  get DrawerLayoutAndroid(): DrawerLayoutAndroid {\n    return require('./Libraries/Components/DrawerAndroid/DrawerLayoutAndroid');\n  },\n  get FlatList(): FlatList {\n    return require('./Libraries/Lists/FlatList');\n  },\n  get Image(): Image {\n    return require('./Libraries/Image/Image');\n  },\n  get ImageBackground(): ImageBackground {\n    return require('./Libraries/Image/ImageBackground');\n  },\n  get InputAccessoryView(): InputAccessoryView {\n    return require('./Libraries/Components/TextInput/InputAccessoryView');\n  },\n  get KeyboardAvoidingView(): KeyboardAvoidingView {\n    return require('./Libraries/Components/Keyboard/KeyboardAvoidingView')\n      .default;\n  },\n  get Modal(): Modal {\n    return require('./Libraries/Modal/Modal');\n  },\n  get Pressable(): Pressable {\n    return require('./Libraries/Components/Pressable/Pressable').default;\n  },\n  // $FlowFixMe[value-as-type]\n  get ProgressBarAndroid(): ProgressBarAndroid {\n    warnOnce(\n      'progress-bar-android-moved',\n      'ProgressBarAndroid has been extracted from react-native core and will be removed in a future release. ' +\n        \"It can now be installed and imported from '@react-native-community/progress-bar-android' instead of 'react-native'. \" +\n        'See https://github.com/react-native-progress-view/progress-bar-android',\n    );\n    return require('./Libraries/Components/ProgressBarAndroid/ProgressBarAndroid');\n  },\n  // $FlowFixMe[value-as-type]\n  get ProgressViewIOS(): ProgressViewIOS {\n    warnOnce(\n      'progress-view-ios-moved',\n      'ProgressViewIOS has been extracted from react-native core and will be removed in a future release. ' +\n        \"It can now be installed and imported from '@react-native-community/progress-view' instead of 'react-native'. \" +\n        'See https://github.com/react-native-progress-view/progress-view',\n    );\n    return require('./Libraries/Components/ProgressViewIOS/ProgressViewIOS');\n  },\n  get RefreshControl(): RefreshControl {\n    return require('./Libraries/Components/RefreshControl/RefreshControl');\n  },\n  get SafeAreaView(): SafeAreaView {\n    return require('./Libraries/Components/SafeAreaView/SafeAreaView').default;\n  },\n  get ScrollView(): ScrollView {\n    return require('./Libraries/Components/ScrollView/ScrollView');\n  },\n  get SectionList(): SectionList {\n    return require('./Libraries/Lists/SectionList').default;\n  },\n  get Slider(): Slider {\n    warnOnce(\n      'slider-moved',\n      'Slider has been extracted from react-native core and will be removed in a future release. ' +\n        \"It can now be installed and imported from '@react-native-community/slider' instead of 'react-native'. \" +\n        'See https://github.com/callstack/react-native-slider',\n    );\n    return require('./Libraries/Components/Slider/Slider');\n  },\n  get StatusBar(): StatusBar {\n    return require('./Libraries/Components/StatusBar/StatusBar');\n  },\n  get Switch(): Switch {\n    return require('./Libraries/Components/Switch/Switch').default;\n  },\n  get Text(): Text {\n    return require('./Libraries/Text/Text');\n  },\n  get TextInput(): TextInput {\n    return require('./Libraries/Components/TextInput/TextInput');\n  },\n  get Touchable(): Touchable {\n    return require('./Libraries/Components/Touchable/Touchable');\n  },\n  get TouchableHighlight(): TouchableHighlight {\n    return require('./Libraries/Components/Touchable/TouchableHighlight');\n  },\n  get TouchableNativeFeedback(): TouchableNativeFeedback {\n    return require('./Libraries/Components/Touchable/TouchableNativeFeedback');\n  },\n  get TouchableOpacity(): TouchableOpacity {\n    return require('./Libraries/Components/Touchable/TouchableOpacity');\n  },\n  get TouchableWithoutFeedback(): TouchableWithoutFeedback {\n    return require('./Libraries/Components/Touchable/TouchableWithoutFeedback');\n  },\n  get View(): View {\n    return require('./Libraries/Components/View/View');\n  },\n  get VirtualizedList(): VirtualizedList {\n    return require('./Libraries/Lists/VirtualizedList').default;\n  },\n  get VirtualizedSectionList(): VirtualizedSectionList {\n    return require('./Libraries/Lists/VirtualizedSectionList');\n  },\n\n  // APIs\n  get ActionSheetIOS(): ActionSheetIOS {\n    return require('./Libraries/ActionSheetIOS/ActionSheetIOS');\n  },\n  get Alert(): Alert {\n    return require('./Libraries/Alert/Alert');\n  },\n  // Include any types exported in the Animated module together with its default export, so\n  // you can references types such as Animated.Numeric\n  get Animated(): {...$Diff<AnimatedModule, {default: any}>, ...Animated} {\n    // $FlowExpectedError[prop-missing]: we only return the default export, all other exports are types\n    return require('./Libraries/Animated/Animated').default;\n  },\n  get Appearance(): Appearance {\n    return require('./Libraries/Utilities/Appearance');\n  },\n  get AppRegistry(): AppRegistry {\n    return require('./Libraries/ReactNative/AppRegistry');\n  },\n  get AppState(): AppState {\n    return require('./Libraries/AppState/AppState');\n  },\n  get BackHandler(): BackHandler {\n    return require('./Libraries/Utilities/BackHandler');\n  },\n  get Clipboard(): Clipboard {\n    warnOnce(\n      'clipboard-moved',\n      'Clipboard has been extracted from react-native core and will be removed in a future release. ' +\n        \"It can now be installed and imported from '@react-native-clipboard/clipboard' instead of 'react-native'. \" +\n        'See https://github.com/react-native-clipboard/clipboard',\n    );\n    return require('./Libraries/Components/Clipboard/Clipboard');\n  },\n  get DeviceInfo(): DeviceInfo {\n    return require('./Libraries/Utilities/DeviceInfo');\n  },\n  get DevSettings(): DevSettings {\n    return require('./Libraries/Utilities/DevSettings');\n  },\n  get Dimensions(): Dimensions {\n    return require('./Libraries/Utilities/Dimensions');\n  },\n  get Easing(): Easing {\n    return require('./Libraries/Animated/Easing').default;\n  },\n  get findNodeHandle(): $PropertyType<ReactNative, 'findNodeHandle'> {\n    return require('./Libraries/ReactNative/RendererProxy').findNodeHandle;\n  },\n  get I18nManager(): I18nManager {\n    return require('./Libraries/ReactNative/I18nManager');\n  },\n  get InteractionManager(): InteractionManager {\n    return require('./Libraries/Interaction/InteractionManager');\n  },\n  get Keyboard(): Keyboard {\n    return require('./Libraries/Components/Keyboard/Keyboard');\n  },\n  get LayoutAnimation(): LayoutAnimation {\n    return require('./Libraries/LayoutAnimation/LayoutAnimation');\n  },\n  get Linking(): Linking {\n    return require('./Libraries/Linking/Linking');\n  },\n  get LogBox(): LogBox {\n    return require('./Libraries/LogBox/LogBox');\n  },\n  get NativeDialogManagerAndroid(): NativeDialogManagerAndroid {\n    return require('./Libraries/NativeModules/specs/NativeDialogManagerAndroid')\n      .default;\n  },\n  get NativeEventEmitter(): NativeEventEmitter {\n    return require('./Libraries/EventEmitter/NativeEventEmitter').default;\n  },\n  get Networking(): Networking {\n    return require('./Libraries/Network/RCTNetworking');\n  },\n  get PanResponder(): PanResponder {\n    return require('./Libraries/Interaction/PanResponder');\n  },\n  get PermissionsAndroid(): PermissionsAndroid {\n    return require('./Libraries/PermissionsAndroid/PermissionsAndroid');\n  },\n  get PixelRatio(): PixelRatio {\n    return require('./Libraries/Utilities/PixelRatio');\n  },\n  get PushNotificationIOS(): PushNotificationIOS {\n    warnOnce(\n      'pushNotificationIOS-moved',\n      'PushNotificationIOS has been extracted from react-native core and will be removed in a future release. ' +\n        \"It can now be installed and imported from '@react-native-community/push-notification-ios' instead of 'react-native'. \" +\n        'See https://github.com/react-native-push-notification-ios/push-notification-ios',\n    );\n    return require('./Libraries/PushNotificationIOS/PushNotificationIOS');\n  },\n  get Settings(): Settings {\n    return require('./Libraries/Settings/Settings');\n  },\n  get Share(): Share {\n    return require('./Libraries/Share/Share');\n  },\n  get StyleSheet(): StyleSheet {\n    return require('./Libraries/StyleSheet/StyleSheet');\n  },\n  get Systrace(): Systrace {\n    return require('./Libraries/Performance/Systrace');\n  },\n  // $FlowFixMe[value-as-type]\n  get ToastAndroid(): ToastAndroid {\n    return require('./Libraries/Components/ToastAndroid/ToastAndroid');\n  },\n  get TurboModuleRegistry(): TurboModuleRegistry {\n    return require('./Libraries/TurboModule/TurboModuleRegistry');\n  },\n  get UIManager(): UIManager {\n    return require('./Libraries/ReactNative/UIManager');\n  },\n  get unstable_batchedUpdates(): $PropertyType<\n    ReactNative,\n    'unstable_batchedUpdates',\n  > {\n    return require('./Libraries/ReactNative/RendererProxy')\n      .unstable_batchedUpdates;\n  },\n  get useAnimatedValue(): useAnimatedValue {\n    return require('./Libraries/Animated/useAnimatedValue').default;\n  },\n  get useColorScheme(): useColorScheme {\n    return require('./Libraries/Utilities/useColorScheme').default;\n  },\n  get useWindowDimensions(): useWindowDimensions {\n    return require('./Libraries/Utilities/useWindowDimensions').default;\n  },\n  get UTFSequence(): UTFSequence {\n    return require('./Libraries/UTFSequence');\n  },\n  get Vibration(): Vibration {\n    return require('./Libraries/Vibration/Vibration');\n  },\n  get YellowBox(): YellowBox {\n    return require('./Libraries/YellowBox/YellowBoxDeprecated');\n  },\n\n  // Plugins\n  get DeviceEventEmitter(): RCTDeviceEventEmitter {\n    return require('./Libraries/EventEmitter/RCTDeviceEventEmitter').default;\n  },\n  get DynamicColorIOS(): DynamicColorIOS {\n    return require('./Libraries/StyleSheet/PlatformColorValueTypesIOS')\n      .DynamicColorIOS;\n  },\n  get NativeAppEventEmitter(): RCTNativeAppEventEmitter {\n    return require('./Libraries/EventEmitter/RCTNativeAppEventEmitter');\n  },\n  get NativeModules(): NativeModules {\n    return require('./Libraries/BatchedBridge/NativeModules');\n  },\n  get Platform(): Platform {\n    return require('./Libraries/Utilities/Platform');\n  },\n  get PlatformColor(): PlatformColor {\n    return require('./Libraries/StyleSheet/PlatformColorValueTypes')\n      .PlatformColor;\n  },\n  get processColor(): processColor {\n    return require('./Libraries/StyleSheet/processColor');\n  },\n  get requireNativeComponent(): <T>(\n    uiViewClassName: string,\n  ) => HostComponent<T> {\n    return require('./Libraries/ReactNative/requireNativeComponent');\n  },\n  get RootTagContext(): RootTagContext {\n    return require('./Libraries/ReactNative/RootTag').RootTagContext;\n  },\n  get unstable_enableLogBox(): () => void {\n    return () =>\n      console.warn(\n        'LogBox is enabled by default so there is no need to call unstable_enableLogBox() anymore. This is a no op and will be removed in the next version.',\n      );\n  },\n  // Deprecated Prop Types\n  get ColorPropType(): $FlowFixMe {\n    console.error(\n      'ColorPropType will be removed from React Native, along with all ' +\n        'other PropTypes. We recommend that you migrate away from PropTypes ' +\n        'and switch to a type system like TypeScript. If you need to ' +\n        'continue using ColorPropType, migrate to the ' +\n        \"'deprecated-react-native-prop-types' package.\",\n    );\n    return require('deprecated-react-native-prop-types').ColorPropType;\n  },\n  get EdgeInsetsPropType(): $FlowFixMe {\n    console.error(\n      'EdgeInsetsPropType will be removed from React Native, along with all ' +\n        'other PropTypes. We recommend that you migrate away from PropTypes ' +\n        'and switch to a type system like TypeScript. If you need to ' +\n        'continue using EdgeInsetsPropType, migrate to the ' +\n        \"'deprecated-react-native-prop-types' package.\",\n    );\n    return require('deprecated-react-native-prop-types').EdgeInsetsPropType;\n  },\n  get PointPropType(): $FlowFixMe {\n    console.error(\n      'PointPropType will be removed from React Native, along with all ' +\n        'other PropTypes. We recommend that you migrate away from PropTypes ' +\n        'and switch to a type system like TypeScript. If you need to ' +\n        'continue using PointPropType, migrate to the ' +\n        \"'deprecated-react-native-prop-types' package.\",\n    );\n    return require('deprecated-react-native-prop-types').PointPropType;\n  },\n  get ViewPropTypes(): $FlowFixMe {\n    console.error(\n      'ViewPropTypes will be removed from React Native, along with all ' +\n        'other PropTypes. We recommend that you migrate away from PropTypes ' +\n        'and switch to a type system like TypeScript. If you need to ' +\n        'continue using ViewPropTypes, migrate to the ' +\n        \"'deprecated-react-native-prop-types' package.\",\n    );\n    return require('deprecated-react-native-prop-types').ViewPropTypes;\n  },\n};\n\nif (__DEV__) {\n  /* $FlowFixMe[prop-missing] This is intentional: Flow will error when\n   * attempting to access ART. */\n  /* $FlowFixMe[invalid-export] This is intentional: Flow will error when\n   * attempting to access ART. */\n  Object.defineProperty(module.exports, 'ART', {\n    configurable: true,\n    get() {\n      invariant(\n        false,\n        'ART has been removed from React Native. ' +\n          \"It can now be installed and imported from '@react-native-community/art' instead of 'react-native'. \" +\n          'See https://github.com/react-native-art/art',\n      );\n    },\n  });\n\n  /* $FlowFixMe[prop-missing] This is intentional: Flow will error when\n   * attempting to access ListView. */\n  /* $FlowFixMe[invalid-export] This is intentional: Flow will error when\n   * attempting to access ListView. */\n  Object.defineProperty(module.exports, 'ListView', {\n    configurable: true,\n    get() {\n      invariant(\n        false,\n        'ListView has been removed from React Native. ' +\n          'See https://fb.me/nolistview for more information or use ' +\n          '`deprecated-react-native-listview`.',\n      );\n    },\n  });\n\n  /* $FlowFixMe[prop-missing] This is intentional: Flow will error when\n   * attempting to access SwipeableListView. */\n  /* $FlowFixMe[invalid-export] This is intentional: Flow will error when\n   * attempting to access SwipeableListView. */\n  Object.defineProperty(module.exports, 'SwipeableListView', {\n    configurable: true,\n    get() {\n      invariant(\n        false,\n        'SwipeableListView has been removed from React Native. ' +\n          'See https://fb.me/nolistview for more information or use ' +\n          '`deprecated-react-native-swipeable-listview`.',\n      );\n    },\n  });\n\n  /* $FlowFixMe[prop-missing] This is intentional: Flow will error when\n   * attempting to access WebView. */\n  /* $FlowFixMe[invalid-export] This is intentional: Flow will error when\n   * attempting to access WebView. */\n  Object.defineProperty(module.exports, 'WebView', {\n    configurable: true,\n    get() {\n      invariant(\n        false,\n        'WebView has been removed from React Native. ' +\n          \"It can now be installed and imported from 'react-native-webview' instead of 'react-native'. \" +\n          'See https://github.com/react-native-webview/react-native-webview',\n      );\n    },\n  });\n\n  /* $FlowFixMe[prop-missing] This is intentional: Flow will error when\n   * attempting to access NetInfo. */\n  /* $FlowFixMe[invalid-export] This is intentional: Flow will error when\n   * attempting to access NetInfo. */\n  Object.defineProperty(module.exports, 'NetInfo', {\n    configurable: true,\n    get() {\n      invariant(\n        false,\n        'NetInfo has been removed from React Native. ' +\n          \"It can now be installed and imported from '@react-native-community/netinfo' instead of 'react-native'. \" +\n          'See https://github.com/react-native-netinfo/react-native-netinfo',\n      );\n    },\n  });\n\n  /* $FlowFixMe[prop-missing] This is intentional: Flow will error when\n   * attempting to access CameraRoll. */\n  /* $FlowFixMe[invalid-export] This is intentional: Flow will error when\n   * attempting to access CameraRoll. */\n  Object.defineProperty(module.exports, 'CameraRoll', {\n    configurable: true,\n    get() {\n      invariant(\n        false,\n        'CameraRoll has been removed from React Native. ' +\n          \"It can now be installed and imported from '@react-native-community/cameraroll' instead of 'react-native'. \" +\n          'See https://github.com/react-native-cameraroll/react-native-cameraroll',\n      );\n    },\n  });\n\n  /* $FlowFixMe[prop-missing] This is intentional: Flow will error when\n   * attempting to access ImageStore. */\n  /* $FlowFixMe[invalid-export] This is intentional: Flow will error when\n   * attempting to access ImageStore. */\n  Object.defineProperty(module.exports, 'ImageStore', {\n    configurable: true,\n    get() {\n      invariant(\n        false,\n        'ImageStore has been removed from React Native. ' +\n          'To get a base64-encoded string from a local image use either of the following third-party libraries:' +\n          \"* expo-file-system: `readAsStringAsync(filepath, 'base64')`\" +\n          \"* react-native-fs: `readFile(filepath, 'base64')`\",\n      );\n    },\n  });\n\n  /* $FlowFixMe[prop-missing] This is intentional: Flow will error when\n   * attempting to access ImageEditor. */\n  /* $FlowFixMe[invalid-export] This is intentional: Flow will error when\n   * attempting to access ImageEditor. */\n  Object.defineProperty(module.exports, 'ImageEditor', {\n    configurable: true,\n    get() {\n      invariant(\n        false,\n        'ImageEditor has been removed from React Native. ' +\n          \"It can now be installed and imported from '@react-native-community/image-editor' instead of 'react-native'. \" +\n          'See https://github.com/callstack/react-native-image-editor',\n      );\n    },\n  });\n\n  /* $FlowFixMe[prop-missing] This is intentional: Flow will error when\n   * attempting to access TimePickerAndroid. */\n  /* $FlowFixMe[invalid-export] This is intentional: Flow will error when\n   * attempting to access TimePickerAndroid. */\n  Object.defineProperty(module.exports, 'TimePickerAndroid', {\n    configurable: true,\n    get() {\n      invariant(\n        false,\n        'TimePickerAndroid has been removed from React Native. ' +\n          \"It can now be installed and imported from '@react-native-community/datetimepicker' instead of 'react-native'. \" +\n          'See https://github.com/react-native-datetimepicker/datetimepicker',\n      );\n    },\n  });\n\n  /* $FlowFixMe[prop-missing] This is intentional: Flow will error when\n   * attempting to access ToolbarAndroid. */\n  /* $FlowFixMe[invalid-export] This is intentional: Flow will error when\n   * attempting to access ToolbarAndroid. */\n  Object.defineProperty(module.exports, 'ToolbarAndroid', {\n    configurable: true,\n    get() {\n      invariant(\n        false,\n        'ToolbarAndroid has been removed from React Native. ' +\n          \"It can now be installed and imported from '@react-native-community/toolbar-android' instead of 'react-native'. \" +\n          'See https://github.com/react-native-toolbar-android/toolbar-android',\n      );\n    },\n  });\n\n  /* $FlowFixMe[prop-missing] This is intentional: Flow will error when\n   * attempting to access ViewPagerAndroid. */\n  /* $FlowFixMe[invalid-export] This is intentional: Flow will error when\n   * attempting to access ViewPagerAndroid. */\n  Object.defineProperty(module.exports, 'ViewPagerAndroid', {\n    configurable: true,\n    get() {\n      invariant(\n        false,\n        'ViewPagerAndroid has been removed from React Native. ' +\n          \"It can now be installed and imported from 'react-native-pager-view' instead of 'react-native'. \" +\n          'See https://github.com/callstack/react-native-pager-view',\n      );\n    },\n  });\n\n  /* $FlowFixMe[prop-missing] This is intentional: Flow will error when\n   * attempting to access CheckBox. */\n  /* $FlowFixMe[invalid-export] This is intentional: Flow will error when\n   * attempting to access CheckBox. */\n  Object.defineProperty(module.exports, 'CheckBox', {\n    configurable: true,\n    get() {\n      invariant(\n        false,\n        'CheckBox has been removed from React Native. ' +\n          \"It can now be installed and imported from '@react-native-community/checkbox' instead of 'react-native'. \" +\n          'See https://github.com/react-native-checkbox/react-native-checkbox',\n      );\n    },\n  });\n\n  /* $FlowFixMe[prop-missing] This is intentional: Flow will error when\n   * attempting to access SegmentedControlIOS. */\n  /* $FlowFixMe[invalid-export] This is intentional: Flow will error when\n   * attempting to access SegmentedControlIOS. */\n  Object.defineProperty(module.exports, 'SegmentedControlIOS', {\n    configurable: true,\n    get() {\n      invariant(\n        false,\n        'SegmentedControlIOS has been removed from React Native. ' +\n          \"It can now be installed and imported from '@react-native-community/segmented-checkbox' instead of 'react-native'.\" +\n          'See https://github.com/react-native-segmented-control/segmented-control',\n      );\n    },\n  });\n\n  /* $FlowFixMe[prop-missing] This is intentional: Flow will error when\n   * attempting to access StatusBarIOS. */\n  /* $FlowFixMe[invalid-export] This is intentional: Flow will error when\n   * attempting to access StatusBarIOS. */\n  Object.defineProperty(module.exports, 'StatusBarIOS', {\n    configurable: true,\n    get() {\n      invariant(\n        false,\n        'StatusBarIOS has been removed from React Native. ' +\n          'Has been merged with StatusBar. ' +\n          'See https://reactnative.dev/docs/statusbar',\n      );\n    },\n  });\n\n  /* $FlowFixMe[prop-missing] This is intentional: Flow will error when\n   * attempting to access PickerIOS. */\n  /* $FlowFixMe[invalid-export] This is intentional: Flow will error when\n   * attempting to access PickerIOS. */\n  Object.defineProperty(module.exports, 'PickerIOS', {\n    configurable: true,\n    get() {\n      invariant(\n        false,\n        'PickerIOS has been removed from React Native. ' +\n          \"It can now be installed and imported from '@react-native-picker/picker' instead of 'react-native'. \" +\n          'See https://github.com/react-native-picker/picker',\n      );\n    },\n  });\n\n  /* $FlowFixMe[prop-missing] This is intentional: Flow will error when\n   * attempting to access Picker. */\n  /* $FlowFixMe[invalid-export] This is intentional: Flow will error when\n   * attempting to access Picker. */\n  Object.defineProperty(module.exports, 'Picker', {\n    configurable: true,\n    get() {\n      invariant(\n        false,\n        'Picker has been removed from React Native. ' +\n          \"It can now be installed and imported from '@react-native-picker/picker' instead of 'react-native'. \" +\n          'See https://github.com/react-native-picker/picker',\n      );\n    },\n  });\n  /* $FlowFixMe[prop-missing] This is intentional: Flow will error when\n   * attempting to access DatePickerAndroid. */\n  /* $FlowFixMe[invalid-export] This is intentional: Flow will error when\n   * attempting to access DatePickerAndroid. */\n  Object.defineProperty(module.exports, 'DatePickerAndroid', {\n    configurable: true,\n    get() {\n      invariant(\n        false,\n        'DatePickerAndroid has been removed from React Native. ' +\n          \"It can now be installed and imported from '@react-native-community/datetimepicker' instead of 'react-native'. \" +\n          'See https://github.com/react-native-datetimepicker/datetimepicker',\n      );\n    },\n  });\n  /* $FlowFixMe[prop-missing] This is intentional: Flow will error when\n   * attempting to access MaskedViewIOS. */\n  /* $FlowFixMe[invalid-export] This is intentional: Flow will error when\n   * attempting to access MaskedViewIOS. */\n  Object.defineProperty(module.exports, 'MaskedViewIOS', {\n    configurable: true,\n    get() {\n      invariant(\n        false,\n        'MaskedViewIOS has been removed from React Native. ' +\n          \"It can now be installed and imported from '@react-native-community/react-native-masked-view' instead of 'react-native'. \" +\n          'See https://github.com/react-native-masked-view/masked-view',\n      );\n    },\n  });\n  /* $FlowFixMe[prop-missing] This is intentional: Flow will error when\n   * attempting to access AsyncStorage. */\n  /* $FlowFixMe[invalid-export] This is intentional: Flow will error when\n   * attempting to access AsyncStorage. */\n  Object.defineProperty(module.exports, 'AsyncStorage', {\n    configurable: true,\n    get() {\n      invariant(\n        false,\n        'AsyncStorage has been removed from react-native core. ' +\n          \"It can now be installed and imported from '@react-native-async-storage/async-storage' instead of 'react-native'. \" +\n          'See https://github.com/react-native-async-storage/async-storage',\n      );\n    },\n  });\n  /* $FlowFixMe[prop-missing] This is intentional: Flow will error when\n   * attempting to access ImagePickerIOS. */\n  /* $FlowFixMe[invalid-export] This is intentional: Flow will error when\n   * attempting to access ImagePickerIOS. */\n  Object.defineProperty(module.exports, 'ImagePickerIOS', {\n    configurable: true,\n    get() {\n      invariant(\n        false,\n        'ImagePickerIOS has been removed from React Native. ' +\n          \"Please upgrade to use either '@react-native-community/react-native-image-picker' or 'expo-image-picker'. \" +\n          \"If you cannot upgrade to a different library, please install the deprecated '@react-native-community/image-picker-ios' package. \" +\n          'See https://github.com/rnc-archive/react-native-image-picker-ios',\n      );\n    },\n  });\n}\n","'use strict';\n\nfunction nullthrows(x, message) {\n  if (x != null) {\n    return x;\n  }\n  var error = new Error(message !== undefined ? message : 'Got unexpected ' + x);\n  error.framesToPop = 1; // Skip nullthrows's own stack frame.\n  throw error;\n}\n\nmodule.exports = nullthrows;\nmodule.exports.default = nullthrows;\n\nObject.defineProperty(module.exports, '__esModule', {value: true});\n","/**\n * @license React\n * use-sync-external-store-shim.native.development.js\n *\n * Copyright (c) Facebook, Inc. and its affiliates.\n *\n * This source code is licensed under the MIT license found in the\n * LICENSE file in the root directory of this source tree.\n */\n\n'use strict';\n\nif (process.env.NODE_ENV !== \"production\") {\n  (function() {\n\n          'use strict';\n\n/* global __REACT_DEVTOOLS_GLOBAL_HOOK__ */\nif (\n  typeof __REACT_DEVTOOLS_GLOBAL_HOOK__ !== 'undefined' &&\n  typeof __REACT_DEVTOOLS_GLOBAL_HOOK__.registerInternalModuleStart ===\n    'function'\n) {\n  __REACT_DEVTOOLS_GLOBAL_HOOK__.registerInternalModuleStart(new Error());\n}\n          var React = require('react');\n\nvar ReactSharedInternals = React.__SECRET_INTERNALS_DO_NOT_USE_OR_YOU_WILL_BE_FIRED;\n\nfunction error(format) {\n  {\n    {\n      for (var _len2 = arguments.length, args = new Array(_len2 > 1 ? _len2 - 1 : 0), _key2 = 1; _key2 < _len2; _key2++) {\n        args[_key2 - 1] = arguments[_key2];\n      }\n\n      printWarning('error', format, args);\n    }\n  }\n}\n\nfunction printWarning(level, format, args) {\n  // When changing this logic, you might want to also\n  // update consoleWithStackDev.www.js as well.\n  {\n    var ReactDebugCurrentFrame = ReactSharedInternals.ReactDebugCurrentFrame;\n    var stack = ReactDebugCurrentFrame.getStackAddendum();\n\n    if (stack !== '') {\n      format += '%s';\n      args = args.concat([stack]);\n    } // eslint-disable-next-line react-internal/safe-string-coercion\n\n\n    var argsWithFormat = args.map(function (item) {\n      return String(item);\n    }); // Careful: RN currently depends on this prefix\n\n    argsWithFormat.unshift('Warning: ' + format); // We intentionally don't use spread (or .apply) directly because it\n    // breaks IE9: https://github.com/facebook/react/issues/13610\n    // eslint-disable-next-line react-internal/no-production-logging\n\n    Function.prototype.apply.call(console[level], console, argsWithFormat);\n  }\n}\n\n/**\n * inlined Object.is polyfill to avoid requiring consumers ship their own\n * https://developer.mozilla.org/en-US/docs/Web/JavaScript/Reference/Global_Objects/Object/is\n */\nfunction is(x, y) {\n  return x === y && (x !== 0 || 1 / x === 1 / y) || x !== x && y !== y // eslint-disable-line no-self-compare\n  ;\n}\n\nvar objectIs = typeof Object.is === 'function' ? Object.is : is;\n\n// dispatch for CommonJS interop named imports.\n\nvar useState = React.useState,\n    useEffect = React.useEffect,\n    useLayoutEffect = React.useLayoutEffect,\n    useDebugValue = React.useDebugValue;\nvar didWarnOld18Alpha = false;\nvar didWarnUncachedGetSnapshot = false; // Disclaimer: This shim breaks many of the rules of React, and only works\n// because of a very particular set of implementation details and assumptions\n// -- change any one of them and it will break. The most important assumption\n// is that updates are always synchronous, because concurrent rendering is\n// only available in versions of React that also have a built-in\n// useSyncExternalStore API. And we only use this shim when the built-in API\n// does not exist.\n//\n// Do not assume that the clever hacks used by this hook also work in general.\n// The point of this shim is to replace the need for hacks by other libraries.\n\nfunction useSyncExternalStore(subscribe, getSnapshot, // Note: The shim does not use getServerSnapshot, because pre-18 versions of\n// React do not expose a way to check if we're hydrating. So users of the shim\n// will need to track that themselves and return the correct value\n// from `getSnapshot`.\ngetServerSnapshot) {\n  {\n    if (!didWarnOld18Alpha) {\n      if (React.startTransition !== undefined) {\n        didWarnOld18Alpha = true;\n\n        error('You are using an outdated, pre-release alpha of React 18 that ' + 'does not support useSyncExternalStore. The ' + 'use-sync-external-store shim will not work correctly. Upgrade ' + 'to a newer pre-release.');\n      }\n    }\n  } // Read the current snapshot from the store on every render. Again, this\n  // breaks the rules of React, and only works here because of specific\n  // implementation details, most importantly that updates are\n  // always synchronous.\n\n\n  var value = getSnapshot();\n\n  {\n    if (!didWarnUncachedGetSnapshot) {\n      var cachedValue = getSnapshot();\n\n      if (!objectIs(value, cachedValue)) {\n        error('The result of getSnapshot should be cached to avoid an infinite loop');\n\n        didWarnUncachedGetSnapshot = true;\n      }\n    }\n  } // Because updates are synchronous, we don't queue them. Instead we force a\n  // re-render whenever the subscribed state changes by updating an some\n  // arbitrary useState hook. Then, during render, we call getSnapshot to read\n  // the current value.\n  //\n  // Because we don't actually use the state returned by the useState hook, we\n  // can save a bit of memory by storing other stuff in that slot.\n  //\n  // To implement the early bailout, we need to track some things on a mutable\n  // object. Usually, we would put that in a useRef hook, but we can stash it in\n  // our useState hook instead.\n  //\n  // To force a re-render, we call forceUpdate({inst}). That works because the\n  // new object always fails an equality check.\n\n\n  var _useState = useState({\n    inst: {\n      value: value,\n      getSnapshot: getSnapshot\n    }\n  }),\n      inst = _useState[0].inst,\n      forceUpdate = _useState[1]; // Track the latest getSnapshot function with a ref. This needs to be updated\n  // in the layout phase so we can access it during the tearing check that\n  // happens on subscribe.\n\n\n  useLayoutEffect(function () {\n    inst.value = value;\n    inst.getSnapshot = getSnapshot; // Whenever getSnapshot or subscribe changes, we need to check in the\n    // commit phase if there was an interleaved mutation. In concurrent mode\n    // this can happen all the time, but even in synchronous mode, an earlier\n    // effect may have mutated the store.\n\n    if (checkIfSnapshotChanged(inst)) {\n      // Force a re-render.\n      forceUpdate({\n        inst: inst\n      });\n    }\n  }, [subscribe, value, getSnapshot]);\n  useEffect(function () {\n    // Check for changes right before subscribing. Subsequent changes will be\n    // detected in the subscription handler.\n    if (checkIfSnapshotChanged(inst)) {\n      // Force a re-render.\n      forceUpdate({\n        inst: inst\n      });\n    }\n\n    var handleStoreChange = function () {\n      // TODO: Because there is no cross-renderer API for batching updates, it's\n      // up to the consumer of this library to wrap their subscription event\n      // with unstable_batchedUpdates. Should we try to detect when this isn't\n      // the case and print a warning in development?\n      // The store changed. Check if the snapshot changed since the last time we\n      // read from the store.\n      if (checkIfSnapshotChanged(inst)) {\n        // Force a re-render.\n        forceUpdate({\n          inst: inst\n        });\n      }\n    }; // Subscribe to the store and return a clean-up function.\n\n\n    return subscribe(handleStoreChange);\n  }, [subscribe]);\n  useDebugValue(value);\n  return value;\n}\n\nfunction checkIfSnapshotChanged(inst) {\n  var latestGetSnapshot = inst.getSnapshot;\n  var prevValue = inst.value;\n\n  try {\n    var nextValue = latestGetSnapshot();\n    return !objectIs(prevValue, nextValue);\n  } catch (error) {\n    return true;\n  }\n}\n\nvar shim =  useSyncExternalStore;\nvar useSyncExternalStore$1 = React.useSyncExternalStore !== undefined ? React.useSyncExternalStore : shim;\n\nexports.useSyncExternalStore = useSyncExternalStore$1;\n          /* global __REACT_DEVTOOLS_GLOBAL_HOOK__ */\nif (\n  typeof __REACT_DEVTOOLS_GLOBAL_HOOK__ !== 'undefined' &&\n  typeof __REACT_DEVTOOLS_GLOBAL_HOOK__.registerInternalModuleStop ===\n    'function'\n) {\n  __REACT_DEVTOOLS_GLOBAL_HOOK__.registerInternalModuleStop(new Error());\n}\n        \n  })();\n}\n","'use strict';\n\nif (process.env.NODE_ENV === 'production') {\n  module.exports = require('../cjs/use-sync-external-store-shim.native.production.min.js');\n} else {\n  module.exports = require('../cjs/use-sync-external-store-shim.native.development.js');\n}\n"],"names":["_NativeActionSheetManager","_interopRequireDefault","require","_excluded","processColor","invariant","ActionSheetIOS","showActionSheetWithOptions","options","callback","RCTActionSheetManager","tintColor","cancelButtonTintColor","destructiveButtonIndex","remainingOptions","_objectWithoutProperties2","default","destructiveButtonIndices","Array","isArray","processedTintColor","processedCancelButtonTintColor","Object","assign","showShareActionSheetWithOptions","failureCallback","successCallback","dismissActionSheet","module","exports","TurboModuleRegistry","_interopRequireWildcard","_getRequireWildcardCache","nodeInterop","WeakMap","cacheBabelInterop","cacheNodeInterop","obj","__esModule","cache","has","get","newObj","hasPropertyDescriptor","defineProperty","getOwnPropertyDescriptor","key","prototype","hasOwnProperty","call","desc","set","_default","_Animated","_react","useAnimatedValue","initialValue","config","ref","useRef","current","Animated","Value","_RCTDeviceEventEmitter","_RendererProxy","_Platform","_legacySendAccessibilityEvent","_NativeAccessibilityInfo","_NativeAccessibilityManager","EventNames","Platform","OS","Map","AccessibilityInfo","isBoldTextEnabled","Promise","resolve","reject","NativeAccessibilityManagerIOS","getCurrentBoldTextState","isGrayscaleEnabled","getCurrentGrayscaleState","isInvertColorsEnabled","getCurrentInvertColorsState","isReduceMotionEnabled","NativeAccessibilityInfoAndroid","getCurrentReduceMotionState","prefersCrossFadeTransitions","getCurrentPrefersCrossFadeTransitionsState","isReduceTransparencyEnabled","getCurrentReduceTransparencyState","isScreenReaderEnabled","isTouchExplorationEnabled","getCurrentVoiceOverState","isAccessibilityServiceEnabled","addEventListener","eventName","handler","deviceEventName","remove","RCTDeviceEventEmitter","addListener","setAccessibilityFocus","reactTag","legacySendAccessibilityEvent","sendAccessibilityEvent","handle","eventType","announceForAccessibility","announcement","announceForAccessibilityWithOptions","getRecommendedTimeoutMillis","originalTimeout","_StyleSheet","_View","React","_jsxRuntime","_this","_jsxFileName","PlatformActivityIndicator","GRAY","ActivityIndicator","_ref","forwardedRef","_ref$animating","animating","_ref$color","color","_ref$hidesWhenStopped","hidesWhenStopped","onLayout","_ref$size","size","style","restProps","sizeStyle","sizeProp","styles","sizeSmall","sizeLarge","height","width","nativeProps","androidProps","styleAttr","indeterminate","jsx","StyleSheet","compose","container","children","ActivityIndicatorWithRef","forwardRef","displayName","create","alignItems","justifyContent","_codegenNativeComponent","codegenNativeComponent","paperComponentName","_classCallCheck2","_createClass2","_inherits2","_possibleConstructorReturn2","_getPrototypeOf2","_Text","_TouchableNativeFeedback","_TouchableOpacity","_invariant","_createSuper","Derived","hasNativeReflectConstruct","_isNativeReflectConstruct","_createSuperInternal","Super","result","NewTarget","constructor","Reflect","construct","arguments","apply","sham","Proxy","Boolean","valueOf","e","Button","_React$Component","_super","value","render","_accessibilityState2","_accessibilityState3","_this$props","props","accessibilityLabel","accessibilityState","ariaBusy","ariaChecked","ariaDisabled","ariaExpanded","ariaLabel","ariaSelected","importantForAccessibility","onPress","touchSoundDisabled","title","hasTVPreferredFocus","nextFocusDown","nextFocusForward","nextFocusLeft","nextFocusRight","nextFocusUp","testID","accessible","accessibilityActions","accessibilityHint","accessibilityLanguage","onAccessibilityAction","buttonStyles","button","textStyles","text","push","backgroundColor","_accessibilityState","busy","checked","disabled","expanded","selected","buttonDisabled","textDisabled","formattedTitle","toUpperCase","Touchable","TouchableNativeFeedback","TouchableOpacity","_importantForAccessibility","accessibilityRole","Component","select","ios","android","elevation","borderRadius","textAlign","margin","fontSize","fontWeight","_NativeClipboard","getString","NativeClipboard","setString","content","getEnforcing","DummyDatePickerIOS","dummyDatePickerIOS","datePickerText","borderWidth","borderColor","_codegenNativeCommands","Commands","codegenNativeCommands","supportedCommands","_dismissKeyboard","_StatusBar","_AndroidDrawerLayoutNativeComponent","_nullthrows","DRAWER_STATES","DrawerLayoutAndroid","_len","length","args","_key","concat","_nativeRef","createRef","state","statusBarBackgroundColor","_onDrawerSlide","event","onDrawerSlide","keyboardDismissMode","dismissKeyboard","_onDrawerOpen","onDrawerOpen","_onDrawerClose","onDrawerClose","_onDrawerStateChanged","onDrawerStateChanged","nativeEvent","drawerState","_this$props$drawerBac","drawerBackgroundColor","renderNavigationView","drawStatusBar","Version","drawerViewWrapper","jsxs","drawerSubview","drawerWidth","collapsable","drawerStatusBar","childrenWrapper","mainSubview","translucent","statusBar","drawerPosition","drawerLockMode","base","openDrawer","nullthrows","closeDrawer","blur","focus","measure","measureInWindow","measureLayout","relativeToNativeNode","onSuccess","onFail","setNativeProps","console","warn","Left","Right","flex","position","top","left","right","bottom","StatusBar","currentHeight","_LayoutAnimation","_AccessibilityInfo","_Keyboard","KeyboardAvoidingView","_frame","_keyboardEvent","_subscriptions","_initialFrameHeight","_onKeyboardChange","_updateBottomIfNecessary","_onLayout","_asyncToGenerator2","wasFrameNull","layout","_x","setState","_this$_keyboardEvent","duration","easing","endCoordinates","_relativeKeyboardHeight","LayoutAnimation","configureNext","update","type","Types","viewRef","_relativeKeyboardHeight2","keyboardFrame","_this$props$keyboardV","frame","screenY","keyboardY","keyboardVerticalOffset","behavior","Math","max","y","_x2","componentDidMount","Keyboard","componentWillUnmount","forEach","subscription","contentContainerStyle","_this$props$enabled","enabled","_this$props$keyboardV2","bottomHeight","heightStyle","paddingBottom","_PressabilityDebug","_usePressability","_useAndroidRippleForView","Pressable","_props$ariaValuemax","_props$accessibilityV","_props$ariaValuemin","_props$accessibilityV2","_props$ariaValuenow","_props$accessibilityV3","_props$ariaValuetext","_props$accessibilityV4","_restProps$ariaModal","ariaLive","android_disableSound","android_ripple","cancelable","delayHoverIn","delayHoverOut","delayLongPress","focusable","hitSlop","onHoverIn","onHoverOut","onLongPress","onPressIn","onPressOut","pressRetentionOffset","testOnly_pressed","unstable_pressDelay","useImperativeHandle","android_rippleConfig","useAndroidRippleForView","_usePressState","usePressState","_usePressState2","_slicedToArray2","pressed","setPressed","accessibilityValue","min","now","accessibilityLiveRegion","restPropsWithDefaults","viewProps","accessibilityViewIsModal","useMemo","pressRectOffset","delayPressIn","onPressMove","eventHandlers","usePressability","__DEV__","PressabilityDebugView","forcePressed","_useState","useState","_useState2","MemoedPressable","memo","_processColor","_ViewNativeComponent","rippleConfig","borderless","radius","foreground","processedColor","nativeRippleValue","rippleRadius","nativeForegroundAndroid","nativeBackgroundAndroid","view","_event$nativeEvent$lo","_event$nativeEvent$lo2","hotspotUpdate","locationX","locationY","_event$nativeEvent$lo3","_event$nativeEvent$lo4","_ProgressBarAndroidNativeComponent","ProgressBarAndroid","_ref$styleAttr","_ref$indeterminate","ProgressBarAndroidToExport","interfaceOnly","DummyProgressViewIOS","dummy","_SliderNativeComponent","Slider","_props$accessibilityS","slider","_props$value","_props$minimumValue","minimumValue","_props$maximumValue","maximumValue","_props$step","step","onValueChange","onSlidingComplete","localProps","onValueChangeEvent","userEvent","fromUser","onSlidingCompleteEvent","onResponderTerminationRequest","onStartShouldSetResponder","SliderWithRef","_useMergeRefs","_AndroidSwitchNativeComponent","_SwitchNativeComponent","returnsFalse","returnsTrue","SwitchWithForwardedRef","Switch","ios_backgroundColor","onChange","thumbColor","trackColor","trackColorForFalse","false","trackColorForTrue","true","nativeSwitchRef","useMergeRefs","_React$useState","_React$useState2","native","setNative","handleChange","useLayoutEffect","_nativeSwitchRef$curr","jsValue","shouldUpdateNativeSwitch","AndroidSwitchCommands","setNativeValue","SwitchCommands","setValue","_props$accessibilityR","_disabled","platformProps","on","thumbTintColor","trackTintColor","_props$accessibilityR2","onTintColor","excludedPlatforms","_RCTInputAccessoryViewNativeComponent","InputAccessoryView","Children","count","nativeID","NativeComponentRegistry","_RCTTextInputViewConfig","__INTERNAL_VIEW_CONFIG","uiViewClassName","RCTTextInputViewConfig","validAttributes","dataDetectorTypes","MultilineTextInputNativeComponent","_flattenStyle","_TextAncestor","_setAndForwardRef","_TextInputState","_excluded2","AndroidTextInput","AndroidTextInputCommands","RCTSinglelineTextInputView","RCTSinglelineTextInputNativeCommands","RCTMultilineTextInputView","RCTMultilineTextInputNativeCommands","emptyFunctionThatReturnsTrue","InternalTextInput","_props$selection$end","_props$multiline","_props$ariaBusy","_props$ariaChecked","_props$accessibilityS2","_props$ariaDisabled","_props$accessibilityS3","_props$ariaExpanded","_props$accessibilityS4","_props$ariaSelected","_props$accessibilityS5","inputRef","selection","start","end","mostRecentEventCount","setMostRecentEventCount","_useState3","_useState4","lastNativeText","setLastNativeText","_useState5","_useState6","lastNativeSelectionState","setLastNativeSelection","lastNativeSelection","lastNativeSelectionEventCount","viewCommands","multiline","defaultValue","nativeUpdate","keys","_selection$start","_selection","_selection$end","_selection2","setTextAndSelection","inputRefValue","TextInputState","registerInput","unregisterInput","currentlyFocusedInput","clear","setSelection","isFocused","getNativeRef","_setNativeRef","setAndForwardRef","getForwardedRef","setLocalRef","_onChange","currentText","onChangeText","eventCount","_onChangeSync","unstable_onChangeSync","unstable_onChangeTextSync","_onSelectionChange","onSelectionChange","_onFocus","focusInput","onFocus","_onBlur","blurInput","onBlur","_onScroll","onScroll","textInput","submitBehavior","blurOnSubmit","editable","rejectResponderTermination","caretHidden","isTesting","RCTTextInputView","flatten","multilineInput","useOnChangeSync","onKeyPressSync","unstable_onKeyPressSync","onChangeSync","onContentSizeChange","onSelectionChangeShouldSetResponder","_props$ariaLabelledb","_props$placeholder","_props$rows","autoCapitalize","_accessibilityLabelledBy","accessibilityLabelledBy","placeholder","childCount","disableFullscreenUI","numberOfLines","rows","textBreakStrategy","Provider","enterKeyHintToReturnTypeMap","enter","done","go","next","previous","search","send","inputModeToKeyboardTypeMap","none","decimal","numeric","tel","email","url","autoCompleteWebToAutoCompleteAndroidMap","bday","country","name","off","sex","username","autoCompleteWebToTextContentTypeMap","nickname","organization","ExportedForwardRef","TextInput","_ref2","_autoCompleteWebToAut","_ref2$allowFontScalin","allowFontScaling","_ref2$rejectResponder","_ref2$underlineColorA","underlineColorAndroid","autoComplete","textContentType","readOnly","enterKeyHint","returnKeyType","inputMode","keyboardType","flattenStyle","verticalAlign","textAlignVertical","verticalAlignToTextAlignVerticalMap","undefined","propTypes","TextInputPropTypes","State","currentlyFocusedField","focusTextInput","blurTextInput","paddingTop","auto","middle","_NativeToastAndroid","ToastAndroidConstants","NativeToastAndroid","getConstants","ToastAndroid","SHORT","LONG","TOP","BOTTOM","CENTER","show","message","showWithGravity","gravity","showWithGravityAndOffset","xOffset","yOffset","_PooledClass","twoArgumentPooler","PooledClass","BoundingDimensions","destructor","getPooledFromElement","element","getPooled","offsetWidth","offsetHeight","addPoolingTo","oneArgumentPooler","copyFieldsFrom","Klass","instancePool","instance","pop","a1","a2","threeArgumentPooler","a3","fourArgumentPooler","a4","standardReleaser","poolSize","DEFAULT_POOL_SIZE","DEFAULT_POOLER","CopyConstructor","pooler","NewKlass","release","Position","_UIManager","_SoundManager","_BoundingDimensions","_Position","_this2","extractSingleTouch","touches","changedTouches","hasTouches","hasChangedTouches","States","NOT_RESPONDER","RESPONDER_INACTIVE_PRESS_IN","RESPONDER_INACTIVE_PRESS_OUT","RESPONDER_ACTIVE_PRESS_IN","RESPONDER_ACTIVE_PRESS_OUT","RESPONDER_ACTIVE_LONG_PRESS_IN","RESPONDER_ACTIVE_LONG_PRESS_OUT","ERROR","baseStatesConditions","IsActive","IsPressingIn","IsLongPressingIn","Signals","DELAY","RESPONDER_GRANT","RESPONDER_RELEASE","RESPONDER_TERMINATED","ENTER_PRESS_RECT","LEAVE_PRESS_RECT","LONG_PRESS_DETECTED","Transitions","error","HIGHLIGHT_DELAY_MS","PRESS_EXPAND_PX","LONG_PRESS_THRESHOLD","LONG_PRESS_DELAY_MS","LONG_PRESS_ALLOWED_MOVEMENT","TouchableMixin","isTV","touchableDelayTimeout","clearTimeout","longPressDelayTimeout","pressOutDelayTimeout","touchableGetInitialState","touchable","touchState","responderID","touchableHandleResponderTerminationRequest","touchableHandleStartShouldSetResponder","touchableLongPressCancelsPress","touchableHandleResponderGrant","dispatchID","currentTarget","persist","_receiveSignal","delayMS","touchableGetHighlightDelayMS","isNaN","setTimeout","_handleDelay","bind","longDelayMS","touchableGetLongPressDelayMS","_handleLongDelay","touchableHandleResponderRelease","pressInLocation","touchableHandleResponderTerminate","touchableHandleResponderMove","positionOnActivate","dimensionsOnActivate","touchableGetPressRectOffset","pressExpandLeft","pressExpandTop","pressExpandRight","pressExpandBottom","touchableGetHitSlop","touch","pageX","pageY","movedDistance","_getDistanceBetweenPoints","_cancelLongPressDelayTimeout","isTouchWithinActive","prevState","curState","touchableHandleFocus","touchableHandleBlur","_remeasureMetricsOnActivation","UIManager","_handleQueryLayout","l","t","w","h","globalX","globalY","signal","nextState","Error","_performSideEffectsForTransition","_isHighlight","_savePressInLocation","aX","aY","bX","bY","deltaX","deltaY","sqrt","curIsHighlight","newIsHighlight","isFinalSignal","isInitialTransition","isActiveTransition","touchableHandleLongPress","_startHighlight","_endHighlight","hasLongPressHandler","pressIsLongButStillCallOnPress","shouldInvokePress","touchableHandlePress","SoundManager","playTouchSound","touchableHandleActivePressIn","touchableHandleActivePressOut","touchableGetPressOutDelayMS","withoutDefaultFocusAndBlur","TouchableMixinWithoutDefaultFocusAndBlur","Mixin","renderDebugView","_Pressability","pressability","Pressability","_createPressabilityConfig","_this$props$ariaDisa","_this$props$accessibi","accessibilityStateDisabled","delayPressOut","minPressDuration","_dispatchHotspotUpdate","_dispatchPressedStateChange","hostComponentRef","findHostInstance_DEPRECATED","_event$nativeEvent","_this$props$ariaBusy","_this$props$accessibi2","_this$props$ariaChec","_this$props$accessibi3","_this$props$ariaDisa2","_this$props$accessibi4","_this$props$ariaExpa","_this$props$accessibi5","_this$props$ariaSele","_this$props$accessibi6","_this$props$ariaValu","_this$props$accessibi7","_this$props$ariaValu2","_this$props$accessibi8","_this$props$ariaValu3","_this$props$accessibi9","_this$props$ariaValu4","_this$props$accessibi10","_this$props$ariaLive","_this$props$ariaLabe","_this$props$ariaModa","_this$props$ariaHidd","only","View","_this$state$pressabil","getEventHandlers","eventHandlersWithoutBlurAndFocus","cloneElement","getBackgroundProp","background","SelectableBackground","useForeground","accessibilityElementsHidden","componentDidUpdate","prevProps","configure","reset","attribute","SelectableBackgroundBorderless","Ripple","canUseNativeForeground","_Easing","_flattenStyle4","_this3","anim","_getChildStyleOpacityWithDefault","_this$props$disabled","_opacityInactive","_opacityActive","dispatchConfig","registrationName","_setOpacityTo","toValue","timing","Easing","inOut","quad","useNativeDriver","_this$props$activeOpa","activeOpacity","opacity","hostRef","_flattenStyle2","_flattenStyle3","_Image","ImageBackground","_viewRef","_captureRef","imageStyle","imageRef","flattenedStyle","accessibilityIgnoresInvertColors","absoluteFill","InteractionManager","TouchHistoryMath","currentCentroidXOfTouchesChangedAfter","currentCentroidYOfTouchesChangedAfter","previousCentroidXOfTouchesChangedAfter","previousCentroidYOfTouchesChangedAfter","currentCentroidX","currentCentroidY","PanResponder","_initializeGestureState","gestureState","moveX","moveY","x0","y0","dx","dy","vx","vy","numberActiveTouches","_accountsForMovesUpTo","_updateGestureStateOnMove","touchHistory","movedAfter","prevX","x","prevY","nextDX","nextDY","dt","mostRecentTimeStamp","interactionState","stateID","random","panHandlers","onStartShouldSetPanResponder","onMoveShouldSetResponder","onMoveShouldSetPanResponder","onStartShouldSetResponderCapture","onStartShouldSetPanResponderCapture","onMoveShouldSetResponderCapture","onMoveShouldSetPanResponderCapture","onResponderGrant","createInteractionHandle","onPanResponderGrant","onShouldBlockNativeResponder","onResponderReject","clearInteractionHandle","onPanResponderReject","onResponderRelease","onPanResponderRelease","onResponderStart","onPanResponderStart","onResponderMove","onPanResponderMove","onResponderEnd","onPanResponderEnd","onResponderTerminate","onPanResponderTerminate","onPanResponderTerminationRequest","getInteractionHandle","centroidDimension","touchesChangedAfter","isXAxis","ofCurrent","touchBank","total","oneTouchData","indexOfSingleActiveTouch","touchActive","currentTimeStamp","currentPageX","currentPageY","previousPageX","previousPageY","i","touchTrack","toAdd","noCentroid","_NativeEventEmitter2","_InteractionManager","_NativeIntentAndroid","_NativeLinkingManager","Linking","_NativeEventEmitter","NativeLinkingManager","listener","context","openURL","_validateURL","NativeIntentAndroid","canOpenURL","openSettings","getInitialURL","runAfterInteractions","then","sendIntent","action","extras","NativeEventEmitter","_VirtualizedListContext","_ModalInjection","_NativeModalManager","_RCTModalHostViewNativeComponent","_container","_ModalInjection$unsta","ScrollView","AppContainer","I18nManager","_require","RootTagContext","ModalEventEmitter","NativeModalManager","uniqueModalIdentifier","confirmProps","presentationStyle","transparent","Modal","_identifier","_eventSubscription","modalID","onDismiss","visible","containerStyles","animationType","innerChildren","rootTag","hardwareAccelerated","onRequestClose","onShow","statusBarTranslucent","identifier","modal","_shouldSetResponder","supportedOrientations","onOrientationChange","VirtualizedListContextResetter","Context","defaultProps","contextType","side","isRTL","_defineProperty2","ExportedModal","ModalInjection","unstable_Modal","_NativeDialogManagerAndroid","_NativePermissionsAndroid","PERMISSION_REQUEST_RESULT","freeze","GRANTED","DENIED","NEVER_ASK_AGAIN","PERMISSIONS","READ_CALENDAR","WRITE_CALENDAR","CAMERA","READ_CONTACTS","WRITE_CONTACTS","GET_ACCOUNTS","ACCESS_FINE_LOCATION","ACCESS_COARSE_LOCATION","ACCESS_BACKGROUND_LOCATION","RECORD_AUDIO","READ_PHONE_STATE","CALL_PHONE","READ_CALL_LOG","WRITE_CALL_LOG","ADD_VOICEMAIL","READ_VOICEMAIL","WRITE_VOICEMAIL","USE_SIP","PROCESS_OUTGOING_CALLS","BODY_SENSORS","BODY_SENSORS_BACKGROUND","SEND_SMS","RECEIVE_SMS","READ_SMS","RECEIVE_WAP_PUSH","RECEIVE_MMS","READ_EXTERNAL_STORAGE","READ_MEDIA_IMAGES","READ_MEDIA_VIDEO","READ_MEDIA_AUDIO","WRITE_EXTERNAL_STORAGE","BLUETOOTH_CONNECT","BLUETOOTH_SCAN","BLUETOOTH_ADVERTISE","ACCESS_MEDIA_LOCATION","ACCEPT_HANDOVER","ACTIVITY_RECOGNITION","ANSWER_PHONE_CALLS","READ_PHONE_NUMBERS","UWB_RANGING","POST_NOTIFICATION","POST_NOTIFICATIONS","NEARBY_WIFI_DEVICES","PermissionsAndroid","RESULTS","checkPermission","permission","NativePermissionsAndroid","check","_requestPermission","rationale","response","request","requestPermission","_request","shouldShowRationale","shouldShowRequestPermissionRationale","NativeDialogManagerAndroid","showAlert","_x3","_x4","requestMultiple","permissions","requestMultiplePermissions","PermissionsAndroidInstance","_NativePushNotificationManagerIOS","PushNotificationEmitter","NativePushNotificationManagerIOS","_notifHandlers","DEVICE_NOTIF_EVENT","NOTIF_REGISTER_EVENT","NOTIF_REGISTRATION_ERROR_EVENT","DEVICE_LOCAL_NOTIF_EVENT","PushNotificationIOS","nativeNotif","_data","_remoteNotificationCompleteCallbackCalled","_isRemote","remote","_notificationId","notificationId","notifKey","notifVal","_alert","alert","_sound","sound","_badgeCount","badge","_category","category","_contentAvailable","_threadID","applicationIconBadgeNumber","soundName","alertBody","userInfo","finish","fetchResult","onFinishRemoteNotification","getMessage","getSound","getCategory","getAlert","getContentAvailable","getBadgeCount","getData","getThreadID","presentLocalNotification","details","scheduleLocalNotification","cancelAllLocalNotifications","removeAllDeliveredNotifications","getDeliveredNotifications","removeDeliveredNotifications","identifiers","setApplicationIconBadgeNumber","number","getApplicationIconBadgeNumber","cancelLocalNotifications","getScheduledLocalNotifications","notifData","registrationInfo","deviceToken","errorInfo","removeEventListener","delete","requestPermissions","requestedPermissions","abandonPermissions","checkPermissions","getInitialNotification","notification","getAuthorizationStatus","FetchResult","NewData","NoData","ResultFailed","Settings","settings","watchKeys","clearWatch","watchId","_NativeShareModule","Share","share","NativeShareModule","newContent","dialogTitle","activityType","NativeActionSheetManager","subject","anchor","excludedActivityTypes","success","sharedAction","dismissedAction","DynamicColorIOS","tuple","_EventEmitter","_DebugEnvironment","_NativeAppearance","eventEmitter","EventEmitter","NativeAppearance","nativeEventEmitter","newAppearance","colorScheme","emit","getColorScheme","isAsyncDebugging","nativeColorScheme","addChangeListener","global","nativeExtensions","nativeCallSyncHook","RN$Bridgeless","useColorScheme","_Appearance","_shim","useSyncExternalStore","appearanceSubscription","Appearance","_Dimensions","useWindowDimensions","Dimensions","dimensions","setDimensions","useEffect","window","scale","fontScale","_NativeVibration","_vibrating","_id","_default_vibration_length","vibrateByPattern","pattern","repeat","NativeVibration","vibrate","slice","vibrateScheduler","id","nextIndex","Vibration","cancel","LogBox","YellowBox","ignoreWarnings","patterns","ignoreLogs","install","uninstall","_React$Component2","_super2","warnOnce","DatePickerIOS","FlatList","Image","ProgressViewIOS","RefreshControl","SafeAreaView","SectionList","Text","TouchableHighlight","TouchableWithoutFeedback","VirtualizedList","VirtualizedSectionList","Alert","AppRegistry","AppState","BackHandler","Clipboard","DeviceInfo","DevSettings","findNodeHandle","Networking","PixelRatio","Systrace","unstable_batchedUpdates","UTFSequence","DeviceEventEmitter","NativeAppEventEmitter","NativeModules","PlatformColor","requireNativeComponent","unstable_enableLogBox","ColorPropType","EdgeInsetsPropType","PointPropType","ViewPropTypes","configurable"],"sourceRoot":""}